                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.0 #8604 (May 11 2013) (Linux)
                              4 ; This file was generated Sun Nov 24 17:43:13 2013
                              5 ;--------------------------------------------------------
                              6 	.module parameters
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _parameter_info
                             13 	.globl _crc16
                             14 	.globl _radio_get_transmit_power
                             15 	.globl _radio_set_transmit_power
                             16 	.globl _flash_write_scratch
                             17 	.globl _flash_read_scratch
                             18 	.globl _flash_erase_scratch
                             19 	.globl _serial_device_valid_speed
                             20 	.globl _strcmp
                             21 	.globl _TDM_SYNC_PIN
                             22 	.globl _NSS1
                             23 	.globl _IRQ
                             24 	.globl _PIN_ENABLE
                             25 	.globl _PIN_CONFIG
                             26 	.globl _LED_GREEN
                             27 	.globl _LED_RED
                             28 	.globl _SPI0EN
                             29 	.globl _TXBMT0
                             30 	.globl _NSS0MD0
                             31 	.globl _NSS0MD1
                             32 	.globl _RXOVRN0
                             33 	.globl _MODF0
                             34 	.globl _WCOL0
                             35 	.globl _SPIF0
                             36 	.globl _AD0CM0
                             37 	.globl _AD0CM1
                             38 	.globl _AD0CM2
                             39 	.globl _AD0WINT
                             40 	.globl _AD0BUSY
                             41 	.globl _AD0INT
                             42 	.globl _BURSTEN
                             43 	.globl _AD0EN
                             44 	.globl _CCF0
                             45 	.globl _CCF1
                             46 	.globl _CCF2
                             47 	.globl _CCF3
                             48 	.globl _CCF4
                             49 	.globl _CCF5
                             50 	.globl _CR
                             51 	.globl _CF
                             52 	.globl _P
                             53 	.globl _F1
                             54 	.globl _OV
                             55 	.globl _RS0
                             56 	.globl _RS1
                             57 	.globl _F0
                             58 	.globl _AC
                             59 	.globl _CY
                             60 	.globl _T2XCLK
                             61 	.globl _T2RCLK
                             62 	.globl _TR2
                             63 	.globl _T2SPLIT
                             64 	.globl _TF2CEN
                             65 	.globl _TF2LEN
                             66 	.globl _TF2L
                             67 	.globl _TF2H
                             68 	.globl _SI
                             69 	.globl _ACK
                             70 	.globl _ARBLOST
                             71 	.globl _ACKRQ
                             72 	.globl _STO
                             73 	.globl _STA
                             74 	.globl _TXMODE
                             75 	.globl _MASTER
                             76 	.globl _PX0
                             77 	.globl _PT0
                             78 	.globl _PX1
                             79 	.globl _PT1
                             80 	.globl _PS0
                             81 	.globl _PT2
                             82 	.globl _PSPI0
                             83 	.globl _SPI1EN
                             84 	.globl _TXBMT1
                             85 	.globl _NSS1MD0
                             86 	.globl _NSS1MD1
                             87 	.globl _RXOVRN1
                             88 	.globl _MODF1
                             89 	.globl _WCOL1
                             90 	.globl _SPIF1
                             91 	.globl _EX0
                             92 	.globl _ET0
                             93 	.globl _EX1
                             94 	.globl _ET1
                             95 	.globl _ES0
                             96 	.globl _ET2
                             97 	.globl _ESPI0
                             98 	.globl _EA
                             99 	.globl _RI0
                            100 	.globl _TI0
                            101 	.globl _RB80
                            102 	.globl _TB80
                            103 	.globl _REN0
                            104 	.globl _MCE0
                            105 	.globl _S0MODE
                            106 	.globl _CRC0VAL
                            107 	.globl _CRC0INIT
                            108 	.globl _CRC0SEL
                            109 	.globl _IT0
                            110 	.globl _IE0
                            111 	.globl _IT1
                            112 	.globl _IE1
                            113 	.globl _TR0
                            114 	.globl _TF0
                            115 	.globl _TR1
                            116 	.globl _TF1
                            117 	.globl _PCA0CP4
                            118 	.globl _PCA0CP0
                            119 	.globl _PCA0
                            120 	.globl _PCA0CP3
                            121 	.globl _PCA0CP2
                            122 	.globl _PCA0CP1
                            123 	.globl _PCA0CP5
                            124 	.globl _TMR2
                            125 	.globl _TMR2RL
                            126 	.globl _ADC0LT
                            127 	.globl _ADC0GT
                            128 	.globl _ADC0
                            129 	.globl _TMR3
                            130 	.globl _TMR3RL
                            131 	.globl _TOFF
                            132 	.globl _DP
                            133 	.globl _VDM0CN
                            134 	.globl _PCA0CPH4
                            135 	.globl _PCA0CPL4
                            136 	.globl _PCA0CPH0
                            137 	.globl _PCA0CPL0
                            138 	.globl _PCA0H
                            139 	.globl _PCA0L
                            140 	.globl _SPI0CN
                            141 	.globl _EIP2
                            142 	.globl _EIP1
                            143 	.globl _SMB0ADM
                            144 	.globl _SMB0ADR
                            145 	.globl _P2MDIN
                            146 	.globl _P1MDIN
                            147 	.globl _P0MDIN
                            148 	.globl _B
                            149 	.globl _RSTSRC
                            150 	.globl _PCA0CPH3
                            151 	.globl _PCA0CPL3
                            152 	.globl _PCA0CPH2
                            153 	.globl _PCA0CPL2
                            154 	.globl _PCA0CPH1
                            155 	.globl _PCA0CPL1
                            156 	.globl _ADC0CN
                            157 	.globl _EIE2
                            158 	.globl _EIE1
                            159 	.globl _FLWR
                            160 	.globl _IT01CF
                            161 	.globl _XBR2
                            162 	.globl _XBR1
                            163 	.globl _XBR0
                            164 	.globl _ACC
                            165 	.globl _PCA0PWM
                            166 	.globl _PCA0CPM4
                            167 	.globl _PCA0CPM3
                            168 	.globl _PCA0CPM2
                            169 	.globl _PCA0CPM1
                            170 	.globl _PCA0CPM0
                            171 	.globl _PCA0MD
                            172 	.globl _PCA0CN
                            173 	.globl _P0MAT
                            174 	.globl _P2SKIP
                            175 	.globl _P1SKIP
                            176 	.globl _P0SKIP
                            177 	.globl _PCA0CPH5
                            178 	.globl _PCA0CPL5
                            179 	.globl _REF0CN
                            180 	.globl _PSW
                            181 	.globl _P1MAT
                            182 	.globl _PCA0CPM5
                            183 	.globl _TMR2H
                            184 	.globl _TMR2L
                            185 	.globl _TMR2RLH
                            186 	.globl _TMR2RLL
                            187 	.globl _REG0CN
                            188 	.globl _TMR2CN
                            189 	.globl _P0MASK
                            190 	.globl _ADC0LTH
                            191 	.globl _ADC0LTL
                            192 	.globl _ADC0GTH
                            193 	.globl _ADC0GTL
                            194 	.globl _SMB0DAT
                            195 	.globl _SMB0CF
                            196 	.globl _SMB0CN
                            197 	.globl _P1MASK
                            198 	.globl _ADC0H
                            199 	.globl _ADC0L
                            200 	.globl _ADC0TK
                            201 	.globl _ADC0CF
                            202 	.globl _ADC0MX
                            203 	.globl _ADC0PWR
                            204 	.globl _ADC0AC
                            205 	.globl _IREF0CN
                            206 	.globl _IP
                            207 	.globl _FLKEY
                            208 	.globl _FLSCL
                            209 	.globl _PMU0CF
                            210 	.globl _OSCICL
                            211 	.globl _OSCICN
                            212 	.globl _OSCXCN
                            213 	.globl _SPI1CN
                            214 	.globl _ONESHOT
                            215 	.globl _EMI0TC
                            216 	.globl _RTC0KEY
                            217 	.globl _RTC0DAT
                            218 	.globl _RTC0ADR
                            219 	.globl _EMI0CF
                            220 	.globl _EMI0CN
                            221 	.globl _CLKSEL
                            222 	.globl _IE
                            223 	.globl _SFRPAGE
                            224 	.globl _P2DRV
                            225 	.globl _P2MDOUT
                            226 	.globl _P1DRV
                            227 	.globl _P1MDOUT
                            228 	.globl _P0DRV
                            229 	.globl _P0MDOUT
                            230 	.globl _SPI0DAT
                            231 	.globl _SPI0CKR
                            232 	.globl _SPI0CFG
                            233 	.globl _P2
                            234 	.globl _CPT0MX
                            235 	.globl _CPT1MX
                            236 	.globl _CPT0MD
                            237 	.globl _CPT1MD
                            238 	.globl _CPT0CN
                            239 	.globl _CPT1CN
                            240 	.globl _SBUF0
                            241 	.globl _SCON0
                            242 	.globl _CRC0CNT
                            243 	.globl _DC0CN
                            244 	.globl _CRC0AUTO
                            245 	.globl _DC0CF
                            246 	.globl _TMR3H
                            247 	.globl _CRC0FLIP
                            248 	.globl _TMR3L
                            249 	.globl _CRC0IN
                            250 	.globl _TMR3RLH
                            251 	.globl _CRC0CN
                            252 	.globl _TMR3RLL
                            253 	.globl _CRC0DAT
                            254 	.globl _TMR3CN
                            255 	.globl _P1
                            256 	.globl _PSCTL
                            257 	.globl _CKCON
                            258 	.globl _TH1
                            259 	.globl _TH0
                            260 	.globl _TL1
                            261 	.globl _TL0
                            262 	.globl _TMOD
                            263 	.globl _TCON
                            264 	.globl _PCON
                            265 	.globl _TOFFH
                            266 	.globl _SPI1DAT
                            267 	.globl _TOFFL
                            268 	.globl _SPI1CKR
                            269 	.globl _SPI1CFG
                            270 	.globl _DPH
                            271 	.globl _DPL
                            272 	.globl _SP
                            273 	.globl _P0
                            274 	.globl _parameter_values
                            275 	.globl _constrain_PARM_3
                            276 	.globl _constrain_PARM_2
                            277 	.globl _param_set_PARM_2
                            278 	.globl _param_set
                            279 	.globl _param_get
                            280 	.globl _param_load
                            281 	.globl _param_save
                            282 	.globl _param_default
                            283 	.globl _param_id
                            284 	.globl _param_name
                            285 	.globl _constrain
                            286 ;--------------------------------------------------------
                            287 ; special function registers
                            288 ;--------------------------------------------------------
                            289 	.area RSEG    (ABS,DATA)
   0000                     290 	.org 0x0000
                     0080   291 _P0	=	0x0080
                     0081   292 _SP	=	0x0081
                     0082   293 _DPL	=	0x0082
                     0083   294 _DPH	=	0x0083
                     0084   295 _SPI1CFG	=	0x0084
                     0085   296 _SPI1CKR	=	0x0085
                     0085   297 _TOFFL	=	0x0085
                     0086   298 _SPI1DAT	=	0x0086
                     0086   299 _TOFFH	=	0x0086
                     0087   300 _PCON	=	0x0087
                     0088   301 _TCON	=	0x0088
                     0089   302 _TMOD	=	0x0089
                     008A   303 _TL0	=	0x008a
                     008B   304 _TL1	=	0x008b
                     008C   305 _TH0	=	0x008c
                     008D   306 _TH1	=	0x008d
                     008E   307 _CKCON	=	0x008e
                     008F   308 _PSCTL	=	0x008f
                     0090   309 _P1	=	0x0090
                     0091   310 _TMR3CN	=	0x0091
                     0091   311 _CRC0DAT	=	0x0091
                     0092   312 _TMR3RLL	=	0x0092
                     0092   313 _CRC0CN	=	0x0092
                     0093   314 _TMR3RLH	=	0x0093
                     0093   315 _CRC0IN	=	0x0093
                     0094   316 _TMR3L	=	0x0094
                     0095   317 _CRC0FLIP	=	0x0095
                     0095   318 _TMR3H	=	0x0095
                     0096   319 _DC0CF	=	0x0096
                     0096   320 _CRC0AUTO	=	0x0096
                     0097   321 _DC0CN	=	0x0097
                     0097   322 _CRC0CNT	=	0x0097
                     0098   323 _SCON0	=	0x0098
                     0099   324 _SBUF0	=	0x0099
                     009A   325 _CPT1CN	=	0x009a
                     009B   326 _CPT0CN	=	0x009b
                     009C   327 _CPT1MD	=	0x009c
                     009D   328 _CPT0MD	=	0x009d
                     009E   329 _CPT1MX	=	0x009e
                     009F   330 _CPT0MX	=	0x009f
                     00A0   331 _P2	=	0x00a0
                     00A1   332 _SPI0CFG	=	0x00a1
                     00A2   333 _SPI0CKR	=	0x00a2
                     00A3   334 _SPI0DAT	=	0x00a3
                     00A4   335 _P0MDOUT	=	0x00a4
                     00A4   336 _P0DRV	=	0x00a4
                     00A5   337 _P1MDOUT	=	0x00a5
                     00A5   338 _P1DRV	=	0x00a5
                     00A6   339 _P2MDOUT	=	0x00a6
                     00A6   340 _P2DRV	=	0x00a6
                     00A7   341 _SFRPAGE	=	0x00a7
                     00A8   342 _IE	=	0x00a8
                     00A9   343 _CLKSEL	=	0x00a9
                     00AA   344 _EMI0CN	=	0x00aa
                     00AB   345 _EMI0CF	=	0x00ab
                     00AC   346 _RTC0ADR	=	0x00ac
                     00AD   347 _RTC0DAT	=	0x00ad
                     00AE   348 _RTC0KEY	=	0x00ae
                     00AF   349 _EMI0TC	=	0x00af
                     00AF   350 _ONESHOT	=	0x00af
                     00B0   351 _SPI1CN	=	0x00b0
                     00B1   352 _OSCXCN	=	0x00b1
                     00B2   353 _OSCICN	=	0x00b2
                     00B3   354 _OSCICL	=	0x00b3
                     00B5   355 _PMU0CF	=	0x00b5
                     00B6   356 _FLSCL	=	0x00b6
                     00B7   357 _FLKEY	=	0x00b7
                     00B8   358 _IP	=	0x00b8
                     00B9   359 _IREF0CN	=	0x00b9
                     00BA   360 _ADC0AC	=	0x00ba
                     00BA   361 _ADC0PWR	=	0x00ba
                     00BB   362 _ADC0MX	=	0x00bb
                     00BC   363 _ADC0CF	=	0x00bc
                     00BD   364 _ADC0TK	=	0x00bd
                     00BD   365 _ADC0L	=	0x00bd
                     00BE   366 _ADC0H	=	0x00be
                     00BF   367 _P1MASK	=	0x00bf
                     00C0   368 _SMB0CN	=	0x00c0
                     00C1   369 _SMB0CF	=	0x00c1
                     00C2   370 _SMB0DAT	=	0x00c2
                     00C3   371 _ADC0GTL	=	0x00c3
                     00C4   372 _ADC0GTH	=	0x00c4
                     00C5   373 _ADC0LTL	=	0x00c5
                     00C6   374 _ADC0LTH	=	0x00c6
                     00C7   375 _P0MASK	=	0x00c7
                     00C8   376 _TMR2CN	=	0x00c8
                     00C9   377 _REG0CN	=	0x00c9
                     00CA   378 _TMR2RLL	=	0x00ca
                     00CB   379 _TMR2RLH	=	0x00cb
                     00CC   380 _TMR2L	=	0x00cc
                     00CD   381 _TMR2H	=	0x00cd
                     00CE   382 _PCA0CPM5	=	0x00ce
                     00CF   383 _P1MAT	=	0x00cf
                     00D0   384 _PSW	=	0x00d0
                     00D1   385 _REF0CN	=	0x00d1
                     00D2   386 _PCA0CPL5	=	0x00d2
                     00D3   387 _PCA0CPH5	=	0x00d3
                     00D4   388 _P0SKIP	=	0x00d4
                     00D5   389 _P1SKIP	=	0x00d5
                     00D6   390 _P2SKIP	=	0x00d6
                     00D7   391 _P0MAT	=	0x00d7
                     00D8   392 _PCA0CN	=	0x00d8
                     00D9   393 _PCA0MD	=	0x00d9
                     00DA   394 _PCA0CPM0	=	0x00da
                     00DB   395 _PCA0CPM1	=	0x00db
                     00DC   396 _PCA0CPM2	=	0x00dc
                     00DD   397 _PCA0CPM3	=	0x00dd
                     00DE   398 _PCA0CPM4	=	0x00de
                     00DF   399 _PCA0PWM	=	0x00df
                     00E0   400 _ACC	=	0x00e0
                     00E1   401 _XBR0	=	0x00e1
                     00E2   402 _XBR1	=	0x00e2
                     00E3   403 _XBR2	=	0x00e3
                     00E4   404 _IT01CF	=	0x00e4
                     00E5   405 _FLWR	=	0x00e5
                     00E6   406 _EIE1	=	0x00e6
                     00E7   407 _EIE2	=	0x00e7
                     00E8   408 _ADC0CN	=	0x00e8
                     00E9   409 _PCA0CPL1	=	0x00e9
                     00EA   410 _PCA0CPH1	=	0x00ea
                     00EB   411 _PCA0CPL2	=	0x00eb
                     00EC   412 _PCA0CPH2	=	0x00ec
                     00ED   413 _PCA0CPL3	=	0x00ed
                     00EE   414 _PCA0CPH3	=	0x00ee
                     00EF   415 _RSTSRC	=	0x00ef
                     00F0   416 _B	=	0x00f0
                     00F1   417 _P0MDIN	=	0x00f1
                     00F2   418 _P1MDIN	=	0x00f2
                     00F3   419 _P2MDIN	=	0x00f3
                     00F4   420 _SMB0ADR	=	0x00f4
                     00F5   421 _SMB0ADM	=	0x00f5
                     00F6   422 _EIP1	=	0x00f6
                     00F7   423 _EIP2	=	0x00f7
                     00F8   424 _SPI0CN	=	0x00f8
                     00F9   425 _PCA0L	=	0x00f9
                     00FA   426 _PCA0H	=	0x00fa
                     00FB   427 _PCA0CPL0	=	0x00fb
                     00FC   428 _PCA0CPH0	=	0x00fc
                     00FD   429 _PCA0CPL4	=	0x00fd
                     00FE   430 _PCA0CPH4	=	0x00fe
                     00FF   431 _VDM0CN	=	0x00ff
                     8382   432 _DP	=	0x8382
                     8685   433 _TOFF	=	0x8685
                     9392   434 _TMR3RL	=	0x9392
                     9594   435 _TMR3	=	0x9594
                     BEBD   436 _ADC0	=	0xbebd
                     C4C3   437 _ADC0GT	=	0xc4c3
                     C6C5   438 _ADC0LT	=	0xc6c5
                     CBCA   439 _TMR2RL	=	0xcbca
                     CDCC   440 _TMR2	=	0xcdcc
                     D3D2   441 _PCA0CP5	=	0xd3d2
                     EAE9   442 _PCA0CP1	=	0xeae9
                     ECEB   443 _PCA0CP2	=	0xeceb
                     EEED   444 _PCA0CP3	=	0xeeed
                     FAF9   445 _PCA0	=	0xfaf9
                     FCFB   446 _PCA0CP0	=	0xfcfb
                     FEFD   447 _PCA0CP4	=	0xfefd
                            448 ;--------------------------------------------------------
                            449 ; special function bits
                            450 ;--------------------------------------------------------
                            451 	.area RSEG    (ABS,DATA)
   0000                     452 	.org 0x0000
                     008F   453 _TF1	=	0x008f
                     008E   454 _TR1	=	0x008e
                     008D   455 _TF0	=	0x008d
                     008C   456 _TR0	=	0x008c
                     008B   457 _IE1	=	0x008b
                     008A   458 _IT1	=	0x008a
                     0089   459 _IE0	=	0x0089
                     0088   460 _IT0	=	0x0088
                     0096   461 _CRC0SEL	=	0x0096
                     0095   462 _CRC0INIT	=	0x0095
                     0094   463 _CRC0VAL	=	0x0094
                     009F   464 _S0MODE	=	0x009f
                     009D   465 _MCE0	=	0x009d
                     009C   466 _REN0	=	0x009c
                     009B   467 _TB80	=	0x009b
                     009A   468 _RB80	=	0x009a
                     0099   469 _TI0	=	0x0099
                     0098   470 _RI0	=	0x0098
                     00AF   471 _EA	=	0x00af
                     00AE   472 _ESPI0	=	0x00ae
                     00AD   473 _ET2	=	0x00ad
                     00AC   474 _ES0	=	0x00ac
                     00AB   475 _ET1	=	0x00ab
                     00AA   476 _EX1	=	0x00aa
                     00A9   477 _ET0	=	0x00a9
                     00A8   478 _EX0	=	0x00a8
                     00B7   479 _SPIF1	=	0x00b7
                     00B6   480 _WCOL1	=	0x00b6
                     00B5   481 _MODF1	=	0x00b5
                     00B4   482 _RXOVRN1	=	0x00b4
                     00B3   483 _NSS1MD1	=	0x00b3
                     00B2   484 _NSS1MD0	=	0x00b2
                     00B1   485 _TXBMT1	=	0x00b1
                     00B0   486 _SPI1EN	=	0x00b0
                     00BE   487 _PSPI0	=	0x00be
                     00BD   488 _PT2	=	0x00bd
                     00BC   489 _PS0	=	0x00bc
                     00BB   490 _PT1	=	0x00bb
                     00BA   491 _PX1	=	0x00ba
                     00B9   492 _PT0	=	0x00b9
                     00B8   493 _PX0	=	0x00b8
                     00C7   494 _MASTER	=	0x00c7
                     00C6   495 _TXMODE	=	0x00c6
                     00C5   496 _STA	=	0x00c5
                     00C4   497 _STO	=	0x00c4
                     00C3   498 _ACKRQ	=	0x00c3
                     00C2   499 _ARBLOST	=	0x00c2
                     00C1   500 _ACK	=	0x00c1
                     00C0   501 _SI	=	0x00c0
                     00CF   502 _TF2H	=	0x00cf
                     00CE   503 _TF2L	=	0x00ce
                     00CD   504 _TF2LEN	=	0x00cd
                     00CC   505 _TF2CEN	=	0x00cc
                     00CB   506 _T2SPLIT	=	0x00cb
                     00CA   507 _TR2	=	0x00ca
                     00C9   508 _T2RCLK	=	0x00c9
                     00C8   509 _T2XCLK	=	0x00c8
                     00D7   510 _CY	=	0x00d7
                     00D6   511 _AC	=	0x00d6
                     00D5   512 _F0	=	0x00d5
                     00D4   513 _RS1	=	0x00d4
                     00D3   514 _RS0	=	0x00d3
                     00D2   515 _OV	=	0x00d2
                     00D1   516 _F1	=	0x00d1
                     00D0   517 _P	=	0x00d0
                     00DF   518 _CF	=	0x00df
                     00DE   519 _CR	=	0x00de
                     00DD   520 _CCF5	=	0x00dd
                     00DC   521 _CCF4	=	0x00dc
                     00DB   522 _CCF3	=	0x00db
                     00DA   523 _CCF2	=	0x00da
                     00D9   524 _CCF1	=	0x00d9
                     00D8   525 _CCF0	=	0x00d8
                     00EF   526 _AD0EN	=	0x00ef
                     00EE   527 _BURSTEN	=	0x00ee
                     00ED   528 _AD0INT	=	0x00ed
                     00EC   529 _AD0BUSY	=	0x00ec
                     00EB   530 _AD0WINT	=	0x00eb
                     00EA   531 _AD0CM2	=	0x00ea
                     00E9   532 _AD0CM1	=	0x00e9
                     00E8   533 _AD0CM0	=	0x00e8
                     00FF   534 _SPIF0	=	0x00ff
                     00FE   535 _WCOL0	=	0x00fe
                     00FD   536 _MODF0	=	0x00fd
                     00FC   537 _RXOVRN0	=	0x00fc
                     00FB   538 _NSS0MD1	=	0x00fb
                     00FA   539 _NSS0MD0	=	0x00fa
                     00F9   540 _TXBMT0	=	0x00f9
                     00F8   541 _SPI0EN	=	0x00f8
                     0096   542 _LED_RED	=	0x0096
                     0095   543 _LED_GREEN	=	0x0095
                     0082   544 _PIN_CONFIG	=	0x0082
                     0083   545 _PIN_ENABLE	=	0x0083
                     0087   546 _IRQ	=	0x0087
                     0094   547 _NSS1	=	0x0094
                     00A6   548 _TDM_SYNC_PIN	=	0x00a6
                            549 ;--------------------------------------------------------
                            550 ; overlayable register banks
                            551 ;--------------------------------------------------------
                            552 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     553 	.ds 8
                            554 ;--------------------------------------------------------
                            555 ; internal ram data
                            556 ;--------------------------------------------------------
                            557 	.area DSEG    (DATA)
   0000                     558 _param_check_PARM_2:
   0000                     559 	.ds 4
   0004                     560 _param_load_sloc0_1_0:
   0004                     561 	.ds 2
   0006                     562 _param_load_sloc1_1_0:
   0006                     563 	.ds 2
   0008                     564 _param_load_sloc2_1_0:
   0008                     565 	.ds 2
   000A                     566 _param_load_sloc3_1_0:
   000A                     567 	.ds 4
                            568 ;--------------------------------------------------------
                            569 ; overlayable items in internal ram 
                            570 ;--------------------------------------------------------
                            571 	.area	OSEG    (OVR,DATA)
                            572 	.area	OSEG    (OVR,DATA)
                            573 ;--------------------------------------------------------
                            574 ; indirectly addressable internal ram data
                            575 ;--------------------------------------------------------
                            576 	.area ISEG    (DATA)
                            577 ;--------------------------------------------------------
                            578 ; absolute internal ram data
                            579 ;--------------------------------------------------------
                            580 	.area IABS    (ABS,DATA)
                            581 	.area IABS    (ABS,DATA)
                            582 ;--------------------------------------------------------
                            583 ; bit data
                            584 ;--------------------------------------------------------
                            585 	.area BSEG    (BIT)
   0000                     586 _param_check_sloc0_1_0:
   0000                     587 	.ds 1
                            588 ;--------------------------------------------------------
                            589 ; paged external ram data
                            590 ;--------------------------------------------------------
                            591 	.area PSEG    (PAG,XDATA)
   0000                     592 _param_set_PARM_2:
   0000                     593 	.ds 4
   0004                     594 _param_save_i_1_140:
   0004                     595 	.ds 2
   0006                     596 _constrain_PARM_2:
   0006                     597 	.ds 4
   000A                     598 _constrain_PARM_3:
   000A                     599 	.ds 4
                            600 ;--------------------------------------------------------
                            601 ; external ram data
                            602 ;--------------------------------------------------------
                            603 	.area XSEG    (XDATA)
   0000                     604 _parameter_values::
   0000                     605 	.ds 60
                            606 ;--------------------------------------------------------
                            607 ; absolute external ram data
                            608 ;--------------------------------------------------------
                            609 	.area XABS    (ABS,XDATA)
                            610 ;--------------------------------------------------------
                            611 ; external initialized ram data
                            612 ;--------------------------------------------------------
                            613 	.area XISEG   (XDATA)
                            614 	.area HOME    (CODE)
                            615 	.area GSINIT0 (CODE)
                            616 	.area GSINIT1 (CODE)
                            617 	.area GSINIT2 (CODE)
                            618 	.area GSINIT3 (CODE)
                            619 	.area GSINIT4 (CODE)
                            620 	.area GSINIT5 (CODE)
                            621 	.area GSINIT  (CODE)
                            622 	.area GSFINAL (CODE)
                            623 	.area CSEG    (CODE)
                            624 ;--------------------------------------------------------
                            625 ; global & static initialisations
                            626 ;--------------------------------------------------------
                            627 	.area HOME    (CODE)
                            628 	.area GSINIT  (CODE)
                            629 	.area GSFINAL (CODE)
                            630 	.area GSINIT  (CODE)
                            631 ;--------------------------------------------------------
                            632 ; Home
                            633 ;--------------------------------------------------------
                            634 	.area HOME    (CODE)
                            635 	.area HOME    (CODE)
                            636 ;--------------------------------------------------------
                            637 ; code
                            638 ;--------------------------------------------------------
                            639 	.area CSEG    (CODE)
                            640 ;------------------------------------------------------------
                            641 ;Allocation info for local variables in function 'param_check'
                            642 ;------------------------------------------------------------
                            643 ;val                       Allocated with name '_param_check_PARM_2'
                            644 ;------------------------------------------------------------
                            645 ;	radio/parameters.c:80: param_check(__pdata enum ParamID id, __data uint32_t val)
                            646 ;	-----------------------------------------
                            647 ;	 function param_check
                            648 ;	-----------------------------------------
   0000                     649 _param_check:
                     0007   650 	ar7 = 0x07
                     0006   651 	ar6 = 0x06
                     0005   652 	ar5 = 0x05
                     0004   653 	ar4 = 0x04
                     0003   654 	ar3 = 0x03
                     0002   655 	ar2 = 0x02
                     0001   656 	ar1 = 0x01
                     0000   657 	ar0 = 0x00
   0000 AF 82         [24]  658 	mov	r7,dpl
                            659 ;	radio/parameters.c:83: if (id >= PARAM_MAX)
   0002 BF 0F 00      [24]  660 	cjne	r7,#0x0F,00136$
   0005                     661 00136$:
                            662 ;	radio/parameters.c:84: return false;
   0005 40 01         [24]  663 	jc	00102$
   0007 22            [24]  664 	ret
   0008                     665 00102$:
                            666 ;	radio/parameters.c:86: switch (id) {
   0008 EF            [12]  667 	mov	a,r7
   0009 24 F8         [12]  668 	add	a,#0xff - 0x07
   000B 40 63         [24]  669 	jc	00118$
   000D EF            [12]  670 	mov	a,r7
   000E 2F            [12]  671 	add	a,r7
   000F 2F            [12]  672 	add	a,r7
   0010 90r00r14      [24]  673 	mov	dptr,#00139$
   0013 73            [24]  674 	jmp	@a+dptr
   0014                     675 00139$:
   0014 02r00r2C      [24]  676 	ljmp	00103$
   0017 02r00r2E      [24]  677 	ljmp	00104$
   001A 02r00r38      [24]  678 	ljmp	00105$
   001D 02r00r4A      [24]  679 	ljmp	00108$
   0020 02r00r4C      [24]  680 	ljmp	00109$
   0023 02r00r5E      [24]  681 	ljmp	00112$
   0026 02r00r5E      [24]  682 	ljmp	00113$
   0029 02r00r5E      [24]  683 	ljmp	00114$
                            684 ;	radio/parameters.c:87: case PARAM_FORMAT:
   002C                     685 00103$:
                            686 ;	radio/parameters.c:88: return false;
   002C C3            [12]  687 	clr	c
                            688 ;	radio/parameters.c:90: case PARAM_SERIAL_SPEED:
   002D 22            [24]  689 	ret
   002E                     690 00104$:
                            691 ;	radio/parameters.c:91: return serial_device_valid_speed(val);
   002E AF*00         [24]  692 	mov	r7,_param_check_PARM_2
   0030 8F 82         [24]  693 	mov	dpl,r7
   0032 12r00r00      [24]  694 	lcall	_serial_device_valid_speed
   0035 92*00         [24]  695 	mov  _param_check_sloc0_1_0,c
                            696 ;	radio/parameters.c:93: case PARAM_AIR_SPEED:
   0037 22            [24]  697 	ret
   0038                     698 00105$:
                            699 ;	radio/parameters.c:94: if (val > 256)
   0038 C3            [12]  700 	clr	c
   0039 E4            [12]  701 	clr	a
   003A 95*00         [12]  702 	subb	a,_param_check_PARM_2
   003C 74 01         [12]  703 	mov	a,#0x01
   003E 95*01         [12]  704 	subb	a,(_param_check_PARM_2 + 1)
   0040 E4            [12]  705 	clr	a
   0041 95*02         [12]  706 	subb	a,(_param_check_PARM_2 + 2)
   0043 E4            [12]  707 	clr	a
   0044 95*03         [12]  708 	subb	a,(_param_check_PARM_2 + 3)
   0046 50 28         [24]  709 	jnc	00118$
                            710 ;	radio/parameters.c:95: return false;
   0048 C3            [12]  711 	clr	c
                            712 ;	radio/parameters.c:98: case PARAM_NETID:
   0049 22            [24]  713 	ret
   004A                     714 00108$:
                            715 ;	radio/parameters.c:100: return true;
   004A D3            [12]  716 	setb	c
                            717 ;	radio/parameters.c:102: case PARAM_TXPOWER:
   004B 22            [24]  718 	ret
   004C                     719 00109$:
                            720 ;	radio/parameters.c:103: if (val > BOARD_MAXTXPOWER)
   004C C3            [12]  721 	clr	c
   004D 74 1E         [12]  722 	mov	a,#0x1E
   004F 95*00         [12]  723 	subb	a,_param_check_PARM_2
   0051 E4            [12]  724 	clr	a
   0052 95*01         [12]  725 	subb	a,(_param_check_PARM_2 + 1)
   0054 E4            [12]  726 	clr	a
   0055 95*02         [12]  727 	subb	a,(_param_check_PARM_2 + 2)
   0057 E4            [12]  728 	clr	a
   0058 95*03         [12]  729 	subb	a,(_param_check_PARM_2 + 3)
   005A 50 14         [24]  730 	jnc	00118$
                            731 ;	radio/parameters.c:104: return false;
   005C C3            [12]  732 	clr	c
                            733 ;	radio/parameters.c:107: case PARAM_ECC:
   005D 22            [24]  734 	ret
   005E                     735 00112$:
                            736 ;	radio/parameters.c:108: case PARAM_MAVLINK:
   005E                     737 00113$:
                            738 ;	radio/parameters.c:109: case PARAM_OPPRESEND:
   005E                     739 00114$:
                            740 ;	radio/parameters.c:111: if (val > 1)
   005E C3            [12]  741 	clr	c
   005F 74 01         [12]  742 	mov	a,#0x01
   0061 95*00         [12]  743 	subb	a,_param_check_PARM_2
   0063 E4            [12]  744 	clr	a
   0064 95*01         [12]  745 	subb	a,(_param_check_PARM_2 + 1)
   0066 E4            [12]  746 	clr	a
   0067 95*02         [12]  747 	subb	a,(_param_check_PARM_2 + 2)
   0069 E4            [12]  748 	clr	a
   006A 95*03         [12]  749 	subb	a,(_param_check_PARM_2 + 3)
   006C 50 02         [24]  750 	jnc	00118$
                            751 ;	radio/parameters.c:112: return false;
   006E C3            [12]  752 	clr	c
                            753 ;	radio/parameters.c:118: }
   006F 22            [24]  754 	ret
   0070                     755 00118$:
                            756 ;	radio/parameters.c:119: return true;
   0070 D3            [12]  757 	setb	c
   0071 22            [24]  758 	ret
                            759 ;------------------------------------------------------------
                            760 ;Allocation info for local variables in function 'param_set'
                            761 ;------------------------------------------------------------
                            762 ;param                     Allocated to registers r7 
                            763 ;------------------------------------------------------------
                            764 ;	radio/parameters.c:123: param_set(__data enum ParamID param, __pdata param_t value)
                            765 ;	-----------------------------------------
                            766 ;	 function param_set
                            767 ;	-----------------------------------------
   0072                     768 _param_set:
   0072 AF 82         [24]  769 	mov	r7,dpl
                            770 ;	radio/parameters.c:126: if (!param_check(param, value))
   0074 78r00         [12]  771 	mov	r0,#_param_set_PARM_2
   0076 E2            [24]  772 	movx	a,@r0
   0077 F5*00         [12]  773 	mov	_param_check_PARM_2,a
   0079 08            [12]  774 	inc	r0
   007A E2            [24]  775 	movx	a,@r0
   007B F5*01         [12]  776 	mov	(_param_check_PARM_2 + 1),a
   007D 08            [12]  777 	inc	r0
   007E E2            [24]  778 	movx	a,@r0
   007F F5*02         [12]  779 	mov	(_param_check_PARM_2 + 2),a
   0081 08            [12]  780 	inc	r0
   0082 E2            [24]  781 	movx	a,@r0
   0083 F5*03         [12]  782 	mov	(_param_check_PARM_2 + 3),a
   0085 8F 82         [24]  783 	mov	dpl,r7
   0087 C0 07         [24]  784 	push	ar7
   0089 12r00r00      [24]  785 	lcall	_param_check
   008C D0 07         [24]  786 	pop	ar7
                            787 ;	radio/parameters.c:127: return false;
   008E 40 01         [24]  788 	jc	00102$
   0090 22            [24]  789 	ret
   0091                     790 00102$:
                            791 ;	radio/parameters.c:130: switch (param) {
   0091 BF 04 02      [24]  792 	cjne	r7,#0x04,00155$
   0094 80 1F         [24]  793 	sjmp	00103$
   0096                     794 00155$:
   0096 BF 06 03      [24]  795 	cjne	r7,#0x06,00156$
   0099 02r01r78      [24]  796 	ljmp	00108$
   009C                     797 00156$:
   009C BF 07 03      [24]  798 	cjne	r7,#0x07,00157$
   009F 02r01rA2      [24]  799 	ljmp	00109$
   00A2                     800 00157$:
   00A2 BF 0B 02      [24]  801 	cjne	r7,#0x0B,00158$
   00A5 80 2D         [24]  802 	sjmp	00104$
   00A7                     803 00158$:
   00A7 BF 0C 02      [24]  804 	cjne	r7,#0x0C,00159$
   00AA 80 6F         [24]  805 	sjmp	00105$
   00AC                     806 00159$:
   00AC BF 0E 03      [24]  807 	cjne	r7,#0x0E,00160$
   00AF 02r01rCC      [24]  808 	ljmp	00110$
   00B2                     809 00160$:
   00B2 02r01rF4      [24]  810 	ljmp	00112$
                            811 ;	radio/parameters.c:131: case PARAM_TXPOWER:
   00B5                     812 00103$:
                            813 ;	radio/parameters.c:134: radio_set_transmit_power(value);
   00B5 78r00         [12]  814 	mov	r0,#_param_set_PARM_2
   00B7 E2            [24]  815 	movx	a,@r0
   00B8 F5 82         [12]  816 	mov	dpl,a
   00BA C0 07         [24]  817 	push	ar7
   00BC 12r00r00      [24]  818 	lcall	_radio_set_transmit_power
                            819 ;	radio/parameters.c:135: value = radio_get_transmit_power();
   00BF 12r00r00      [24]  820 	lcall	_radio_get_transmit_power
   00C2 AE 82         [24]  821 	mov	r6,dpl
   00C4 D0 07         [24]  822 	pop	ar7
   00C6 78r00         [12]  823 	mov	r0,#_param_set_PARM_2
   00C8 EE            [12]  824 	mov	a,r6
   00C9 F2            [24]  825 	movx	@r0,a
   00CA 08            [12]  826 	inc	r0
   00CB E4            [12]  827 	clr	a
   00CC F2            [24]  828 	movx	@r0,a
   00CD 08            [12]  829 	inc	r0
   00CE F2            [24]  830 	movx	@r0,a
   00CF 08            [12]  831 	inc	r0
   00D0 F2            [24]  832 	movx	@r0,a
                            833 ;	radio/parameters.c:136: break;
   00D1 02r01rF4      [24]  834 	ljmp	00112$
                            835 ;	radio/parameters.c:138: case PARAM_DUTY_CYCLE:
   00D4                     836 00104$:
                            837 ;	radio/parameters.c:140: value = constrain(value, 0, 100);
   00D4 78r06         [12]  838 	mov	r0,#_constrain_PARM_2
   00D6 E4            [12]  839 	clr	a
   00D7 F2            [24]  840 	movx	@r0,a
   00D8 08            [12]  841 	inc	r0
   00D9 F2            [24]  842 	movx	@r0,a
   00DA 08            [12]  843 	inc	r0
   00DB F2            [24]  844 	movx	@r0,a
   00DC 08            [12]  845 	inc	r0
   00DD F2            [24]  846 	movx	@r0,a
   00DE 78r0A         [12]  847 	mov	r0,#_constrain_PARM_3
   00E0 74 64         [12]  848 	mov	a,#0x64
   00E2 F2            [24]  849 	movx	@r0,a
   00E3 08            [12]  850 	inc	r0
   00E4 E4            [12]  851 	clr	a
   00E5 F2            [24]  852 	movx	@r0,a
   00E6 08            [12]  853 	inc	r0
   00E7 F2            [24]  854 	movx	@r0,a
   00E8 08            [12]  855 	inc	r0
   00E9 F2            [24]  856 	movx	@r0,a
   00EA 78r00         [12]  857 	mov	r0,#_param_set_PARM_2
   00EC E2            [24]  858 	movx	a,@r0
   00ED F5 82         [12]  859 	mov	dpl,a
   00EF 08            [12]  860 	inc	r0
   00F0 E2            [24]  861 	movx	a,@r0
   00F1 F5 83         [12]  862 	mov	dph,a
   00F3 08            [12]  863 	inc	r0
   00F4 E2            [24]  864 	movx	a,@r0
   00F5 F5 F0         [12]  865 	mov	b,a
   00F7 08            [12]  866 	inc	r0
   00F8 E2            [24]  867 	movx	a,@r0
   00F9 C0 07         [24]  868 	push	ar7
   00FB 12r05r23      [24]  869 	lcall	_constrain
   00FE AB 82         [24]  870 	mov	r3,dpl
   0100 AC 83         [24]  871 	mov	r4,dph
   0102 AD F0         [24]  872 	mov	r5,b
   0104 FE            [12]  873 	mov	r6,a
   0105 D0 07         [24]  874 	pop	ar7
   0107 78r00         [12]  875 	mov	r0,#_param_set_PARM_2
   0109 EB            [12]  876 	mov	a,r3
   010A F2            [24]  877 	movx	@r0,a
   010B 08            [12]  878 	inc	r0
   010C EC            [12]  879 	mov	a,r4
   010D F2            [24]  880 	movx	@r0,a
   010E 08            [12]  881 	inc	r0
   010F ED            [12]  882 	mov	a,r5
   0110 F2            [24]  883 	movx	@r0,a
   0111 08            [12]  884 	inc	r0
   0112 EE            [12]  885 	mov	a,r6
   0113 F2            [24]  886 	movx	@r0,a
                            887 ;	radio/parameters.c:141: duty_cycle = value;
   0114 78r00         [12]  888 	mov	r0,#_duty_cycle
   0116 EB            [12]  889 	mov	a,r3
   0117 F2            [24]  890 	movx	@r0,a
                            891 ;	radio/parameters.c:142: break;
   0118 02r01rF4      [24]  892 	ljmp	00112$
                            893 ;	radio/parameters.c:144: case PARAM_LBT_RSSI:
   011B                     894 00105$:
                            895 ;	radio/parameters.c:146: if (value != 0) {
   011B 78r00         [12]  896 	mov	r0,#_param_set_PARM_2
   011D E2            [24]  897 	movx	a,@r0
   011E F5 F0         [12]  898 	mov	b,a
   0120 08            [12]  899 	inc	r0
   0121 E2            [24]  900 	movx	a,@r0
   0122 42 F0         [12]  901 	orl	b,a
   0124 08            [12]  902 	inc	r0
   0125 E2            [24]  903 	movx	a,@r0
   0126 42 F0         [12]  904 	orl	b,a
   0128 08            [12]  905 	inc	r0
   0129 E2            [24]  906 	movx	a,@r0
   012A 45 F0         [12]  907 	orl	a,b
   012C 60 42         [24]  908 	jz	00107$
                            909 ;	radio/parameters.c:147: value = constrain(value, 25, 220);
   012E 78r06         [12]  910 	mov	r0,#_constrain_PARM_2
   0130 74 19         [12]  911 	mov	a,#0x19
   0132 F2            [24]  912 	movx	@r0,a
   0133 08            [12]  913 	inc	r0
   0134 E4            [12]  914 	clr	a
   0135 F2            [24]  915 	movx	@r0,a
   0136 08            [12]  916 	inc	r0
   0137 F2            [24]  917 	movx	@r0,a
   0138 08            [12]  918 	inc	r0
   0139 F2            [24]  919 	movx	@r0,a
   013A 78r0A         [12]  920 	mov	r0,#_constrain_PARM_3
   013C 74 DC         [12]  921 	mov	a,#0xDC
   013E F2            [24]  922 	movx	@r0,a
   013F 08            [12]  923 	inc	r0
   0140 E4            [12]  924 	clr	a
   0141 F2            [24]  925 	movx	@r0,a
   0142 08            [12]  926 	inc	r0
   0143 F2            [24]  927 	movx	@r0,a
   0144 08            [12]  928 	inc	r0
   0145 F2            [24]  929 	movx	@r0,a
   0146 78r00         [12]  930 	mov	r0,#_param_set_PARM_2
   0148 E2            [24]  931 	movx	a,@r0
   0149 F5 82         [12]  932 	mov	dpl,a
   014B 08            [12]  933 	inc	r0
   014C E2            [24]  934 	movx	a,@r0
   014D F5 83         [12]  935 	mov	dph,a
   014F 08            [12]  936 	inc	r0
   0150 E2            [24]  937 	movx	a,@r0
   0151 F5 F0         [12]  938 	mov	b,a
   0153 08            [12]  939 	inc	r0
   0154 E2            [24]  940 	movx	a,@r0
   0155 C0 07         [24]  941 	push	ar7
   0157 12r05r23      [24]  942 	lcall	_constrain
   015A AB 82         [24]  943 	mov	r3,dpl
   015C AC 83         [24]  944 	mov	r4,dph
   015E AD F0         [24]  945 	mov	r5,b
   0160 FE            [12]  946 	mov	r6,a
   0161 D0 07         [24]  947 	pop	ar7
   0163 78r00         [12]  948 	mov	r0,#_param_set_PARM_2
   0165 EB            [12]  949 	mov	a,r3
   0166 F2            [24]  950 	movx	@r0,a
   0167 08            [12]  951 	inc	r0
   0168 EC            [12]  952 	mov	a,r4
   0169 F2            [24]  953 	movx	@r0,a
   016A 08            [12]  954 	inc	r0
   016B ED            [12]  955 	mov	a,r5
   016C F2            [24]  956 	movx	@r0,a
   016D 08            [12]  957 	inc	r0
   016E EE            [12]  958 	mov	a,r6
   016F F2            [24]  959 	movx	@r0,a
   0170                     960 00107$:
                            961 ;	radio/parameters.c:149: lbt_rssi = value;
   0170 78r00         [12]  962 	mov	r0,#_param_set_PARM_2
   0172 79r00         [12]  963 	mov	r1,#_lbt_rssi
   0174 E2            [24]  964 	movx	a,@r0
   0175 F3            [24]  965 	movx	@r1,a
                            966 ;	radio/parameters.c:150: break;
                            967 ;	radio/parameters.c:152: case PARAM_MAVLINK:
   0176 80 7C         [24]  968 	sjmp	00112$
   0178                     969 00108$:
                            970 ;	radio/parameters.c:153: feature_mavlink_framing = value?true:false;
   0178 78r00         [12]  971 	mov	r0,#_param_set_PARM_2
   017A E2            [24]  972 	movx	a,@r0
   017B F5 F0         [12]  973 	mov	b,a
   017D 08            [12]  974 	inc	r0
   017E E2            [24]  975 	movx	a,@r0
   017F 42 F0         [12]  976 	orl	b,a
   0181 08            [12]  977 	inc	r0
   0182 E2            [24]  978 	movx	a,@r0
   0183 42 F0         [12]  979 	orl	b,a
   0185 08            [12]  980 	inc	r0
   0186 E2            [24]  981 	movx	a,@r0
   0187 45 F0         [12]  982 	orl	a,b
   0189 24 FF         [12]  983 	add	a,#0xff
                            984 ;	radio/parameters.c:154: value = feature_mavlink_framing?1:0;
   018B 92*00         [24]  985 	mov	_feature_mavlink_framing,c
   018D 50 04         [24]  986 	jnc	00115$
   018F 7E 01         [12]  987 	mov	r6,#0x01
   0191 80 02         [24]  988 	sjmp	00116$
   0193                     989 00115$:
   0193 7E 00         [12]  990 	mov	r6,#0x00
   0195                     991 00116$:
   0195 78r00         [12]  992 	mov	r0,#_param_set_PARM_2
   0197 EE            [12]  993 	mov	a,r6
   0198 F2            [24]  994 	movx	@r0,a
   0199 08            [12]  995 	inc	r0
   019A E4            [12]  996 	clr	a
   019B F2            [24]  997 	movx	@r0,a
   019C 08            [12]  998 	inc	r0
   019D F2            [24]  999 	movx	@r0,a
   019E 08            [12] 1000 	inc	r0
   019F F2            [24] 1001 	movx	@r0,a
                           1002 ;	radio/parameters.c:155: break;
                           1003 ;	radio/parameters.c:157: case PARAM_OPPRESEND:
   01A0 80 52         [24] 1004 	sjmp	00112$
   01A2                    1005 00109$:
                           1006 ;	radio/parameters.c:158: feature_opportunistic_resend = value?true:false;
   01A2 78r00         [12] 1007 	mov	r0,#_param_set_PARM_2
   01A4 E2            [24] 1008 	movx	a,@r0
   01A5 F5 F0         [12] 1009 	mov	b,a
   01A7 08            [12] 1010 	inc	r0
   01A8 E2            [24] 1011 	movx	a,@r0
   01A9 42 F0         [12] 1012 	orl	b,a
   01AB 08            [12] 1013 	inc	r0
   01AC E2            [24] 1014 	movx	a,@r0
   01AD 42 F0         [12] 1015 	orl	b,a
   01AF 08            [12] 1016 	inc	r0
   01B0 E2            [24] 1017 	movx	a,@r0
   01B1 45 F0         [12] 1018 	orl	a,b
   01B3 24 FF         [12] 1019 	add	a,#0xff
                           1020 ;	radio/parameters.c:159: value = feature_opportunistic_resend?1:0;
   01B5 92*00         [24] 1021 	mov	_feature_opportunistic_resend,c
   01B7 50 04         [24] 1022 	jnc	00117$
   01B9 7E 01         [12] 1023 	mov	r6,#0x01
   01BB 80 02         [24] 1024 	sjmp	00118$
   01BD                    1025 00117$:
   01BD 7E 00         [12] 1026 	mov	r6,#0x00
   01BF                    1027 00118$:
   01BF 78r00         [12] 1028 	mov	r0,#_param_set_PARM_2
   01C1 EE            [12] 1029 	mov	a,r6
   01C2 F2            [24] 1030 	movx	@r0,a
   01C3 08            [12] 1031 	inc	r0
   01C4 E4            [12] 1032 	clr	a
   01C5 F2            [24] 1033 	movx	@r0,a
   01C6 08            [12] 1034 	inc	r0
   01C7 F2            [24] 1035 	movx	@r0,a
   01C8 08            [12] 1036 	inc	r0
   01C9 F2            [24] 1037 	movx	@r0,a
                           1038 ;	radio/parameters.c:160: break;
                           1039 ;	radio/parameters.c:162: case PARAM_RTSCTS:
   01CA 80 28         [24] 1040 	sjmp	00112$
   01CC                    1041 00110$:
                           1042 ;	radio/parameters.c:163: feature_rtscts = value?true:false;
   01CC 78r00         [12] 1043 	mov	r0,#_param_set_PARM_2
   01CE E2            [24] 1044 	movx	a,@r0
   01CF F5 F0         [12] 1045 	mov	b,a
   01D1 08            [12] 1046 	inc	r0
   01D2 E2            [24] 1047 	movx	a,@r0
   01D3 42 F0         [12] 1048 	orl	b,a
   01D5 08            [12] 1049 	inc	r0
   01D6 E2            [24] 1050 	movx	a,@r0
   01D7 42 F0         [12] 1051 	orl	b,a
   01D9 08            [12] 1052 	inc	r0
   01DA E2            [24] 1053 	movx	a,@r0
   01DB 45 F0         [12] 1054 	orl	a,b
   01DD 24 FF         [12] 1055 	add	a,#0xff
                           1056 ;	radio/parameters.c:164: value = feature_rtscts?1:0;
   01DF 92*00         [24] 1057 	mov	_feature_rtscts,c
   01E1 50 04         [24] 1058 	jnc	00119$
   01E3 7E 01         [12] 1059 	mov	r6,#0x01
   01E5 80 02         [24] 1060 	sjmp	00120$
   01E7                    1061 00119$:
   01E7 7E 00         [12] 1062 	mov	r6,#0x00
   01E9                    1063 00120$:
   01E9 78r00         [12] 1064 	mov	r0,#_param_set_PARM_2
   01EB EE            [12] 1065 	mov	a,r6
   01EC F2            [24] 1066 	movx	@r0,a
   01ED 08            [12] 1067 	inc	r0
   01EE E4            [12] 1068 	clr	a
   01EF F2            [24] 1069 	movx	@r0,a
   01F0 08            [12] 1070 	inc	r0
   01F1 F2            [24] 1071 	movx	@r0,a
   01F2 08            [12] 1072 	inc	r0
   01F3 F2            [24] 1073 	movx	@r0,a
                           1074 ;	radio/parameters.c:169: }
   01F4                    1075 00112$:
                           1076 ;	radio/parameters.c:171: parameter_values[param] = value;
   01F4 EF            [12] 1077 	mov	a,r7
   01F5 75 F0 04      [24] 1078 	mov	b,#0x04
   01F8 A4            [48] 1079 	mul	ab
   01F9 24r00         [12] 1080 	add	a,#_parameter_values
   01FB F5 82         [12] 1081 	mov	dpl,a
   01FD 74s00         [12] 1082 	mov	a,#(_parameter_values >> 8)
   01FF 35 F0         [12] 1083 	addc	a,b
   0201 F5 83         [12] 1084 	mov	dph,a
   0203 78r00         [12] 1085 	mov	r0,#_param_set_PARM_2
   0205 E2            [24] 1086 	movx	a,@r0
   0206 F0            [24] 1087 	movx	@dptr,a
   0207 08            [12] 1088 	inc	r0
   0208 E2            [24] 1089 	movx	a,@r0
   0209 A3            [24] 1090 	inc	dptr
   020A F0            [24] 1091 	movx	@dptr,a
   020B 08            [12] 1092 	inc	r0
   020C E2            [24] 1093 	movx	a,@r0
   020D A3            [24] 1094 	inc	dptr
   020E F0            [24] 1095 	movx	@dptr,a
   020F 08            [12] 1096 	inc	r0
   0210 E2            [24] 1097 	movx	a,@r0
   0211 A3            [24] 1098 	inc	dptr
   0212 F0            [24] 1099 	movx	@dptr,a
                           1100 ;	radio/parameters.c:173: return true;
   0213 D3            [12] 1101 	setb	c
   0214 22            [24] 1102 	ret
                           1103 ;------------------------------------------------------------
                           1104 ;Allocation info for local variables in function 'param_get'
                           1105 ;------------------------------------------------------------
                           1106 ;param                     Allocated to registers r7 
                           1107 ;------------------------------------------------------------
                           1108 ;	radio/parameters.c:177: param_get(__data enum ParamID param)
                           1109 ;	-----------------------------------------
                           1110 ;	 function param_get
                           1111 ;	-----------------------------------------
   0215                    1112 _param_get:
   0215 AF 82         [24] 1113 	mov	r7,dpl
                           1114 ;	radio/parameters.c:179: if (param >= PARAM_MAX)
   0217 BF 0F 00      [24] 1115 	cjne	r7,#0x0F,00108$
   021A                    1116 00108$:
   021A 40 07         [24] 1117 	jc	00102$
                           1118 ;	radio/parameters.c:180: return 0;
   021C 90 00 00      [24] 1119 	mov	dptr,#(0x00&0x00ff)
   021F E4            [12] 1120 	clr	a
   0220 F5 F0         [12] 1121 	mov	b,a
   0222 22            [24] 1122 	ret
   0223                    1123 00102$:
                           1124 ;	radio/parameters.c:181: return parameter_values[param];
   0223 EF            [12] 1125 	mov	a,r7
   0224 75 F0 04      [24] 1126 	mov	b,#0x04
   0227 A4            [48] 1127 	mul	ab
   0228 24r00         [12] 1128 	add	a,#_parameter_values
   022A F5 82         [12] 1129 	mov	dpl,a
   022C 74s00         [12] 1130 	mov	a,#(_parameter_values >> 8)
   022E 35 F0         [12] 1131 	addc	a,b
   0230 F5 83         [12] 1132 	mov	dph,a
   0232 E0            [24] 1133 	movx	a,@dptr
   0233 FC            [12] 1134 	mov	r4,a
   0234 A3            [24] 1135 	inc	dptr
   0235 E0            [24] 1136 	movx	a,@dptr
   0236 FD            [12] 1137 	mov	r5,a
   0237 A3            [24] 1138 	inc	dptr
   0238 E0            [24] 1139 	movx	a,@dptr
   0239 FE            [12] 1140 	mov	r6,a
   023A A3            [24] 1141 	inc	dptr
   023B E0            [24] 1142 	movx	a,@dptr
   023C 8C 82         [24] 1143 	mov	dpl,r4
   023E 8D 83         [24] 1144 	mov	dph,r5
   0240 8E F0         [24] 1145 	mov	b,r6
   0242 22            [24] 1146 	ret
                           1147 ;------------------------------------------------------------
                           1148 ;Allocation info for local variables in function 'param_load'
                           1149 ;------------------------------------------------------------
                           1150 ;sloc0                     Allocated with name '_param_load_sloc0_1_0'
                           1151 ;sloc1                     Allocated with name '_param_load_sloc1_1_0'
                           1152 ;sloc2                     Allocated with name '_param_load_sloc2_1_0'
                           1153 ;sloc3                     Allocated with name '_param_load_sloc3_1_0'
                           1154 ;------------------------------------------------------------
                           1155 ;	radio/parameters.c:185: param_load(void)
                           1156 ;	-----------------------------------------
                           1157 ;	 function param_load
                           1158 ;	-----------------------------------------
   0243                    1159 _param_load:
   0243 D3            [12] 1160 	setb	c
   0244 10 AF 01      [24] 1161 	jbc	ea,00138$
   0247 C3            [12] 1162 	clr	c
   0248                    1163 00138$:
   0248 C0 D0         [24] 1164 	push	psw
                           1165 ;	radio/parameters.c:192: for (i = 0; i < sizeof(parameter_values); i++) {
   024A 7E 00         [12] 1166 	mov	r6,#0x00
   024C 7F 00         [12] 1167 	mov	r7,#0x00
   024E                    1168 00109$:
                           1169 ;	radio/parameters.c:193: ((uint8_t *)parameter_values)[i] = flash_read_scratch(i+4);
   024E EE            [12] 1170 	mov	a,r6
   024F 24r00         [12] 1171 	add	a,#_parameter_values
   0251 FB            [12] 1172 	mov	r3,a
   0252 EF            [12] 1173 	mov	a,r7
   0253 34s00         [12] 1174 	addc	a,#(_parameter_values >> 8)
   0255 FC            [12] 1175 	mov	r4,a
   0256 7D 00         [12] 1176 	mov	r5,#0x00
   0258 74 04         [12] 1177 	mov	a,#0x04
   025A 2E            [12] 1178 	add	a,r6
   025B F9            [12] 1179 	mov	r1,a
   025C E4            [12] 1180 	clr	a
   025D 3F            [12] 1181 	addc	a,r7
   025E FA            [12] 1182 	mov	r2,a
   025F 89 82         [24] 1183 	mov	dpl,r1
   0261 8A 83         [24] 1184 	mov	dph,r2
   0263 C0 07         [24] 1185 	push	ar7
   0265 C0 06         [24] 1186 	push	ar6
   0267 C0 05         [24] 1187 	push	ar5
   0269 C0 04         [24] 1188 	push	ar4
   026B C0 03         [24] 1189 	push	ar3
   026D 12r00r00      [24] 1190 	lcall	_flash_read_scratch
   0270 AA 82         [24] 1191 	mov	r2,dpl
   0272 D0 03         [24] 1192 	pop	ar3
   0274 D0 04         [24] 1193 	pop	ar4
   0276 D0 05         [24] 1194 	pop	ar5
   0278 D0 06         [24] 1195 	pop	ar6
   027A D0 07         [24] 1196 	pop	ar7
   027C 8B 82         [24] 1197 	mov	dpl,r3
   027E 8C 83         [24] 1198 	mov	dph,r4
   0280 8D F0         [24] 1199 	mov	b,r5
   0282 EA            [12] 1200 	mov	a,r2
   0283 12r00r00      [24] 1201 	lcall	__gptrput
                           1202 ;	radio/parameters.c:192: for (i = 0; i < sizeof(parameter_values); i++) {
   0286 0E            [12] 1203 	inc	r6
   0287 BE 00 01      [24] 1204 	cjne	r6,#0x00,00139$
   028A 0F            [12] 1205 	inc	r7
   028B                    1206 00139$:
   028B C3            [12] 1207 	clr	c
   028C EE            [12] 1208 	mov	a,r6
   028D 94 3C         [12] 1209 	subb	a,#0x3C
   028F EF            [12] 1210 	mov	a,r7
   0290 94 00         [12] 1211 	subb	a,#0x00
   0292 40 BA         [24] 1212 	jc	00109$
                           1213 ;	radio/parameters.c:197: if (param_get(PARAM_FORMAT) != PARAM_FORMAT_CURRENT) {
   0294 75 82 00      [24] 1214 	mov	dpl,#0x00
   0297 12r02r15      [24] 1215 	lcall	_param_get
   029A AC 82         [24] 1216 	mov	r4,dpl
   029C AD 83         [24] 1217 	mov	r5,dph
   029E AE F0         [24] 1218 	mov	r6,b
   02A0 FF            [12] 1219 	mov	r7,a
   02A1 BC 19 0B      [24] 1220 	cjne	r4,#0x19,00141$
   02A4 BD 00 08      [24] 1221 	cjne	r5,#0x00,00141$
   02A7 BE 00 05      [24] 1222 	cjne	r6,#0x00,00141$
   02AA BF 00 02      [24] 1223 	cjne	r7,#0x00,00141$
   02AD 80 07         [24] 1224 	sjmp	00103$
   02AF                    1225 00141$:
                           1226 ;	radio/parameters.c:199: param_default();
   02AF 12r04r5A      [24] 1227 	lcall	_param_default
                           1228 ;	radio/parameters.c:200: return false;
   02B2 C3            [12] 1229 	clr	c
   02B3 02r03rAA      [24] 1230 	ljmp	00113$
   02B6                    1231 00103$:
                           1232 ;	radio/parameters.c:204: checksum = crc16(sizeof(parameter_values), (__xdata uint8_t *)parameter_values);
   02B6 75*00r00      [24] 1233 	mov	_crc16_PARM_2,#_parameter_values
   02B9 75*01s00      [24] 1234 	mov	(_crc16_PARM_2 + 1),#(_parameter_values >> 8)
   02BC 75 82 3C      [24] 1235 	mov	dpl,#0x3C
   02BF 12r00r00      [24] 1236 	lcall	_crc16
   02C2 AE 82         [24] 1237 	mov	r6,dpl
   02C4 AF 83         [24] 1238 	mov	r7,dph
                           1239 ;	radio/parameters.c:205: expected = flash_read_scratch(3)<<8 | flash_read_scratch(2);
   02C6 90 00 03      [24] 1240 	mov	dptr,#0x0003
   02C9 C0 07         [24] 1241 	push	ar7
   02CB C0 06         [24] 1242 	push	ar6
   02CD 12r00r00      [24] 1243 	lcall	_flash_read_scratch
   02D0 AC 82         [24] 1244 	mov	r4,dpl
   02D2 7D 00         [12] 1245 	mov	r5,#0x00
   02D4 90 00 02      [24] 1246 	mov	dptr,#0x0002
   02D7 C0 05         [24] 1247 	push	ar5
   02D9 C0 04         [24] 1248 	push	ar4
   02DB 12r00r00      [24] 1249 	lcall	_flash_read_scratch
   02DE AB 82         [24] 1250 	mov	r3,dpl
   02E0 D0 04         [24] 1251 	pop	ar4
   02E2 D0 05         [24] 1252 	pop	ar5
   02E4 D0 06         [24] 1253 	pop	ar6
   02E6 D0 07         [24] 1254 	pop	ar7
   02E8 7A 00         [12] 1255 	mov	r2,#0x00
   02EA EB            [12] 1256 	mov	a,r3
   02EB 42 05         [12] 1257 	orl	ar5,a
   02ED EA            [12] 1258 	mov	a,r2
   02EE 42 04         [12] 1259 	orl	ar4,a
                           1260 ;	radio/parameters.c:206: if (checksum != expected)
   02F0 EE            [12] 1261 	mov	a,r6
   02F1 B5 05 06      [24] 1262 	cjne	a,ar5,00142$
   02F4 EF            [12] 1263 	mov	a,r7
   02F5 B5 04 02      [24] 1264 	cjne	a,ar4,00142$
   02F8 80 07         [24] 1265 	sjmp	00120$
   02FA                    1266 00142$:
                           1267 ;	radio/parameters.c:209: param_default();
   02FA 12r04r5A      [24] 1268 	lcall	_param_default
                           1269 ;	radio/parameters.c:210: return false;
   02FD C3            [12] 1270 	clr	c
   02FE 02r03rAA      [24] 1271 	ljmp	00113$
                           1272 ;	radio/parameters.c:213: for (i = 0; i < PARAM_MAX; i++) {
   0301                    1273 00120$:
   0301 7F 00         [12] 1274 	mov	r7,#0x00
   0303 7E 00         [12] 1275 	mov	r6,#0x00
   0305 7C 00         [12] 1276 	mov	r4,#0x00
   0307 7D 00         [12] 1277 	mov	r5,#0x00
   0309                    1278 00111$:
                           1279 ;	radio/parameters.c:214: if (!param_check(i, parameter_values[i])) {
   0309 8F 03         [24] 1280 	mov	ar3,r7
   030B 8F*04         [24] 1281 	mov	_param_load_sloc0_1_0,r7
   030D EE            [12] 1282 	mov	a,r6
   030E C5*04         [12] 1283 	xch	a,_param_load_sloc0_1_0
   0310 25 E0         [12] 1284 	add	a,acc
   0312 C5*04         [12] 1285 	xch	a,_param_load_sloc0_1_0
   0314 33            [12] 1286 	rlc	a
   0315 C5*04         [12] 1287 	xch	a,_param_load_sloc0_1_0
   0317 25 E0         [12] 1288 	add	a,acc
   0319 C5*04         [12] 1289 	xch	a,_param_load_sloc0_1_0
   031B 33            [12] 1290 	rlc	a
   031C F5*05         [12] 1291 	mov	(_param_load_sloc0_1_0 + 1),a
   031E E5*04         [12] 1292 	mov	a,_param_load_sloc0_1_0
   0320 24r00         [12] 1293 	add	a,#_parameter_values
   0322 F5*06         [12] 1294 	mov	_param_load_sloc1_1_0,a
   0324 E5*05         [12] 1295 	mov	a,(_param_load_sloc0_1_0 + 1)
   0326 34s00         [12] 1296 	addc	a,#(_parameter_values >> 8)
   0328 F5*07         [12] 1297 	mov	(_param_load_sloc1_1_0 + 1),a
   032A 85*06 82      [24] 1298 	mov	dpl,_param_load_sloc1_1_0
   032D 85*07 83      [24] 1299 	mov	dph,(_param_load_sloc1_1_0 + 1)
   0330 E0            [24] 1300 	movx	a,@dptr
   0331 F5*00         [12] 1301 	mov	_param_check_PARM_2,a
   0333 A3            [24] 1302 	inc	dptr
   0334 E0            [24] 1303 	movx	a,@dptr
   0335 F5*01         [12] 1304 	mov	(_param_check_PARM_2 + 1),a
   0337 A3            [24] 1305 	inc	dptr
   0338 E0            [24] 1306 	movx	a,@dptr
   0339 F5*02         [12] 1307 	mov	(_param_check_PARM_2 + 2),a
   033B A3            [24] 1308 	inc	dptr
   033C E0            [24] 1309 	movx	a,@dptr
   033D F5*03         [12] 1310 	mov	(_param_check_PARM_2 + 3),a
   033F 8B 82         [24] 1311 	mov	dpl,r3
   0341 C0 07         [24] 1312 	push	ar7
   0343 C0 06         [24] 1313 	push	ar6
   0345 C0 05         [24] 1314 	push	ar5
   0347 C0 04         [24] 1315 	push	ar4
   0349 12r00r00      [24] 1316 	lcall	_param_check
   034C D0 04         [24] 1317 	pop	ar4
   034E D0 05         [24] 1318 	pop	ar5
   0350 D0 06         [24] 1319 	pop	ar6
   0352 D0 07         [24] 1320 	pop	ar7
   0354 40 3B         [24] 1321 	jc	00112$
                           1322 ;	radio/parameters.c:215: parameter_values[i] = parameter_info[i].default_value;
   0356 EC            [12] 1323 	mov	a,r4
   0357 24r00         [12] 1324 	add	a,#_parameter_info
   0359 F5*08         [12] 1325 	mov	_param_load_sloc2_1_0,a
   035B ED            [12] 1326 	mov	a,r5
   035C 34s00         [12] 1327 	addc	a,#(_parameter_info >> 8)
   035E F5*09         [12] 1328 	mov	(_param_load_sloc2_1_0 + 1),a
   0360 85*08 82      [24] 1329 	mov	dpl,_param_load_sloc2_1_0
   0363 85*09 83      [24] 1330 	mov	dph,(_param_load_sloc2_1_0 + 1)
   0366 A3            [24] 1331 	inc	dptr
   0367 A3            [24] 1332 	inc	dptr
   0368 A3            [24] 1333 	inc	dptr
   0369 E4            [12] 1334 	clr	a
   036A 93            [24] 1335 	movc	a,@a+dptr
   036B F5*0A         [12] 1336 	mov	_param_load_sloc3_1_0,a
   036D A3            [24] 1337 	inc	dptr
   036E E4            [12] 1338 	clr	a
   036F 93            [24] 1339 	movc	a,@a+dptr
   0370 F5*0B         [12] 1340 	mov	(_param_load_sloc3_1_0 + 1),a
   0372 A3            [24] 1341 	inc	dptr
   0373 E4            [12] 1342 	clr	a
   0374 93            [24] 1343 	movc	a,@a+dptr
   0375 F5*0C         [12] 1344 	mov	(_param_load_sloc3_1_0 + 2),a
   0377 A3            [24] 1345 	inc	dptr
   0378 E4            [12] 1346 	clr	a
   0379 93            [24] 1347 	movc	a,@a+dptr
   037A F5*0D         [12] 1348 	mov	(_param_load_sloc3_1_0 + 3),a
   037C 85*06 82      [24] 1349 	mov	dpl,_param_load_sloc1_1_0
   037F 85*07 83      [24] 1350 	mov	dph,(_param_load_sloc1_1_0 + 1)
   0382 E5*0A         [12] 1351 	mov	a,_param_load_sloc3_1_0
   0384 F0            [24] 1352 	movx	@dptr,a
   0385 E5*0B         [12] 1353 	mov	a,(_param_load_sloc3_1_0 + 1)
   0387 A3            [24] 1354 	inc	dptr
   0388 F0            [24] 1355 	movx	@dptr,a
   0389 E5*0C         [12] 1356 	mov	a,(_param_load_sloc3_1_0 + 2)
   038B A3            [24] 1357 	inc	dptr
   038C F0            [24] 1358 	movx	@dptr,a
   038D E5*0D         [12] 1359 	mov	a,(_param_load_sloc3_1_0 + 3)
   038F A3            [24] 1360 	inc	dptr
   0390 F0            [24] 1361 	movx	@dptr,a
   0391                    1362 00112$:
                           1363 ;	radio/parameters.c:213: for (i = 0; i < PARAM_MAX; i++) {
   0391 74 07         [12] 1364 	mov	a,#0x07
   0393 2C            [12] 1365 	add	a,r4
   0394 FC            [12] 1366 	mov	r4,a
   0395 E4            [12] 1367 	clr	a
   0396 3D            [12] 1368 	addc	a,r5
   0397 FD            [12] 1369 	mov	r5,a
   0398 0F            [12] 1370 	inc	r7
   0399 BF 00 01      [24] 1371 	cjne	r7,#0x00,00144$
   039C 0E            [12] 1372 	inc	r6
   039D                    1373 00144$:
   039D C3            [12] 1374 	clr	c
   039E EF            [12] 1375 	mov	a,r7
   039F 94 0F         [12] 1376 	subb	a,#0x0F
   03A1 EE            [12] 1377 	mov	a,r6
   03A2 94 00         [12] 1378 	subb	a,#0x00
   03A4 50 03         [24] 1379 	jnc	00145$
   03A6 02r03r09      [24] 1380 	ljmp	00111$
   03A9                    1381 00145$:
                           1382 ;	radio/parameters.c:219: return true;
   03A9 D3            [12] 1383 	setb	c
   03AA                    1384 00113$:
   03AA 33            [12] 1385 	rlc	a
   03AB D0 D0         [24] 1386 	pop	psw
   03AD 92 AF         [24] 1387 	mov	ea,c
   03AF 13            [12] 1388 	rrc	a
   03B0 22            [24] 1389 	ret
                           1390 ;------------------------------------------------------------
                           1391 ;Allocation info for local variables in function 'param_save'
                           1392 ;------------------------------------------------------------
                           1393 ;	radio/parameters.c:223: param_save(void)
                           1394 ;	-----------------------------------------
                           1395 ;	 function param_save
                           1396 ;	-----------------------------------------
   03B1                    1397 _param_save:
   03B1 D3            [12] 1398 	setb	c
   03B2 10 AF 01      [24] 1399 	jbc	ea,00110$
   03B5 C3            [12] 1400 	clr	c
   03B6                    1401 00110$:
   03B6 C0 D0         [24] 1402 	push	psw
                           1403 ;	radio/parameters.c:229: parameter_values[PARAM_FORMAT] = PARAM_FORMAT_CURRENT;
   03B8 90r00r00      [24] 1404 	mov	dptr,#_parameter_values
   03BB 74 19         [12] 1405 	mov	a,#0x19
   03BD F0            [24] 1406 	movx	@dptr,a
   03BE E4            [12] 1407 	clr	a
   03BF A3            [24] 1408 	inc	dptr
   03C0 F0            [24] 1409 	movx	@dptr,a
   03C1 E4            [12] 1410 	clr	a
   03C2 A3            [24] 1411 	inc	dptr
   03C3 F0            [24] 1412 	movx	@dptr,a
   03C4 E4            [12] 1413 	clr	a
   03C5 A3            [24] 1414 	inc	dptr
   03C6 F0            [24] 1415 	movx	@dptr,a
                           1416 ;	radio/parameters.c:232: flash_erase_scratch();
   03C7 12r00r00      [24] 1417 	lcall	_flash_erase_scratch
                           1418 ;	radio/parameters.c:235: flash_write_scratch(0, sizeof(parameter_values)&0xFF);
   03CA 78r00         [12] 1419 	mov	r0,#_flash_write_scratch_PARM_2
   03CC 74 3C         [12] 1420 	mov	a,#0x3C
   03CE F2            [24] 1421 	movx	@r0,a
   03CF 90 00 00      [24] 1422 	mov	dptr,#0x0000
   03D2 12r00r00      [24] 1423 	lcall	_flash_write_scratch
                           1424 ;	radio/parameters.c:236: flash_write_scratch(1, (int)(sizeof(parameter_values))>>8);
   03D5 78r00         [12] 1425 	mov	r0,#_flash_write_scratch_PARM_2
   03D7 E4            [12] 1426 	clr	a
   03D8 F2            [24] 1427 	movx	@r0,a
   03D9 90 00 01      [24] 1428 	mov	dptr,#0x0001
   03DC 12r00r00      [24] 1429 	lcall	_flash_write_scratch
                           1430 ;	radio/parameters.c:239: checksum = crc16(sizeof(parameter_values), (__xdata uint8_t *)parameter_values);
   03DF 75*00r00      [24] 1431 	mov	_crc16_PARM_2,#_parameter_values
   03E2 75*01s00      [24] 1432 	mov	(_crc16_PARM_2 + 1),#(_parameter_values >> 8)
   03E5 75 82 3C      [24] 1433 	mov	dpl,#0x3C
   03E8 12r00r00      [24] 1434 	lcall	_crc16
   03EB AE 82         [24] 1435 	mov	r6,dpl
   03ED AF 83         [24] 1436 	mov	r7,dph
                           1437 ;	radio/parameters.c:240: flash_write_scratch(2, checksum&0xFF);
   03EF 8E 04         [24] 1438 	mov	ar4,r6
   03F1 78r00         [12] 1439 	mov	r0,#_flash_write_scratch_PARM_2
   03F3 EC            [12] 1440 	mov	a,r4
   03F4 F2            [24] 1441 	movx	@r0,a
   03F5 90 00 02      [24] 1442 	mov	dptr,#0x0002
   03F8 C0 07         [24] 1443 	push	ar7
   03FA C0 06         [24] 1444 	push	ar6
   03FC 12r00r00      [24] 1445 	lcall	_flash_write_scratch
   03FF D0 06         [24] 1446 	pop	ar6
   0401 D0 07         [24] 1447 	pop	ar7
                           1448 ;	radio/parameters.c:241: flash_write_scratch(3, checksum>>8);
   0403 78r00         [12] 1449 	mov	r0,#_flash_write_scratch_PARM_2
   0405 EF            [12] 1450 	mov	a,r7
   0406 F2            [24] 1451 	movx	@r0,a
   0407 90 00 03      [24] 1452 	mov	dptr,#0x0003
   040A 12r00r00      [24] 1453 	lcall	_flash_write_scratch
                           1454 ;	radio/parameters.c:244: for (i = 0; i < sizeof(parameter_values); i++) {
   040D 78r04         [12] 1455 	mov	r0,#_param_save_i_1_140
   040F E4            [12] 1456 	clr	a
   0410 F2            [24] 1457 	movx	@r0,a
   0411 08            [12] 1458 	inc	r0
   0412 F2            [24] 1459 	movx	@r0,a
   0413                    1460 00102$:
                           1461 ;	radio/parameters.c:245: flash_write_scratch(i+4, ((uint8_t *)parameter_values)[i]);
   0413 78r04         [12] 1462 	mov	r0,#_param_save_i_1_140
   0415 E2            [24] 1463 	movx	a,@r0
   0416 24 04         [12] 1464 	add	a,#0x04
   0418 FC            [12] 1465 	mov	r4,a
   0419 08            [12] 1466 	inc	r0
   041A E2            [24] 1467 	movx	a,@r0
   041B 34 00         [12] 1468 	addc	a,#0x00
   041D FD            [12] 1469 	mov	r5,a
   041E 78r04         [12] 1470 	mov	r0,#_param_save_i_1_140
   0420 E2            [24] 1471 	movx	a,@r0
   0421 24r00         [12] 1472 	add	a,#_parameter_values
   0423 FA            [12] 1473 	mov	r2,a
   0424 08            [12] 1474 	inc	r0
   0425 E2            [24] 1475 	movx	a,@r0
   0426 34s00         [12] 1476 	addc	a,#(_parameter_values >> 8)
   0428 FB            [12] 1477 	mov	r3,a
   0429 7F 00         [12] 1478 	mov	r7,#0x00
   042B 8A 82         [24] 1479 	mov	dpl,r2
   042D 8B 83         [24] 1480 	mov	dph,r3
   042F 8F F0         [24] 1481 	mov	b,r7
   0431 78r00         [12] 1482 	mov	r0,#_flash_write_scratch_PARM_2
   0433 12r00r00      [24] 1483 	lcall	__gptrget
   0436 F2            [24] 1484 	movx	@r0,a
   0437 8C 82         [24] 1485 	mov	dpl,r4
   0439 8D 83         [24] 1486 	mov	dph,r5
   043B 12r00r00      [24] 1487 	lcall	_flash_write_scratch
                           1488 ;	radio/parameters.c:244: for (i = 0; i < sizeof(parameter_values); i++) {
   043E 78r04         [12] 1489 	mov	r0,#_param_save_i_1_140
   0440 E2            [24] 1490 	movx	a,@r0
   0441 24 01         [12] 1491 	add	a,#0x01
   0443 F2            [24] 1492 	movx	@r0,a
   0444 08            [12] 1493 	inc	r0
   0445 E2            [24] 1494 	movx	a,@r0
   0446 34 00         [12] 1495 	addc	a,#0x00
   0448 F2            [24] 1496 	movx	@r0,a
   0449 78r04         [12] 1497 	mov	r0,#_param_save_i_1_140
   044B C3            [12] 1498 	clr	c
   044C E2            [24] 1499 	movx	a,@r0
   044D 94 3C         [12] 1500 	subb	a,#0x3C
   044F 08            [12] 1501 	inc	r0
   0450 E2            [24] 1502 	movx	a,@r0
   0451 94 00         [12] 1503 	subb	a,#0x00
   0453 40 BE         [24] 1504 	jc	00102$
   0455 D0 D0         [24] 1505 	pop	psw
   0457 92 AF         [24] 1506 	mov	ea,c
   0459 22            [24] 1507 	ret
                           1508 ;------------------------------------------------------------
                           1509 ;Allocation info for local variables in function 'param_default'
                           1510 ;------------------------------------------------------------
                           1511 ;	radio/parameters.c:250: param_default(void)
                           1512 ;	-----------------------------------------
                           1513 ;	 function param_default
                           1514 ;	-----------------------------------------
   045A                    1515 _param_default:
                           1516 ;	radio/parameters.c:255: for (i = 0; i < PARAM_MAX; i++) {
   045A 7F 00         [12] 1517 	mov	r7,#0x00
   045C                    1518 00102$:
                           1519 ;	radio/parameters.c:256: parameter_values[i] = parameter_info[i].default_value;
   045C EF            [12] 1520 	mov	a,r7
   045D 75 F0 04      [24] 1521 	mov	b,#0x04
   0460 A4            [48] 1522 	mul	ab
   0461 24r00         [12] 1523 	add	a,#_parameter_values
   0463 FD            [12] 1524 	mov	r5,a
   0464 74s00         [12] 1525 	mov	a,#(_parameter_values >> 8)
   0466 35 F0         [12] 1526 	addc	a,b
   0468 FE            [12] 1527 	mov	r6,a
   0469 EF            [12] 1528 	mov	a,r7
   046A 75 F0 07      [24] 1529 	mov	b,#0x07
   046D A4            [48] 1530 	mul	ab
   046E 24r00         [12] 1531 	add	a,#_parameter_info
   0470 FB            [12] 1532 	mov	r3,a
   0471 74s00         [12] 1533 	mov	a,#(_parameter_info >> 8)
   0473 35 F0         [12] 1534 	addc	a,b
   0475 FC            [12] 1535 	mov	r4,a
   0476 8B 82         [24] 1536 	mov	dpl,r3
   0478 8C 83         [24] 1537 	mov	dph,r4
   047A A3            [24] 1538 	inc	dptr
   047B A3            [24] 1539 	inc	dptr
   047C A3            [24] 1540 	inc	dptr
   047D E4            [12] 1541 	clr	a
   047E 93            [24] 1542 	movc	a,@a+dptr
   047F F9            [12] 1543 	mov	r1,a
   0480 A3            [24] 1544 	inc	dptr
   0481 E4            [12] 1545 	clr	a
   0482 93            [24] 1546 	movc	a,@a+dptr
   0483 FA            [12] 1547 	mov	r2,a
   0484 A3            [24] 1548 	inc	dptr
   0485 E4            [12] 1549 	clr	a
   0486 93            [24] 1550 	movc	a,@a+dptr
   0487 FB            [12] 1551 	mov	r3,a
   0488 A3            [24] 1552 	inc	dptr
   0489 E4            [12] 1553 	clr	a
   048A 93            [24] 1554 	movc	a,@a+dptr
   048B FC            [12] 1555 	mov	r4,a
   048C 8D 82         [24] 1556 	mov	dpl,r5
   048E 8E 83         [24] 1557 	mov	dph,r6
   0490 E9            [12] 1558 	mov	a,r1
   0491 F0            [24] 1559 	movx	@dptr,a
   0492 EA            [12] 1560 	mov	a,r2
   0493 A3            [24] 1561 	inc	dptr
   0494 F0            [24] 1562 	movx	@dptr,a
   0495 EB            [12] 1563 	mov	a,r3
   0496 A3            [24] 1564 	inc	dptr
   0497 F0            [24] 1565 	movx	@dptr,a
   0498 EC            [12] 1566 	mov	a,r4
   0499 A3            [24] 1567 	inc	dptr
   049A F0            [24] 1568 	movx	@dptr,a
                           1569 ;	radio/parameters.c:255: for (i = 0; i < PARAM_MAX; i++) {
   049B 0F            [12] 1570 	inc	r7
   049C BF 0F 00      [24] 1571 	cjne	r7,#0x0F,00110$
   049F                    1572 00110$:
   049F 40 BB         [24] 1573 	jc	00102$
   04A1 22            [24] 1574 	ret
                           1575 ;------------------------------------------------------------
                           1576 ;Allocation info for local variables in function 'param_id'
                           1577 ;------------------------------------------------------------
                           1578 ;	radio/parameters.c:261: param_id(__data char * __pdata name)
                           1579 ;	-----------------------------------------
                           1580 ;	 function param_id
                           1581 ;	-----------------------------------------
   04A2                    1582 _param_id:
   04A2 AF 82         [24] 1583 	mov	r7,dpl
                           1584 ;	radio/parameters.c:265: for (i = 0; i < PARAM_MAX; i++) {
   04A4 7E 00         [12] 1585 	mov	r6,#0x00
   04A6                    1586 00104$:
                           1587 ;	radio/parameters.c:266: if (!strcmp(name, parameter_info[i].name))
   04A6 8F 03         [24] 1588 	mov	ar3,r7
   04A8 7C 00         [12] 1589 	mov	r4,#0x00
   04AA 7D 40         [12] 1590 	mov	r5,#0x40
   04AC EE            [12] 1591 	mov	a,r6
   04AD 75 F0 07      [24] 1592 	mov	b,#0x07
   04B0 A4            [48] 1593 	mul	ab
   04B1 24r00         [12] 1594 	add	a,#_parameter_info
   04B3 F5 82         [12] 1595 	mov	dpl,a
   04B5 74s00         [12] 1596 	mov	a,#(_parameter_info >> 8)
   04B7 35 F0         [12] 1597 	addc	a,b
   04B9 F5 83         [12] 1598 	mov	dph,a
   04BB E4            [12] 1599 	clr	a
   04BC 93            [24] 1600 	movc	a,@a+dptr
   04BD F8            [12] 1601 	mov	r0,a
   04BE A3            [24] 1602 	inc	dptr
   04BF E4            [12] 1603 	clr	a
   04C0 93            [24] 1604 	movc	a,@a+dptr
   04C1 F9            [12] 1605 	mov	r1,a
   04C2 A3            [24] 1606 	inc	dptr
   04C3 E4            [12] 1607 	clr	a
   04C4 93            [24] 1608 	movc	a,@a+dptr
   04C5 FA            [12] 1609 	mov	r2,a
   04C6 90r00r00      [24] 1610 	mov	dptr,#_strcmp_PARM_2
   04C9 E8            [12] 1611 	mov	a,r0
   04CA F0            [24] 1612 	movx	@dptr,a
   04CB E9            [12] 1613 	mov	a,r1
   04CC A3            [24] 1614 	inc	dptr
   04CD F0            [24] 1615 	movx	@dptr,a
   04CE EA            [12] 1616 	mov	a,r2
   04CF A3            [24] 1617 	inc	dptr
   04D0 F0            [24] 1618 	movx	@dptr,a
   04D1 8B 82         [24] 1619 	mov	dpl,r3
   04D3 8C 83         [24] 1620 	mov	dph,r4
   04D5 8D F0         [24] 1621 	mov	b,r5
   04D7 C0 07         [24] 1622 	push	ar7
   04D9 C0 06         [24] 1623 	push	ar6
   04DB 12r00r00      [24] 1624 	lcall	_strcmp
   04DE E5 82         [12] 1625 	mov	a,dpl
   04E0 85 83 F0      [24] 1626 	mov	b,dph
   04E3 D0 06         [24] 1627 	pop	ar6
   04E5 D0 07         [24] 1628 	pop	ar7
   04E7 45 F0         [12] 1629 	orl	a,b
   04E9 60 06         [24] 1630 	jz	00103$
                           1631 ;	radio/parameters.c:265: for (i = 0; i < PARAM_MAX; i++) {
   04EB 0E            [12] 1632 	inc	r6
   04EC BE 0F 00      [24] 1633 	cjne	r6,#0x0F,00116$
   04EF                    1634 00116$:
   04EF 40 B5         [24] 1635 	jc	00104$
   04F1                    1636 00103$:
                           1637 ;	radio/parameters.c:269: return i;
   04F1 8E 82         [24] 1638 	mov	dpl,r6
   04F3 22            [24] 1639 	ret
                           1640 ;------------------------------------------------------------
                           1641 ;Allocation info for local variables in function 'param_name'
                           1642 ;------------------------------------------------------------
                           1643 ;param                     Allocated to registers r7 
                           1644 ;------------------------------------------------------------
                           1645 ;	radio/parameters.c:273: param_name(__data enum ParamID param)
                           1646 ;	-----------------------------------------
                           1647 ;	 function param_name
                           1648 ;	-----------------------------------------
   04F4                    1649 _param_name:
   04F4 AF 82         [24] 1650 	mov	r7,dpl
                           1651 ;	radio/parameters.c:275: if (param < PARAM_MAX) {
   04F6 BF 0F 00      [24] 1652 	cjne	r7,#0x0F,00108$
   04F9                    1653 00108$:
   04F9 50 21         [24] 1654 	jnc	00102$
                           1655 ;	radio/parameters.c:276: return parameter_info[param].name;
   04FB EF            [12] 1656 	mov	a,r7
   04FC 75 F0 07      [24] 1657 	mov	b,#0x07
   04FF A4            [48] 1658 	mul	ab
   0500 24r00         [12] 1659 	add	a,#_parameter_info
   0502 F5 82         [12] 1660 	mov	dpl,a
   0504 74s00         [12] 1661 	mov	a,#(_parameter_info >> 8)
   0506 35 F0         [12] 1662 	addc	a,b
   0508 F5 83         [12] 1663 	mov	dph,a
   050A E4            [12] 1664 	clr	a
   050B 93            [24] 1665 	movc	a,@a+dptr
   050C FD            [12] 1666 	mov	r5,a
   050D A3            [24] 1667 	inc	dptr
   050E E4            [12] 1668 	clr	a
   050F 93            [24] 1669 	movc	a,@a+dptr
   0510 FE            [12] 1670 	mov	r6,a
   0511 A3            [24] 1671 	inc	dptr
   0512 E4            [12] 1672 	clr	a
   0513 93            [24] 1673 	movc	a,@a+dptr
   0514 FF            [12] 1674 	mov	r7,a
   0515 8D 82         [24] 1675 	mov	dpl,r5
   0517 8E 83         [24] 1676 	mov	dph,r6
   0519 8F F0         [24] 1677 	mov	b,r7
   051B 22            [24] 1678 	ret
   051C                    1679 00102$:
                           1680 ;	radio/parameters.c:278: return 0;
   051C 90 00 00      [24] 1681 	mov	dptr,#0x0000
   051F 75 F0 00      [24] 1682 	mov	b,#0x00
   0522 22            [24] 1683 	ret
                           1684 ;------------------------------------------------------------
                           1685 ;Allocation info for local variables in function 'constrain'
                           1686 ;------------------------------------------------------------
                           1687 ;	radio/parameters.c:282: uint32_t constrain(__pdata uint32_t v, __pdata uint32_t min, __pdata uint32_t max)
                           1688 ;	-----------------------------------------
                           1689 ;	 function constrain
                           1690 ;	-----------------------------------------
   0523                    1691 _constrain:
   0523 AC 82         [24] 1692 	mov	r4,dpl
   0525 AD 83         [24] 1693 	mov	r5,dph
   0527 AE F0         [24] 1694 	mov	r6,b
   0529 FF            [12] 1695 	mov	r7,a
                           1696 ;	radio/parameters.c:284: if (v < min) v = min;
   052A 78r06         [12] 1697 	mov	r0,#_constrain_PARM_2
   052C C3            [12] 1698 	clr	c
   052D E2            [24] 1699 	movx	a,@r0
   052E F5 F0         [12] 1700 	mov	b,a
   0530 EC            [12] 1701 	mov	a,r4
   0531 95 F0         [12] 1702 	subb	a,b
   0533 08            [12] 1703 	inc	r0
   0534 E2            [24] 1704 	movx	a,@r0
   0535 F5 F0         [12] 1705 	mov	b,a
   0537 ED            [12] 1706 	mov	a,r5
   0538 95 F0         [12] 1707 	subb	a,b
   053A 08            [12] 1708 	inc	r0
   053B E2            [24] 1709 	movx	a,@r0
   053C F5 F0         [12] 1710 	mov	b,a
   053E EE            [12] 1711 	mov	a,r6
   053F 95 F0         [12] 1712 	subb	a,b
   0541 08            [12] 1713 	inc	r0
   0542 E2            [24] 1714 	movx	a,@r0
   0543 F5 F0         [12] 1715 	mov	b,a
   0545 EF            [12] 1716 	mov	a,r7
   0546 95 F0         [12] 1717 	subb	a,b
   0548 50 0D         [24] 1718 	jnc	00102$
   054A 78r06         [12] 1719 	mov	r0,#_constrain_PARM_2
   054C E2            [24] 1720 	movx	a,@r0
   054D FC            [12] 1721 	mov	r4,a
   054E 08            [12] 1722 	inc	r0
   054F E2            [24] 1723 	movx	a,@r0
   0550 FD            [12] 1724 	mov	r5,a
   0551 08            [12] 1725 	inc	r0
   0552 E2            [24] 1726 	movx	a,@r0
   0553 FE            [12] 1727 	mov	r6,a
   0554 08            [12] 1728 	inc	r0
   0555 E2            [24] 1729 	movx	a,@r0
   0556 FF            [12] 1730 	mov	r7,a
   0557                    1731 00102$:
                           1732 ;	radio/parameters.c:285: if (v > max) v = max;
   0557 78r0A         [12] 1733 	mov	r0,#_constrain_PARM_3
   0559 C3            [12] 1734 	clr	c
   055A E2            [24] 1735 	movx	a,@r0
   055B 9C            [12] 1736 	subb	a,r4
   055C 08            [12] 1737 	inc	r0
   055D E2            [24] 1738 	movx	a,@r0
   055E 9D            [12] 1739 	subb	a,r5
   055F 08            [12] 1740 	inc	r0
   0560 E2            [24] 1741 	movx	a,@r0
   0561 9E            [12] 1742 	subb	a,r6
   0562 08            [12] 1743 	inc	r0
   0563 E2            [24] 1744 	movx	a,@r0
   0564 9F            [12] 1745 	subb	a,r7
   0565 50 0D         [24] 1746 	jnc	00104$
   0567 78r0A         [12] 1747 	mov	r0,#_constrain_PARM_3
   0569 E2            [24] 1748 	movx	a,@r0
   056A FC            [12] 1749 	mov	r4,a
   056B 08            [12] 1750 	inc	r0
   056C E2            [24] 1751 	movx	a,@r0
   056D FD            [12] 1752 	mov	r5,a
   056E 08            [12] 1753 	inc	r0
   056F E2            [24] 1754 	movx	a,@r0
   0570 FE            [12] 1755 	mov	r6,a
   0571 08            [12] 1756 	inc	r0
   0572 E2            [24] 1757 	movx	a,@r0
   0573 FF            [12] 1758 	mov	r7,a
   0574                    1759 00104$:
                           1760 ;	radio/parameters.c:286: return v;
   0574 8C 82         [24] 1761 	mov	dpl,r4
   0576 8D 83         [24] 1762 	mov	dph,r5
   0578 8E F0         [24] 1763 	mov	b,r6
   057A EF            [12] 1764 	mov	a,r7
   057B 22            [24] 1765 	ret
                           1766 	.area CSEG    (CODE)
                           1767 	.area CONST   (CODE)
   0000                    1768 _parameter_info:
   0000r69s00 80           1769 	.byte _str_0,(_str_0 >> 8),#0x80
   0003 19 00 00 00        1770 	.byte #0x19,#0x00,#0x00,#0x00	; 25
   0007r70s00 80           1771 	.byte _str_1,(_str_1 >> 8),#0x80
   000A 39 00 00 00        1772 	.byte #0x39,#0x00,#0x00,#0x00	; 57
   000Er7Ds00 80           1773 	.byte _str_2,(_str_2 >> 8),#0x80
   0011 40 00 00 00        1774 	.byte #0x40,#0x00,#0x00,#0x00	; 64
   0015r87s00 80           1775 	.byte _str_3,(_str_3 >> 8),#0x80
   0018 19 00 00 00        1776 	.byte #0x19,#0x00,#0x00,#0x00	; 25
   001Cr8Ds00 80           1777 	.byte _str_4,(_str_4 >> 8),#0x80
   001F 00 00 00 00        1778 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   0023r95s00 80           1779 	.byte _str_5,(_str_5 >> 8),#0x80
   0026 01 00 00 00        1780 	.byte #0x01,#0x00,#0x00,#0x00	; 1
   002Ar99s00 80           1781 	.byte _str_6,(_str_6 >> 8),#0x80
   002D 01 00 00 00        1782 	.byte #0x01,#0x00,#0x00,#0x00	; 1
   0031rA1s00 80           1783 	.byte _str_7,(_str_7 >> 8),#0x80
   0034 01 00 00 00        1784 	.byte #0x01,#0x00,#0x00,#0x00	; 1
   0038rABs00 80           1785 	.byte _str_8,(_str_8 >> 8),#0x80
   003B 00 00 00 00        1786 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   003FrB4s00 80           1787 	.byte _str_9,(_str_9 >> 8),#0x80
   0042 00 00 00 00        1788 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   0046rBDs00 80           1789 	.byte _str_10,(_str_10 >> 8),#0x80
   0049 00 00 00 00        1790 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   004DrCAs00 80           1791 	.byte _str_11,(_str_11 >> 8),#0x80
   0050 64 00 00 00        1792 	.byte #0x64,#0x00,#0x00,#0x00	; 100
   0054rD5s00 80           1793 	.byte _str_12,(_str_12 >> 8),#0x80
   0057 00 00 00 00        1794 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   005BrDEs00 80           1795 	.byte _str_13,(_str_13 >> 8),#0x80
   005E 00 00 00 00        1796 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   0062rE9s00 80           1797 	.byte _str_14,(_str_14 >> 8),#0x80
   0065 00 00 00 00        1798 	.byte #0x00,#0x00,#0x00,#0x00	; 0
   0069                    1799 _str_0:
   0069 46 4F 52 4D 41 54  1800 	.ascii "FORMAT"
   006F 00                 1801 	.db 0x00
   0070                    1802 _str_1:
   0070 53 45 52 49 41 4C  1803 	.ascii "SERIAL_SPEED"
        5F 53 50 45 45 44
   007C 00                 1804 	.db 0x00
   007D                    1805 _str_2:
   007D 41 49 52 5F 53 50  1806 	.ascii "AIR_SPEED"
        45 45 44
   0086 00                 1807 	.db 0x00
   0087                    1808 _str_3:
   0087 4E 45 54 49 44     1809 	.ascii "NETID"
   008C 00                 1810 	.db 0x00
   008D                    1811 _str_4:
   008D 54 58 50 4F 57 45  1812 	.ascii "TXPOWER"
        52
   0094 00                 1813 	.db 0x00
   0095                    1814 _str_5:
   0095 45 43 43           1815 	.ascii "ECC"
   0098 00                 1816 	.db 0x00
   0099                    1817 _str_6:
   0099 4D 41 56 4C 49 4E  1818 	.ascii "MAVLINK"
        4B
   00A0 00                 1819 	.db 0x00
   00A1                    1820 _str_7:
   00A1 4F 50 50 52 45 53  1821 	.ascii "OPPRESEND"
        45 4E 44
   00AA 00                 1822 	.db 0x00
   00AB                    1823 _str_8:
   00AB 4D 49 4E 5F 46 52  1824 	.ascii "MIN_FREQ"
        45 51
   00B3 00                 1825 	.db 0x00
   00B4                    1826 _str_9:
   00B4 4D 41 58 5F 46 52  1827 	.ascii "MAX_FREQ"
        45 51
   00BC 00                 1828 	.db 0x00
   00BD                    1829 _str_10:
   00BD 4E 55 4D 5F 43 48  1830 	.ascii "NUM_CHANNELS"
        41 4E 4E 45 4C 53
   00C9 00                 1831 	.db 0x00
   00CA                    1832 _str_11:
   00CA 44 55 54 59 5F 43  1833 	.ascii "DUTY_CYCLE"
        59 43 4C 45
   00D4 00                 1834 	.db 0x00
   00D5                    1835 _str_12:
   00D5 4C 42 54 5F 52 53  1836 	.ascii "LBT_RSSI"
        53 49
   00DD 00                 1837 	.db 0x00
   00DE                    1838 _str_13:
   00DE 4D 41 4E 43 48 45  1839 	.ascii "MANCHESTER"
        53 54 45 52
   00E8 00                 1840 	.db 0x00
   00E9                    1841 _str_14:
   00E9 52 54 53 43 54 53  1842 	.ascii "RTSCTS"
   00EF 00                 1843 	.db 0x00
                           1844 	.area XINIT   (CODE)
                           1845 	.area CABS    (ABS,CODE)
