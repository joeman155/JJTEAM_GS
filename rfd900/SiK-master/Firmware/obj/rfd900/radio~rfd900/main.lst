                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.0 #8604 (May 11 2013) (Linux)
                              4 ; This file was generated Sun Nov 24 17:43:12 2013
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _g_version_string
                             13 	.globl _g_banner_string
                             14 	.globl _main
                             15 	.globl _fhop_init
                             16 	.globl _delay_msec
                             17 	.globl _timer_init
                             18 	.globl _tdm_serial_loop
                             19 	.globl _tdm_init
                             20 	.globl _radio_get_transmit_power
                             21 	.globl _radio_set_transmit_power
                             22 	.globl _radio_air_rate
                             23 	.globl _radio_set_network_id
                             24 	.globl _radio_configure
                             25 	.globl _radio_set_channel
                             26 	.globl _radio_set_channel_spacing
                             27 	.globl _radio_set_frequency
                             28 	.globl _radio_initialise
                             29 	.globl _radio_receiver_on
                             30 	.globl _vprintfl
                             31 	.globl _constrain
                             32 	.globl _param_load
                             33 	.globl _param_get
                             34 	.globl _param_set
                             35 	.globl _serial_init
                             36 	.globl _srand
                             37 	.globl _rand
                             38 	.globl _puts
                             39 	.globl _TDM_SYNC_PIN
                             40 	.globl _NSS1
                             41 	.globl _IRQ
                             42 	.globl _PIN_ENABLE
                             43 	.globl _PIN_CONFIG
                             44 	.globl _LED_GREEN
                             45 	.globl _LED_RED
                             46 	.globl _SPI0EN
                             47 	.globl _TXBMT0
                             48 	.globl _NSS0MD0
                             49 	.globl _NSS0MD1
                             50 	.globl _RXOVRN0
                             51 	.globl _MODF0
                             52 	.globl _WCOL0
                             53 	.globl _SPIF0
                             54 	.globl _AD0CM0
                             55 	.globl _AD0CM1
                             56 	.globl _AD0CM2
                             57 	.globl _AD0WINT
                             58 	.globl _AD0BUSY
                             59 	.globl _AD0INT
                             60 	.globl _BURSTEN
                             61 	.globl _AD0EN
                             62 	.globl _CCF0
                             63 	.globl _CCF1
                             64 	.globl _CCF2
                             65 	.globl _CCF3
                             66 	.globl _CCF4
                             67 	.globl _CCF5
                             68 	.globl _CR
                             69 	.globl _CF
                             70 	.globl _P
                             71 	.globl _F1
                             72 	.globl _OV
                             73 	.globl _RS0
                             74 	.globl _RS1
                             75 	.globl _F0
                             76 	.globl _AC
                             77 	.globl _CY
                             78 	.globl _T2XCLK
                             79 	.globl _T2RCLK
                             80 	.globl _TR2
                             81 	.globl _T2SPLIT
                             82 	.globl _TF2CEN
                             83 	.globl _TF2LEN
                             84 	.globl _TF2L
                             85 	.globl _TF2H
                             86 	.globl _SI
                             87 	.globl _ACK
                             88 	.globl _ARBLOST
                             89 	.globl _ACKRQ
                             90 	.globl _STO
                             91 	.globl _STA
                             92 	.globl _TXMODE
                             93 	.globl _MASTER
                             94 	.globl _PX0
                             95 	.globl _PT0
                             96 	.globl _PX1
                             97 	.globl _PT1
                             98 	.globl _PS0
                             99 	.globl _PT2
                            100 	.globl _PSPI0
                            101 	.globl _SPI1EN
                            102 	.globl _TXBMT1
                            103 	.globl _NSS1MD0
                            104 	.globl _NSS1MD1
                            105 	.globl _RXOVRN1
                            106 	.globl _MODF1
                            107 	.globl _WCOL1
                            108 	.globl _SPIF1
                            109 	.globl _EX0
                            110 	.globl _ET0
                            111 	.globl _EX1
                            112 	.globl _ET1
                            113 	.globl _ES0
                            114 	.globl _ET2
                            115 	.globl _ESPI0
                            116 	.globl _EA
                            117 	.globl _RI0
                            118 	.globl _TI0
                            119 	.globl _RB80
                            120 	.globl _TB80
                            121 	.globl _REN0
                            122 	.globl _MCE0
                            123 	.globl _S0MODE
                            124 	.globl _CRC0VAL
                            125 	.globl _CRC0INIT
                            126 	.globl _CRC0SEL
                            127 	.globl _IT0
                            128 	.globl _IE0
                            129 	.globl _IT1
                            130 	.globl _IE1
                            131 	.globl _TR0
                            132 	.globl _TF0
                            133 	.globl _TR1
                            134 	.globl _TF1
                            135 	.globl _PCA0CP4
                            136 	.globl _PCA0CP0
                            137 	.globl _PCA0
                            138 	.globl _PCA0CP3
                            139 	.globl _PCA0CP2
                            140 	.globl _PCA0CP1
                            141 	.globl _PCA0CP5
                            142 	.globl _TMR2
                            143 	.globl _TMR2RL
                            144 	.globl _ADC0LT
                            145 	.globl _ADC0GT
                            146 	.globl _ADC0
                            147 	.globl _TMR3
                            148 	.globl _TMR3RL
                            149 	.globl _TOFF
                            150 	.globl _DP
                            151 	.globl _VDM0CN
                            152 	.globl _PCA0CPH4
                            153 	.globl _PCA0CPL4
                            154 	.globl _PCA0CPH0
                            155 	.globl _PCA0CPL0
                            156 	.globl _PCA0H
                            157 	.globl _PCA0L
                            158 	.globl _SPI0CN
                            159 	.globl _EIP2
                            160 	.globl _EIP1
                            161 	.globl _SMB0ADM
                            162 	.globl _SMB0ADR
                            163 	.globl _P2MDIN
                            164 	.globl _P1MDIN
                            165 	.globl _P0MDIN
                            166 	.globl _B
                            167 	.globl _RSTSRC
                            168 	.globl _PCA0CPH3
                            169 	.globl _PCA0CPL3
                            170 	.globl _PCA0CPH2
                            171 	.globl _PCA0CPL2
                            172 	.globl _PCA0CPH1
                            173 	.globl _PCA0CPL1
                            174 	.globl _ADC0CN
                            175 	.globl _EIE2
                            176 	.globl _EIE1
                            177 	.globl _FLWR
                            178 	.globl _IT01CF
                            179 	.globl _XBR2
                            180 	.globl _XBR1
                            181 	.globl _XBR0
                            182 	.globl _ACC
                            183 	.globl _PCA0PWM
                            184 	.globl _PCA0CPM4
                            185 	.globl _PCA0CPM3
                            186 	.globl _PCA0CPM2
                            187 	.globl _PCA0CPM1
                            188 	.globl _PCA0CPM0
                            189 	.globl _PCA0MD
                            190 	.globl _PCA0CN
                            191 	.globl _P0MAT
                            192 	.globl _P2SKIP
                            193 	.globl _P1SKIP
                            194 	.globl _P0SKIP
                            195 	.globl _PCA0CPH5
                            196 	.globl _PCA0CPL5
                            197 	.globl _REF0CN
                            198 	.globl _PSW
                            199 	.globl _P1MAT
                            200 	.globl _PCA0CPM5
                            201 	.globl _TMR2H
                            202 	.globl _TMR2L
                            203 	.globl _TMR2RLH
                            204 	.globl _TMR2RLL
                            205 	.globl _REG0CN
                            206 	.globl _TMR2CN
                            207 	.globl _P0MASK
                            208 	.globl _ADC0LTH
                            209 	.globl _ADC0LTL
                            210 	.globl _ADC0GTH
                            211 	.globl _ADC0GTL
                            212 	.globl _SMB0DAT
                            213 	.globl _SMB0CF
                            214 	.globl _SMB0CN
                            215 	.globl _P1MASK
                            216 	.globl _ADC0H
                            217 	.globl _ADC0L
                            218 	.globl _ADC0TK
                            219 	.globl _ADC0CF
                            220 	.globl _ADC0MX
                            221 	.globl _ADC0PWR
                            222 	.globl _ADC0AC
                            223 	.globl _IREF0CN
                            224 	.globl _IP
                            225 	.globl _FLKEY
                            226 	.globl _FLSCL
                            227 	.globl _PMU0CF
                            228 	.globl _OSCICL
                            229 	.globl _OSCICN
                            230 	.globl _OSCXCN
                            231 	.globl _SPI1CN
                            232 	.globl _ONESHOT
                            233 	.globl _EMI0TC
                            234 	.globl _RTC0KEY
                            235 	.globl _RTC0DAT
                            236 	.globl _RTC0ADR
                            237 	.globl _EMI0CF
                            238 	.globl _EMI0CN
                            239 	.globl _CLKSEL
                            240 	.globl _IE
                            241 	.globl _SFRPAGE
                            242 	.globl _P2DRV
                            243 	.globl _P2MDOUT
                            244 	.globl _P1DRV
                            245 	.globl _P1MDOUT
                            246 	.globl _P0DRV
                            247 	.globl _P0MDOUT
                            248 	.globl _SPI0DAT
                            249 	.globl _SPI0CKR
                            250 	.globl _SPI0CFG
                            251 	.globl _P2
                            252 	.globl _CPT0MX
                            253 	.globl _CPT1MX
                            254 	.globl _CPT0MD
                            255 	.globl _CPT1MD
                            256 	.globl _CPT0CN
                            257 	.globl _CPT1CN
                            258 	.globl _SBUF0
                            259 	.globl _SCON0
                            260 	.globl _CRC0CNT
                            261 	.globl _DC0CN
                            262 	.globl _CRC0AUTO
                            263 	.globl _DC0CF
                            264 	.globl _TMR3H
                            265 	.globl _CRC0FLIP
                            266 	.globl _TMR3L
                            267 	.globl _CRC0IN
                            268 	.globl _TMR3RLH
                            269 	.globl _CRC0CN
                            270 	.globl _TMR3RLL
                            271 	.globl _CRC0DAT
                            272 	.globl _TMR3CN
                            273 	.globl _P1
                            274 	.globl _PSCTL
                            275 	.globl _CKCON
                            276 	.globl _TH1
                            277 	.globl _TH0
                            278 	.globl _TL1
                            279 	.globl _TL0
                            280 	.globl _TMOD
                            281 	.globl _TCON
                            282 	.globl _PCON
                            283 	.globl _TOFFH
                            284 	.globl _SPI1DAT
                            285 	.globl _TOFFL
                            286 	.globl _SPI1CKR
                            287 	.globl _SPI1CFG
                            288 	.globl _DPH
                            289 	.globl _DPL
                            290 	.globl _SP
                            291 	.globl _P0
                            292 	.globl _remote_statistics
                            293 	.globl _statistics
                            294 	.globl _errors
                            295 	.globl _g_board_bl_version
                            296 	.globl _g_board_frequency
                            297 	.globl _feature_rtscts
                            298 	.globl _feature_mavlink_framing
                            299 	.globl _feature_opportunistic_resend
                            300 	.globl _feature_golay
                            301 	.globl _panic
                            302 ;--------------------------------------------------------
                            303 ; special function registers
                            304 ;--------------------------------------------------------
                            305 	.area RSEG    (ABS,DATA)
   0000                     306 	.org 0x0000
                     0080   307 _P0	=	0x0080
                     0081   308 _SP	=	0x0081
                     0082   309 _DPL	=	0x0082
                     0083   310 _DPH	=	0x0083
                     0084   311 _SPI1CFG	=	0x0084
                     0085   312 _SPI1CKR	=	0x0085
                     0085   313 _TOFFL	=	0x0085
                     0086   314 _SPI1DAT	=	0x0086
                     0086   315 _TOFFH	=	0x0086
                     0087   316 _PCON	=	0x0087
                     0088   317 _TCON	=	0x0088
                     0089   318 _TMOD	=	0x0089
                     008A   319 _TL0	=	0x008a
                     008B   320 _TL1	=	0x008b
                     008C   321 _TH0	=	0x008c
                     008D   322 _TH1	=	0x008d
                     008E   323 _CKCON	=	0x008e
                     008F   324 _PSCTL	=	0x008f
                     0090   325 _P1	=	0x0090
                     0091   326 _TMR3CN	=	0x0091
                     0091   327 _CRC0DAT	=	0x0091
                     0092   328 _TMR3RLL	=	0x0092
                     0092   329 _CRC0CN	=	0x0092
                     0093   330 _TMR3RLH	=	0x0093
                     0093   331 _CRC0IN	=	0x0093
                     0094   332 _TMR3L	=	0x0094
                     0095   333 _CRC0FLIP	=	0x0095
                     0095   334 _TMR3H	=	0x0095
                     0096   335 _DC0CF	=	0x0096
                     0096   336 _CRC0AUTO	=	0x0096
                     0097   337 _DC0CN	=	0x0097
                     0097   338 _CRC0CNT	=	0x0097
                     0098   339 _SCON0	=	0x0098
                     0099   340 _SBUF0	=	0x0099
                     009A   341 _CPT1CN	=	0x009a
                     009B   342 _CPT0CN	=	0x009b
                     009C   343 _CPT1MD	=	0x009c
                     009D   344 _CPT0MD	=	0x009d
                     009E   345 _CPT1MX	=	0x009e
                     009F   346 _CPT0MX	=	0x009f
                     00A0   347 _P2	=	0x00a0
                     00A1   348 _SPI0CFG	=	0x00a1
                     00A2   349 _SPI0CKR	=	0x00a2
                     00A3   350 _SPI0DAT	=	0x00a3
                     00A4   351 _P0MDOUT	=	0x00a4
                     00A4   352 _P0DRV	=	0x00a4
                     00A5   353 _P1MDOUT	=	0x00a5
                     00A5   354 _P1DRV	=	0x00a5
                     00A6   355 _P2MDOUT	=	0x00a6
                     00A6   356 _P2DRV	=	0x00a6
                     00A7   357 _SFRPAGE	=	0x00a7
                     00A8   358 _IE	=	0x00a8
                     00A9   359 _CLKSEL	=	0x00a9
                     00AA   360 _EMI0CN	=	0x00aa
                     00AB   361 _EMI0CF	=	0x00ab
                     00AC   362 _RTC0ADR	=	0x00ac
                     00AD   363 _RTC0DAT	=	0x00ad
                     00AE   364 _RTC0KEY	=	0x00ae
                     00AF   365 _EMI0TC	=	0x00af
                     00AF   366 _ONESHOT	=	0x00af
                     00B0   367 _SPI1CN	=	0x00b0
                     00B1   368 _OSCXCN	=	0x00b1
                     00B2   369 _OSCICN	=	0x00b2
                     00B3   370 _OSCICL	=	0x00b3
                     00B5   371 _PMU0CF	=	0x00b5
                     00B6   372 _FLSCL	=	0x00b6
                     00B7   373 _FLKEY	=	0x00b7
                     00B8   374 _IP	=	0x00b8
                     00B9   375 _IREF0CN	=	0x00b9
                     00BA   376 _ADC0AC	=	0x00ba
                     00BA   377 _ADC0PWR	=	0x00ba
                     00BB   378 _ADC0MX	=	0x00bb
                     00BC   379 _ADC0CF	=	0x00bc
                     00BD   380 _ADC0TK	=	0x00bd
                     00BD   381 _ADC0L	=	0x00bd
                     00BE   382 _ADC0H	=	0x00be
                     00BF   383 _P1MASK	=	0x00bf
                     00C0   384 _SMB0CN	=	0x00c0
                     00C1   385 _SMB0CF	=	0x00c1
                     00C2   386 _SMB0DAT	=	0x00c2
                     00C3   387 _ADC0GTL	=	0x00c3
                     00C4   388 _ADC0GTH	=	0x00c4
                     00C5   389 _ADC0LTL	=	0x00c5
                     00C6   390 _ADC0LTH	=	0x00c6
                     00C7   391 _P0MASK	=	0x00c7
                     00C8   392 _TMR2CN	=	0x00c8
                     00C9   393 _REG0CN	=	0x00c9
                     00CA   394 _TMR2RLL	=	0x00ca
                     00CB   395 _TMR2RLH	=	0x00cb
                     00CC   396 _TMR2L	=	0x00cc
                     00CD   397 _TMR2H	=	0x00cd
                     00CE   398 _PCA0CPM5	=	0x00ce
                     00CF   399 _P1MAT	=	0x00cf
                     00D0   400 _PSW	=	0x00d0
                     00D1   401 _REF0CN	=	0x00d1
                     00D2   402 _PCA0CPL5	=	0x00d2
                     00D3   403 _PCA0CPH5	=	0x00d3
                     00D4   404 _P0SKIP	=	0x00d4
                     00D5   405 _P1SKIP	=	0x00d5
                     00D6   406 _P2SKIP	=	0x00d6
                     00D7   407 _P0MAT	=	0x00d7
                     00D8   408 _PCA0CN	=	0x00d8
                     00D9   409 _PCA0MD	=	0x00d9
                     00DA   410 _PCA0CPM0	=	0x00da
                     00DB   411 _PCA0CPM1	=	0x00db
                     00DC   412 _PCA0CPM2	=	0x00dc
                     00DD   413 _PCA0CPM3	=	0x00dd
                     00DE   414 _PCA0CPM4	=	0x00de
                     00DF   415 _PCA0PWM	=	0x00df
                     00E0   416 _ACC	=	0x00e0
                     00E1   417 _XBR0	=	0x00e1
                     00E2   418 _XBR1	=	0x00e2
                     00E3   419 _XBR2	=	0x00e3
                     00E4   420 _IT01CF	=	0x00e4
                     00E5   421 _FLWR	=	0x00e5
                     00E6   422 _EIE1	=	0x00e6
                     00E7   423 _EIE2	=	0x00e7
                     00E8   424 _ADC0CN	=	0x00e8
                     00E9   425 _PCA0CPL1	=	0x00e9
                     00EA   426 _PCA0CPH1	=	0x00ea
                     00EB   427 _PCA0CPL2	=	0x00eb
                     00EC   428 _PCA0CPH2	=	0x00ec
                     00ED   429 _PCA0CPL3	=	0x00ed
                     00EE   430 _PCA0CPH3	=	0x00ee
                     00EF   431 _RSTSRC	=	0x00ef
                     00F0   432 _B	=	0x00f0
                     00F1   433 _P0MDIN	=	0x00f1
                     00F2   434 _P1MDIN	=	0x00f2
                     00F3   435 _P2MDIN	=	0x00f3
                     00F4   436 _SMB0ADR	=	0x00f4
                     00F5   437 _SMB0ADM	=	0x00f5
                     00F6   438 _EIP1	=	0x00f6
                     00F7   439 _EIP2	=	0x00f7
                     00F8   440 _SPI0CN	=	0x00f8
                     00F9   441 _PCA0L	=	0x00f9
                     00FA   442 _PCA0H	=	0x00fa
                     00FB   443 _PCA0CPL0	=	0x00fb
                     00FC   444 _PCA0CPH0	=	0x00fc
                     00FD   445 _PCA0CPL4	=	0x00fd
                     00FE   446 _PCA0CPH4	=	0x00fe
                     00FF   447 _VDM0CN	=	0x00ff
                     8382   448 _DP	=	0x8382
                     8685   449 _TOFF	=	0x8685
                     9392   450 _TMR3RL	=	0x9392
                     9594   451 _TMR3	=	0x9594
                     BEBD   452 _ADC0	=	0xbebd
                     C4C3   453 _ADC0GT	=	0xc4c3
                     C6C5   454 _ADC0LT	=	0xc6c5
                     CBCA   455 _TMR2RL	=	0xcbca
                     CDCC   456 _TMR2	=	0xcdcc
                     D3D2   457 _PCA0CP5	=	0xd3d2
                     EAE9   458 _PCA0CP1	=	0xeae9
                     ECEB   459 _PCA0CP2	=	0xeceb
                     EEED   460 _PCA0CP3	=	0xeeed
                     FAF9   461 _PCA0	=	0xfaf9
                     FCFB   462 _PCA0CP0	=	0xfcfb
                     FEFD   463 _PCA0CP4	=	0xfefd
                            464 ;--------------------------------------------------------
                            465 ; special function bits
                            466 ;--------------------------------------------------------
                            467 	.area RSEG    (ABS,DATA)
   0000                     468 	.org 0x0000
                     008F   469 _TF1	=	0x008f
                     008E   470 _TR1	=	0x008e
                     008D   471 _TF0	=	0x008d
                     008C   472 _TR0	=	0x008c
                     008B   473 _IE1	=	0x008b
                     008A   474 _IT1	=	0x008a
                     0089   475 _IE0	=	0x0089
                     0088   476 _IT0	=	0x0088
                     0096   477 _CRC0SEL	=	0x0096
                     0095   478 _CRC0INIT	=	0x0095
                     0094   479 _CRC0VAL	=	0x0094
                     009F   480 _S0MODE	=	0x009f
                     009D   481 _MCE0	=	0x009d
                     009C   482 _REN0	=	0x009c
                     009B   483 _TB80	=	0x009b
                     009A   484 _RB80	=	0x009a
                     0099   485 _TI0	=	0x0099
                     0098   486 _RI0	=	0x0098
                     00AF   487 _EA	=	0x00af
                     00AE   488 _ESPI0	=	0x00ae
                     00AD   489 _ET2	=	0x00ad
                     00AC   490 _ES0	=	0x00ac
                     00AB   491 _ET1	=	0x00ab
                     00AA   492 _EX1	=	0x00aa
                     00A9   493 _ET0	=	0x00a9
                     00A8   494 _EX0	=	0x00a8
                     00B7   495 _SPIF1	=	0x00b7
                     00B6   496 _WCOL1	=	0x00b6
                     00B5   497 _MODF1	=	0x00b5
                     00B4   498 _RXOVRN1	=	0x00b4
                     00B3   499 _NSS1MD1	=	0x00b3
                     00B2   500 _NSS1MD0	=	0x00b2
                     00B1   501 _TXBMT1	=	0x00b1
                     00B0   502 _SPI1EN	=	0x00b0
                     00BE   503 _PSPI0	=	0x00be
                     00BD   504 _PT2	=	0x00bd
                     00BC   505 _PS0	=	0x00bc
                     00BB   506 _PT1	=	0x00bb
                     00BA   507 _PX1	=	0x00ba
                     00B9   508 _PT0	=	0x00b9
                     00B8   509 _PX0	=	0x00b8
                     00C7   510 _MASTER	=	0x00c7
                     00C6   511 _TXMODE	=	0x00c6
                     00C5   512 _STA	=	0x00c5
                     00C4   513 _STO	=	0x00c4
                     00C3   514 _ACKRQ	=	0x00c3
                     00C2   515 _ARBLOST	=	0x00c2
                     00C1   516 _ACK	=	0x00c1
                     00C0   517 _SI	=	0x00c0
                     00CF   518 _TF2H	=	0x00cf
                     00CE   519 _TF2L	=	0x00ce
                     00CD   520 _TF2LEN	=	0x00cd
                     00CC   521 _TF2CEN	=	0x00cc
                     00CB   522 _T2SPLIT	=	0x00cb
                     00CA   523 _TR2	=	0x00ca
                     00C9   524 _T2RCLK	=	0x00c9
                     00C8   525 _T2XCLK	=	0x00c8
                     00D7   526 _CY	=	0x00d7
                     00D6   527 _AC	=	0x00d6
                     00D5   528 _F0	=	0x00d5
                     00D4   529 _RS1	=	0x00d4
                     00D3   530 _RS0	=	0x00d3
                     00D2   531 _OV	=	0x00d2
                     00D1   532 _F1	=	0x00d1
                     00D0   533 _P	=	0x00d0
                     00DF   534 _CF	=	0x00df
                     00DE   535 _CR	=	0x00de
                     00DD   536 _CCF5	=	0x00dd
                     00DC   537 _CCF4	=	0x00dc
                     00DB   538 _CCF3	=	0x00db
                     00DA   539 _CCF2	=	0x00da
                     00D9   540 _CCF1	=	0x00d9
                     00D8   541 _CCF0	=	0x00d8
                     00EF   542 _AD0EN	=	0x00ef
                     00EE   543 _BURSTEN	=	0x00ee
                     00ED   544 _AD0INT	=	0x00ed
                     00EC   545 _AD0BUSY	=	0x00ec
                     00EB   546 _AD0WINT	=	0x00eb
                     00EA   547 _AD0CM2	=	0x00ea
                     00E9   548 _AD0CM1	=	0x00e9
                     00E8   549 _AD0CM0	=	0x00e8
                     00FF   550 _SPIF0	=	0x00ff
                     00FE   551 _WCOL0	=	0x00fe
                     00FD   552 _MODF0	=	0x00fd
                     00FC   553 _RXOVRN0	=	0x00fc
                     00FB   554 _NSS0MD1	=	0x00fb
                     00FA   555 _NSS0MD0	=	0x00fa
                     00F9   556 _TXBMT0	=	0x00f9
                     00F8   557 _SPI0EN	=	0x00f8
                     0096   558 _LED_RED	=	0x0096
                     0095   559 _LED_GREEN	=	0x0095
                     0082   560 _PIN_CONFIG	=	0x0082
                     0083   561 _PIN_ENABLE	=	0x0083
                     0087   562 _IRQ	=	0x0087
                     0094   563 _NSS1	=	0x0094
                     00A6   564 _TDM_SYNC_PIN	=	0x00a6
                            565 ;--------------------------------------------------------
                            566 ; overlayable register banks
                            567 ;--------------------------------------------------------
                            568 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     569 	.ds 8
                            570 ;--------------------------------------------------------
                            571 ; internal ram data
                            572 ;--------------------------------------------------------
                            573 	.area DSEG    (DATA)
                            574 ;--------------------------------------------------------
                            575 ; overlayable items in internal ram 
                            576 ;--------------------------------------------------------
                            577 ;--------------------------------------------------------
                            578 ; Stack segment in internal ram 
                            579 ;--------------------------------------------------------
                            580 	.area	SSEG	(DATA)
   0000                     581 __start__stack:
   0000                     582 	.ds	1
                            583 
                            584 ;--------------------------------------------------------
                            585 ; indirectly addressable internal ram data
                            586 ;--------------------------------------------------------
                            587 	.area ISEG    (DATA)
                            588 ;--------------------------------------------------------
                            589 ; absolute internal ram data
                            590 ;--------------------------------------------------------
                            591 	.area IABS    (ABS,DATA)
                            592 	.area IABS    (ABS,DATA)
                            593 ;--------------------------------------------------------
                            594 ; bit data
                            595 ;--------------------------------------------------------
                            596 	.area BSEG    (BIT)
   0000                     597 _feature_golay::
   0000                     598 	.ds 1
   0001                     599 _feature_opportunistic_resend::
   0001                     600 	.ds 1
   0002                     601 _feature_mavlink_framing::
   0002                     602 	.ds 1
   0003                     603 _feature_rtscts::
   0003                     604 	.ds 1
                            605 ;--------------------------------------------------------
                            606 ; paged external ram data
                            607 ;--------------------------------------------------------
                            608 	.area PSEG    (PAG,XDATA)
   0000                     609 _g_board_frequency::
   0000                     610 	.ds 1
   0001                     611 _g_board_bl_version::
   0001                     612 	.ds 1
   0002                     613 _errors::
   0002                     614 	.ds 12
   000E                     615 _statistics::
   000E                     616 	.ds 4
   0012                     617 _remote_statistics::
   0012                     618 	.ds 4
   0016                     619 _radio_init_freq_min_1_151:
   0016                     620 	.ds 4
   001A                     621 _radio_init_freq_max_1_151:
   001A                     622 	.ds 4
   001E                     623 _radio_init_channel_spacing_1_151:
   001E                     624 	.ds 4
   0022                     625 _radio_init_txpower_1_151:
   0022                     626 	.ds 1
                            627 ;--------------------------------------------------------
                            628 ; external ram data
                            629 ;--------------------------------------------------------
                            630 	.area XSEG    (XDATA)
                            631 ;--------------------------------------------------------
                            632 ; absolute external ram data
                            633 ;--------------------------------------------------------
                            634 	.area XABS    (ABS,XDATA)
                            635 ;--------------------------------------------------------
                            636 ; external initialized ram data
                            637 ;--------------------------------------------------------
                            638 	.area XISEG   (XDATA)
                            639 	.area HOME    (CODE)
                            640 	.area GSINIT0 (CODE)
                            641 	.area GSINIT1 (CODE)
                            642 	.area GSINIT2 (CODE)
                            643 	.area GSINIT3 (CODE)
                            644 	.area GSINIT4 (CODE)
                            645 	.area GSINIT5 (CODE)
                            646 	.area GSINIT  (CODE)
                            647 	.area GSFINAL (CODE)
                            648 	.area CSEG    (CODE)
                            649 ;--------------------------------------------------------
                            650 ; interrupt vector 
                            651 ;--------------------------------------------------------
                            652 	.area HOME    (CODE)
   0000                     653 __interrupt_vect:
   0000 02r00r00      [24]  654 	ljmp	__sdcc_gsinit_startup
   0003 02r00r00      [24]  655 	ljmp	_Receiver_ISR
   0006                     656 	.ds	5
   000B 32            [24]  657 	reti
   000C                     658 	.ds	7
   0013 32            [24]  659 	reti
   0014                     660 	.ds	7
   001B 32            [24]  661 	reti
   001C                     662 	.ds	7
   0023 02r00r00      [24]  663 	ljmp	_serial_interrupt
   0026                     664 	.ds	5
   002B 02r00r00      [24]  665 	ljmp	_T2_ISR
   002E                     666 	.ds	5
   0033 32            [24]  667 	reti
   0034                     668 	.ds	7
   003B 32            [24]  669 	reti
   003C                     670 	.ds	7
   0043 32            [24]  671 	reti
   0044                     672 	.ds	7
   004B 32            [24]  673 	reti
   004C                     674 	.ds	7
   0053 32            [24]  675 	reti
   0054                     676 	.ds	7
   005B 32            [24]  677 	reti
   005C                     678 	.ds	7
   0063 32            [24]  679 	reti
   0064                     680 	.ds	7
   006B 32            [24]  681 	reti
   006C                     682 	.ds	7
   0073 02r00r00      [24]  683 	ljmp	_T3_ISR
                            684 ;--------------------------------------------------------
                            685 ; global & static initialisations
                            686 ;--------------------------------------------------------
                            687 	.area HOME    (CODE)
                            688 	.area GSINIT  (CODE)
                            689 	.area GSFINAL (CODE)
                            690 	.area GSINIT  (CODE)
                            691 	.globl __sdcc_gsinit_startup
                            692 	.globl __sdcc_program_startup
                            693 	.globl __start__stack
                            694 	.globl __mcs51_genXINIT
                            695 	.globl __mcs51_genXRAMCLEAR
                            696 	.globl __mcs51_genRAMCLEAR
                            697 	.area GSFINAL (CODE)
   0000 02r00r76      [24]  698 	ljmp	__sdcc_program_startup
                            699 ;--------------------------------------------------------
                            700 ; Home
                            701 ;--------------------------------------------------------
                            702 	.area HOME    (CODE)
                            703 	.area HOME    (CODE)
   0076                     704 __sdcc_program_startup:
   0076 02r00r00      [24]  705 	ljmp	_main
                            706 ;	return from main will return to caller
                            707 ;--------------------------------------------------------
                            708 ; code
                            709 ;--------------------------------------------------------
                            710 	.area CSEG    (CODE)
                            711 ;------------------------------------------------------------
                            712 ;Allocation info for local variables in function 'main'
                            713 ;------------------------------------------------------------
                            714 ;	radio/main.c:97: main(void)
                            715 ;	-----------------------------------------
                            716 ;	 function main
                            717 ;	-----------------------------------------
   0000                     718 _main:
                     0007   719 	ar7 = 0x07
                     0006   720 	ar6 = 0x06
                     0005   721 	ar5 = 0x05
                     0004   722 	ar4 = 0x04
                     0003   723 	ar3 = 0x03
                     0002   724 	ar2 = 0x02
                     0001   725 	ar1 = 0x01
                     0000   726 	ar0 = 0x00
                            727 ;	radio/main.c:102: g_board_frequency = BOARD_FREQUENCY_REG;
   0000 AF C4         [24]  728 	mov	r7,_ADC0GTH
   0002 78r00         [12]  729 	mov	r0,#_g_board_frequency
   0004 EF            [12]  730 	mov	a,r7
   0005 F2            [24]  731 	movx	@r0,a
                            732 ;	radio/main.c:103: g_board_bl_version = BOARD_BL_VERSION_REG;
   0006 AF C3         [24]  733 	mov	r7,_ADC0GTL
   0008 78r01         [12]  734 	mov	r0,#_g_board_bl_version
   000A EF            [12]  735 	mov	a,r7
   000B F2            [24]  736 	movx	@r0,a
                            737 ;	radio/main.c:107: param_load();
   000C 12r00r00      [24]  738 	lcall	_param_load
                            739 ;	radio/main.c:110: feature_mavlink_framing = param_get(PARAM_MAVLINK)?true:false;
   000F 75 82 06      [24]  740 	mov	dpl,#0x06
   0012 12r00r00      [24]  741 	lcall	_param_get
   0015 AC 82         [24]  742 	mov	r4,dpl
   0017 AD 83         [24]  743 	mov	r5,dph
   0019 AE F0         [24]  744 	mov	r6,b
   001B FF            [12]  745 	mov	r7,a
   001C EC            [12]  746 	mov	a,r4
   001D 4D            [12]  747 	orl	a,r5
   001E 4E            [12]  748 	orl	a,r6
   001F 4F            [12]  749 	orl	a,r7
   0020 24 FF         [12]  750 	add	a,#0xff
   0022 92*02         [24]  751 	mov	_feature_mavlink_framing,c
                            752 ;	radio/main.c:111: feature_opportunistic_resend = param_get(PARAM_OPPRESEND)?true:false;
   0024 75 82 07      [24]  753 	mov	dpl,#0x07
   0027 12r00r00      [24]  754 	lcall	_param_get
   002A AC 82         [24]  755 	mov	r4,dpl
   002C AD 83         [24]  756 	mov	r5,dph
   002E AE F0         [24]  757 	mov	r6,b
   0030 FF            [12]  758 	mov	r7,a
   0031 EC            [12]  759 	mov	a,r4
   0032 4D            [12]  760 	orl	a,r5
   0033 4E            [12]  761 	orl	a,r6
   0034 4F            [12]  762 	orl	a,r7
   0035 24 FF         [12]  763 	add	a,#0xff
   0037 92*01         [24]  764 	mov	_feature_opportunistic_resend,c
                            765 ;	radio/main.c:112: feature_golay = param_get(PARAM_ECC)?true:false;
   0039 75 82 05      [24]  766 	mov	dpl,#0x05
   003C 12r00r00      [24]  767 	lcall	_param_get
   003F AC 82         [24]  768 	mov	r4,dpl
   0041 AD 83         [24]  769 	mov	r5,dph
   0043 AE F0         [24]  770 	mov	r6,b
   0045 FF            [12]  771 	mov	r7,a
   0046 EC            [12]  772 	mov	a,r4
   0047 4D            [12]  773 	orl	a,r5
   0048 4E            [12]  774 	orl	a,r6
   0049 4F            [12]  775 	orl	a,r7
   004A 24 FF         [12]  776 	add	a,#0xff
   004C 92*00         [24]  777 	mov	_feature_golay,c
                            778 ;	radio/main.c:113: feature_rtscts = param_get(PARAM_RTSCTS)?true:false;
   004E 75 82 0E      [24]  779 	mov	dpl,#0x0E
   0051 12r00r00      [24]  780 	lcall	_param_get
   0054 AC 82         [24]  781 	mov	r4,dpl
   0056 AD 83         [24]  782 	mov	r5,dph
   0058 AE F0         [24]  783 	mov	r6,b
   005A FF            [12]  784 	mov	r7,a
   005B EC            [12]  785 	mov	a,r4
   005C 4D            [12]  786 	orl	a,r5
   005D 4E            [12]  787 	orl	a,r6
   005E 4F            [12]  788 	orl	a,r7
   005F 24 FF         [12]  789 	add	a,#0xff
   0061 92*03         [24]  790 	mov	_feature_rtscts,c
                            791 ;	radio/main.c:116: hardware_init();
   0063 12r00rC0      [24]  792 	lcall	_hardware_init
                            793 ;	radio/main.c:119: radio_init();
   0066 12r01r41      [24]  794 	lcall	_radio_init
                            795 ;	radio/main.c:122: if (!radio_receiver_on()) {
   0069 12r00r00      [24]  796 	lcall	_radio_receiver_on
   006C 40 15         [24]  797 	jc	00102$
                            798 ;	radio/main.c:123: panic("failed to enable receiver");
   006E 74r16         [12]  799 	mov	a,#__str_0
   0070 C0 E0         [24]  800 	push	acc
   0072 74s00         [12]  801 	mov	a,#(__str_0 >> 8)
   0074 C0 E0         [24]  802 	push	acc
   0076 74 80         [12]  803 	mov	a,#0x80
   0078 C0 E0         [24]  804 	push	acc
   007A 12r00r86      [24]  805 	lcall	_panic
   007D 15 81         [12]  806 	dec	sp
   007F 15 81         [12]  807 	dec	sp
   0081 15 81         [12]  808 	dec	sp
   0083                     809 00102$:
                            810 ;	radio/main.c:126: tdm_serial_loop();
   0083 02r00r00      [24]  811 	ljmp	_tdm_serial_loop
                            812 ;------------------------------------------------------------
                            813 ;Allocation info for local variables in function 'panic'
                            814 ;------------------------------------------------------------
                            815 ;fmt                       Allocated to stack - sp -4
                            816 ;ap                        Allocated to registers r7 
                            817 ;------------------------------------------------------------
                            818 ;	radio/main.c:130: panic(char *fmt, ...)
                            819 ;	-----------------------------------------
                            820 ;	 function panic
                            821 ;	-----------------------------------------
   0086                     822 _panic:
                            823 ;	radio/main.c:134: puts("\n**PANIC**");
   0086 90r00r30      [24]  824 	mov	dptr,#__str_1
   0089 75 F0 80      [24]  825 	mov	b,#0x80
   008C 12r00r00      [24]  826 	lcall	_puts
                            827 ;	radio/main.c:135: va_start(ap, fmt);
   008F E5 81         [12]  828 	mov	a,sp
   0091 24 FC         [12]  829 	add	a,#0xFC
   0093 FF            [12]  830 	mov	r7,a
                            831 ;	radio/main.c:136: vprintf(fmt, ap);
   0094 C0 07         [24]  832 	push	ar7
   0096 E5 81         [12]  833 	mov	a,sp
   0098 24 FB         [12]  834 	add	a,#0xfb
   009A F8            [12]  835 	mov	r0,a
   009B 86 82         [24]  836 	mov	dpl,@r0
   009D 08            [12]  837 	inc	r0
   009E 86 83         [24]  838 	mov	dph,@r0
   00A0 08            [12]  839 	inc	r0
   00A1 86 F0         [24]  840 	mov	b,@r0
   00A3 12r00r00      [24]  841 	lcall	_vprintfl
   00A6 15 81         [12]  842 	dec	sp
                            843 ;	radio/main.c:137: puts("");
   00A8 90r00r3B      [24]  844 	mov	dptr,#__str_2
   00AB 75 F0 80      [24]  845 	mov	b,#0x80
   00AE 12r00r00      [24]  846 	lcall	_puts
                            847 ;	radio/main.c:139: EA = 1;
   00B1 D2 AF         [12]  848 	setb	_EA
                            849 ;	radio/main.c:140: ES0 = 1;
   00B3 D2 AC         [12]  850 	setb	_ES0
                            851 ;	radio/main.c:142: delay_msec(1000);
   00B5 90 03 E8      [24]  852 	mov	dptr,#0x03E8
   00B8 12r00r00      [24]  853 	lcall	_delay_msec
                            854 ;	radio/main.c:145: RSTSRC |= (1 << 4);
   00BB 43 EF 10      [24]  855 	orl	_RSTSRC,#0x10
   00BE                     856 00103$:
   00BE 80 FE         [24]  857 	sjmp	00103$
                            858 ;------------------------------------------------------------
                            859 ;Allocation info for local variables in function 'hardware_init'
                            860 ;------------------------------------------------------------
                            861 ;	radio/main.c:151: hardware_init(void)
                            862 ;	-----------------------------------------
                            863 ;	 function hardware_init
                            864 ;	-----------------------------------------
   00C0                     865 _hardware_init:
                            866 ;	radio/main.c:156: PCA0MD	&= ~0x40;
   00C0 AF D9         [24]  867 	mov	r7,_PCA0MD
   00C2 74 BF         [12]  868 	mov	a,#0xBF
   00C4 5F            [12]  869 	anl	a,r7
   00C5 F5 D9         [12]  870 	mov	_PCA0MD,a
                            871 ;	radio/main.c:159: FLSCL	 =  0x40;
   00C7 75 B6 40      [24]  872 	mov	_FLSCL,#0x40
                            873 ;	radio/main.c:160: OSCICN	 =  0x8F;
   00CA 75 B2 8F      [24]  874 	mov	_OSCICN,#0x8F
                            875 ;	radio/main.c:161: CLKSEL	 =  0x00;
   00CD 75 A9 00      [24]  876 	mov	_CLKSEL,#0x00
                            877 ;	radio/main.c:164: VDM0CN	 =  0x80;
   00D0 75 FF 80      [24]  878 	mov	_VDM0CN,#0x80
                            879 ;	radio/main.c:165: for (i = 0; i < 350; i++);	// Wait 100us for initialization
   00D3 7E 5E         [12]  880 	mov	r6,#0x5E
   00D5 7F 01         [12]  881 	mov	r7,#0x01
   00D7                     882 00104$:
   00D7 1E            [12]  883 	dec	r6
   00D8 BE FF 01      [24]  884 	cjne	r6,#0xFF,00114$
   00DB 1F            [12]  885 	dec	r7
   00DC                     886 00114$:
   00DC EE            [12]  887 	mov	a,r6
   00DD 4F            [12]  888 	orl	a,r7
   00DE 70 F7         [24]  889 	jnz	00104$
                            890 ;	radio/main.c:166: RSTSRC	 =  0x06;		// enable brown out and missing clock reset sources
   00E0 75 EF 06      [24]  891 	mov	_RSTSRC,#0x06
                            892 ;	radio/main.c:175: P0MDOUT	 =  0x10;		// UART Tx push-pull
   00E3 75 A4 10      [24]  893 	mov	_P0MDOUT,#0x10
                            894 ;	radio/main.c:176: SFRPAGE	 =  CONFIG_PAGE;
   00E6 75 A7 0F      [24]  895 	mov	_SFRPAGE,#0x0F
                            896 ;	radio/main.c:177: P0DRV	 =  0x10;		// UART TX
   00E9 75 A4 10      [24]  897 	mov	_P0DRV,#0x10
                            898 ;	radio/main.c:178: SFRPAGE	 =  LEGACY_PAGE;
   00EC 75 A7 00      [24]  899 	mov	_SFRPAGE,#0x00
                            900 ;	radio/main.c:179: XBR0	 =  0x01;		// UART enable
   00EF 75 E1 01      [24]  901 	mov	_XBR0,#0x01
                            902 ;	radio/main.c:187: XBR1	|= 0x40;	// enable SPI in 3-wire mode
   00F2 43 E2 40      [24]  903 	orl	_XBR1,#0x40
                            904 ;	radio/main.c:188: P1MDOUT	|= 0xF5;	// SCK1, MOSI1, MISO1 push-pull
   00F5 43 A5 F5      [24]  905 	orl	_P1MDOUT,#0xF5
                            906 ;	radio/main.c:190: SFRPAGE	 = CONFIG_PAGE;
   00F8 75 A7 0F      [24]  907 	mov	_SFRPAGE,#0x0F
                            908 ;	radio/main.c:191: P1DRV	|= 0xF5;	// SPI signals use high-current mode, LEDs and PAEN High current drive
   00FB 43 A5 F5      [24]  909 	orl	_P1DRV,#0xF5
                            910 ;	radio/main.c:192: P2DRV	|= 0xFF;	
   00FE E5 A6         [12]  911 	mov	a,_P2DRV
   0100 75 A6 FF      [24]  912 	mov	_P2DRV,#0xFF
                            913 ;	radio/main.c:193: SFRPAGE	 = LEGACY_PAGE;
   0103 75 A7 00      [24]  914 	mov	_SFRPAGE,#0x00
                            915 ;	radio/main.c:194: SPI1CFG	 = 0x40;	// master mode
   0106 75 84 40      [24]  916 	mov	_SPI1CFG,#0x40
                            917 ;	radio/main.c:195: SPI1CN	 = 0x00;	// 3 wire master mode
   0109 75 B0 00      [24]  918 	mov	_SPI1CN,#0x00
                            919 ;	radio/main.c:196: SPI1CKR	 = 0x00;	// Initialise SPI prescaler to divide-by-2 (12.25MHz, technically out of spec)
   010C 75 85 00      [24]  920 	mov	_SPI1CKR,#0x00
                            921 ;	radio/main.c:197: SPI1CN	|= 0x01;	// enable SPI
   010F 43 B0 01      [24]  922 	orl	_SPI1CN,#0x01
                            923 ;	radio/main.c:198: NSS1	 = 1;		// set NSS high
   0112 D2 94         [12]  924 	setb	_NSS1
                            925 ;	radio/main.c:201: IE0	 = 0;
   0114 C2 89         [12]  926 	clr	_IE0
                            927 ;	radio/main.c:204: timer_init();
   0116 12r00r00      [24]  928 	lcall	_timer_init
                            929 ;	radio/main.c:207: serial_init(param_get(PARAM_SERIAL_SPEED));
   0119 75 82 01      [24]  930 	mov	dpl,#0x01
   011C 12r00r00      [24]  931 	lcall	_param_get
   011F AC 82         [24]  932 	mov	r4,dpl
   0121 8C 82         [24]  933 	mov	dpl,r4
   0123 12r00r00      [24]  934 	lcall	_serial_init
                            935 ;	radio/main.c:210: IP = 0;
   0126 75 B8 00      [24]  936 	mov	_IP,#0x00
                            937 ;	radio/main.c:213: EA = 1;
   0129 D2 AF         [12]  938 	setb	_EA
                            939 ;	radio/main.c:216: LED_RADIO = LED_ON;
   012B D2 95         [12]  940 	setb	_LED_GREEN
                            941 ;	radio/main.c:217: LED_BOOTLOADER = LED_OFF;
   012D C2 96         [12]  942 	clr	_LED_RED
                            943 ;	radio/main.c:220: AD0EN = 1;	// Enable ADC0
   012F D2 EF         [12]  944 	setb	_AD0EN
                            945 ;	radio/main.c:221: ADC0CF = 0xF9;  // Set amp0gn=1 (1:1)
   0131 75 BC F9      [24]  946 	mov	_ADC0CF,#0xF9
                            947 ;	radio/main.c:222: ADC0AC = 0x00;
   0134 75 BA 00      [24]  948 	mov	_ADC0AC,#0x00
                            949 ;	radio/main.c:223: ADC0MX = 0x1B;	// Set ADC0MX to temp sensor
   0137 75 BB 1B      [24]  950 	mov	_ADC0MX,#0x1B
                            951 ;	radio/main.c:224: REF0CN = 0x07;	// Define reference and enable temp sensor
   013A 75 D1 07      [24]  952 	mov	_REF0CN,#0x07
                            953 ;	radio/main.c:234: XBR2	 =  0x40;		// Crossbar (GPIO) enable
   013D 75 E3 40      [24]  954 	mov	_XBR2,#0x40
   0140 22            [24]  955 	ret
                            956 ;------------------------------------------------------------
                            957 ;Allocation info for local variables in function 'radio_init'
                            958 ;------------------------------------------------------------
                            959 ;	radio/main.c:238: radio_init(void)
                            960 ;	-----------------------------------------
                            961 ;	 function radio_init
                            962 ;	-----------------------------------------
   0141                     963 _radio_init:
                            964 ;	radio/main.c:245: if (!radio_initialise()) {
   0141 12r00r00      [24]  965 	lcall	_radio_initialise
   0144 40 15         [24]  966 	jc	00102$
                            967 ;	radio/main.c:246: panic("radio_initialise failed");
   0146 74r3C         [12]  968 	mov	a,#__str_3
   0148 C0 E0         [24]  969 	push	acc
   014A 74s00         [12]  970 	mov	a,#(__str_3 >> 8)
   014C C0 E0         [24]  971 	push	acc
   014E 74 80         [12]  972 	mov	a,#0x80
   0150 C0 E0         [24]  973 	push	acc
   0152 12r00r86      [24]  974 	lcall	_panic
   0155 15 81         [12]  975 	dec	sp
   0157 15 81         [12]  976 	dec	sp
   0159 15 81         [12]  977 	dec	sp
   015B                     978 00102$:
                            979 ;	radio/main.c:249: switch (g_board_frequency) {
   015B 78r00         [12]  980 	mov	r0,#_g_board_frequency
   015D E2            [24]  981 	movx	a,@r0
   015E B4 43 02      [24]  982 	cjne	a,#0x43,00193$
   0161 80 1C         [24]  983 	sjmp	00103$
   0163                     984 00193$:
   0163 78r00         [12]  985 	mov	r0,#_g_board_frequency
   0165 E2            [24]  986 	movx	a,@r0
   0166 B4 47 02      [24]  987 	cjne	a,#0x47,00194$
   0169 80 43         [24]  988 	sjmp	00104$
   016B                     989 00194$:
   016B 78r00         [12]  990 	mov	r0,#_g_board_frequency
   016D E2            [24]  991 	movx	a,@r0
   016E B4 86 02      [24]  992 	cjne	a,#0x86,00195$
   0171 80 6A         [24]  993 	sjmp	00105$
   0173                     994 00195$:
   0173 78r00         [12]  995 	mov	r0,#_g_board_frequency
   0175 E2            [24]  996 	movx	a,@r0
   0176 B4 91 03      [24]  997 	cjne	a,#0x91,00196$
   0179 02r02r0A      [24]  998 	ljmp	00106$
   017C                     999 00196$:
   017C 02r02r37      [24] 1000 	ljmp	00107$
                           1001 ;	radio/main.c:250: case FREQ_433:
   017F                    1002 00103$:
                           1003 ;	radio/main.c:251: freq_min = 433050000UL;
   017F 78r16         [12] 1004 	mov	r0,#_radio_init_freq_min_1_151
   0181 74 90         [12] 1005 	mov	a,#0x90
   0183 F2            [24] 1006 	movx	@r0,a
   0184 08            [12] 1007 	inc	r0
   0185 74 D1         [12] 1008 	mov	a,#0xD1
   0187 F2            [24] 1009 	movx	@r0,a
   0188 08            [12] 1010 	inc	r0
   0189 74 CF         [12] 1011 	mov	a,#0xCF
   018B F2            [24] 1012 	movx	@r0,a
   018C 08            [12] 1013 	inc	r0
   018D 74 19         [12] 1014 	mov	a,#0x19
   018F F2            [24] 1015 	movx	@r0,a
                           1016 ;	radio/main.c:252: freq_max = 434790000UL;
   0190 78r1A         [12] 1017 	mov	r0,#_radio_init_freq_max_1_151
   0192 74 70         [12] 1018 	mov	a,#0x70
   0194 F2            [24] 1019 	movx	@r0,a
   0195 08            [12] 1020 	inc	r0
   0196 74 5E         [12] 1021 	mov	a,#0x5E
   0198 F2            [24] 1022 	movx	@r0,a
   0199 08            [12] 1023 	inc	r0
   019A 74 EA         [12] 1024 	mov	a,#0xEA
   019C F2            [24] 1025 	movx	@r0,a
   019D 08            [12] 1026 	inc	r0
   019E 74 19         [12] 1027 	mov	a,#0x19
   01A0 F2            [24] 1028 	movx	@r0,a
                           1029 ;	radio/main.c:253: txpower = 10;
   01A1 78r22         [12] 1030 	mov	r0,#_radio_init_txpower_1_151
   01A3 74 0A         [12] 1031 	mov	a,#0x0A
   01A5 F2            [24] 1032 	movx	@r0,a
                           1033 ;	radio/main.c:254: num_fh_channels = 10;
   01A6 78r00         [12] 1034 	mov	r0,#_num_fh_channels
   01A8 74 0A         [12] 1035 	mov	a,#0x0A
   01AA F2            [24] 1036 	movx	@r0,a
                           1037 ;	radio/main.c:255: break;
   01AB 02r02r6E      [24] 1038 	ljmp	00108$
                           1039 ;	radio/main.c:256: case FREQ_470:
   01AE                    1040 00104$:
                           1041 ;	radio/main.c:257: freq_min = 470000000UL;
   01AE 78r16         [12] 1042 	mov	r0,#_radio_init_freq_min_1_151
   01B0 74 80         [12] 1043 	mov	a,#0x80
   01B2 F2            [24] 1044 	movx	@r0,a
   01B3 08            [12] 1045 	inc	r0
   01B4 74 A1         [12] 1046 	mov	a,#0xA1
   01B6 F2            [24] 1047 	movx	@r0,a
   01B7 08            [12] 1048 	inc	r0
   01B8 74 03         [12] 1049 	mov	a,#0x03
   01BA F2            [24] 1050 	movx	@r0,a
   01BB 08            [12] 1051 	inc	r0
   01BC 74 1C         [12] 1052 	mov	a,#0x1C
   01BE F2            [24] 1053 	movx	@r0,a
                           1054 ;	radio/main.c:258: freq_max = 471000000UL;
   01BF 78r1A         [12] 1055 	mov	r0,#_radio_init_freq_max_1_151
   01C1 74 C0         [12] 1056 	mov	a,#0xC0
   01C3 F2            [24] 1057 	movx	@r0,a
   01C4 08            [12] 1058 	inc	r0
   01C5 74 E3         [12] 1059 	mov	a,#0xE3
   01C7 F2            [24] 1060 	movx	@r0,a
   01C8 08            [12] 1061 	inc	r0
   01C9 74 12         [12] 1062 	mov	a,#0x12
   01CB F2            [24] 1063 	movx	@r0,a
   01CC 08            [12] 1064 	inc	r0
   01CD 74 1C         [12] 1065 	mov	a,#0x1C
   01CF F2            [24] 1066 	movx	@r0,a
                           1067 ;	radio/main.c:259: txpower = 10;
   01D0 78r22         [12] 1068 	mov	r0,#_radio_init_txpower_1_151
   01D2 74 0A         [12] 1069 	mov	a,#0x0A
   01D4 F2            [24] 1070 	movx	@r0,a
                           1071 ;	radio/main.c:260: num_fh_channels = 10;
   01D5 78r00         [12] 1072 	mov	r0,#_num_fh_channels
   01D7 74 0A         [12] 1073 	mov	a,#0x0A
   01D9 F2            [24] 1074 	movx	@r0,a
                           1075 ;	radio/main.c:261: break;
   01DA 02r02r6E      [24] 1076 	ljmp	00108$
                           1077 ;	radio/main.c:262: case FREQ_868:
   01DD                    1078 00105$:
                           1079 ;	radio/main.c:263: freq_min = 868000000UL;
   01DD 78r16         [12] 1080 	mov	r0,#_radio_init_freq_min_1_151
   01DF E4            [12] 1081 	clr	a
   01E0 F2            [24] 1082 	movx	@r0,a
   01E1 08            [12] 1083 	inc	r0
   01E2 74 A1         [12] 1084 	mov	a,#0xA1
   01E4 F2            [24] 1085 	movx	@r0,a
   01E5 08            [12] 1086 	inc	r0
   01E6 74 BC         [12] 1087 	mov	a,#0xBC
   01E8 F2            [24] 1088 	movx	@r0,a
   01E9 08            [12] 1089 	inc	r0
   01EA 74 33         [12] 1090 	mov	a,#0x33
   01EC F2            [24] 1091 	movx	@r0,a
                           1092 ;	radio/main.c:264: freq_max = 869000000UL;
   01ED 78r1A         [12] 1093 	mov	r0,#_radio_init_freq_max_1_151
   01EF 74 40         [12] 1094 	mov	a,#0x40
   01F1 F2            [24] 1095 	movx	@r0,a
   01F2 08            [12] 1096 	inc	r0
   01F3 74 E3         [12] 1097 	mov	a,#0xE3
   01F5 F2            [24] 1098 	movx	@r0,a
   01F6 08            [12] 1099 	inc	r0
   01F7 74 CB         [12] 1100 	mov	a,#0xCB
   01F9 F2            [24] 1101 	movx	@r0,a
   01FA 08            [12] 1102 	inc	r0
   01FB 74 33         [12] 1103 	mov	a,#0x33
   01FD F2            [24] 1104 	movx	@r0,a
                           1105 ;	radio/main.c:265: txpower = 10;
   01FE 78r22         [12] 1106 	mov	r0,#_radio_init_txpower_1_151
   0200 74 0A         [12] 1107 	mov	a,#0x0A
   0202 F2            [24] 1108 	movx	@r0,a
                           1109 ;	radio/main.c:266: num_fh_channels = 10;
   0203 78r00         [12] 1110 	mov	r0,#_num_fh_channels
   0205 74 0A         [12] 1111 	mov	a,#0x0A
   0207 F2            [24] 1112 	movx	@r0,a
                           1113 ;	radio/main.c:267: break;
                           1114 ;	radio/main.c:268: case FREQ_915:
   0208 80 64         [24] 1115 	sjmp	00108$
   020A                    1116 00106$:
                           1117 ;	radio/main.c:269: freq_min = 915000000UL;
   020A 78r16         [12] 1118 	mov	r0,#_radio_init_freq_min_1_151
   020C 74 C0         [12] 1119 	mov	a,#0xC0
   020E F2            [24] 1120 	movx	@r0,a
   020F 08            [12] 1121 	inc	r0
   0210 74 CA         [12] 1122 	mov	a,#0xCA
   0212 F2            [24] 1123 	movx	@r0,a
   0213 08            [12] 1124 	inc	r0
   0214 74 89         [12] 1125 	mov	a,#0x89
   0216 F2            [24] 1126 	movx	@r0,a
   0217 08            [12] 1127 	inc	r0
   0218 74 36         [12] 1128 	mov	a,#0x36
   021A F2            [24] 1129 	movx	@r0,a
                           1130 ;	radio/main.c:270: freq_max = 928000000UL;
   021B 78r1A         [12] 1131 	mov	r0,#_radio_init_freq_max_1_151
   021D E4            [12] 1132 	clr	a
   021E F2            [24] 1133 	movx	@r0,a
   021F 08            [12] 1134 	inc	r0
   0220 74 28         [12] 1135 	mov	a,#0x28
   0222 F2            [24] 1136 	movx	@r0,a
   0223 08            [12] 1137 	inc	r0
   0224 74 50         [12] 1138 	mov	a,#0x50
   0226 F2            [24] 1139 	movx	@r0,a
   0227 08            [12] 1140 	inc	r0
   0228 74 37         [12] 1141 	mov	a,#0x37
   022A F2            [24] 1142 	movx	@r0,a
                           1143 ;	radio/main.c:271: txpower = 20;
   022B 78r22         [12] 1144 	mov	r0,#_radio_init_txpower_1_151
   022D 74 14         [12] 1145 	mov	a,#0x14
   022F F2            [24] 1146 	movx	@r0,a
                           1147 ;	radio/main.c:272: num_fh_channels = MAX_FREQ_CHANNELS;
   0230 78r00         [12] 1148 	mov	r0,#_num_fh_channels
   0232 74 32         [12] 1149 	mov	a,#0x32
   0234 F2            [24] 1150 	movx	@r0,a
                           1151 ;	radio/main.c:273: break;
                           1152 ;	radio/main.c:274: default:
   0235 80 37         [24] 1153 	sjmp	00108$
   0237                    1154 00107$:
                           1155 ;	radio/main.c:275: freq_min = 0;
   0237 78r16         [12] 1156 	mov	r0,#_radio_init_freq_min_1_151
   0239 E4            [12] 1157 	clr	a
   023A F2            [24] 1158 	movx	@r0,a
   023B 08            [12] 1159 	inc	r0
   023C F2            [24] 1160 	movx	@r0,a
   023D 08            [12] 1161 	inc	r0
   023E F2            [24] 1162 	movx	@r0,a
   023F 08            [12] 1163 	inc	r0
   0240 F2            [24] 1164 	movx	@r0,a
                           1165 ;	radio/main.c:276: freq_max = 0;
   0241 78r1A         [12] 1166 	mov	r0,#_radio_init_freq_max_1_151
   0243 E4            [12] 1167 	clr	a
   0244 F2            [24] 1168 	movx	@r0,a
   0245 08            [12] 1169 	inc	r0
   0246 F2            [24] 1170 	movx	@r0,a
   0247 08            [12] 1171 	inc	r0
   0248 F2            [24] 1172 	movx	@r0,a
   0249 08            [12] 1173 	inc	r0
   024A F2            [24] 1174 	movx	@r0,a
                           1175 ;	radio/main.c:277: txpower = 0;
   024B 78r22         [12] 1176 	mov	r0,#_radio_init_txpower_1_151
   024D E4            [12] 1177 	clr	a
   024E F2            [24] 1178 	movx	@r0,a
                           1179 ;	radio/main.c:278: panic("bad board frequency %d", g_board_frequency);
   024F 78r00         [12] 1180 	mov	r0,#_g_board_frequency
   0251 E2            [24] 1181 	movx	a,@r0
   0252 FA            [12] 1182 	mov	r2,a
   0253 7B 00         [12] 1183 	mov	r3,#0x00
   0255 C0 02         [24] 1184 	push	ar2
   0257 C0 03         [24] 1185 	push	ar3
   0259 74r54         [12] 1186 	mov	a,#__str_4
   025B C0 E0         [24] 1187 	push	acc
   025D 74s00         [12] 1188 	mov	a,#(__str_4 >> 8)
   025F C0 E0         [24] 1189 	push	acc
   0261 74 80         [12] 1190 	mov	a,#0x80
   0263 C0 E0         [24] 1191 	push	acc
   0265 12r00r86      [24] 1192 	lcall	_panic
   0268 E5 81         [12] 1193 	mov	a,sp
   026A 24 FB         [12] 1194 	add	a,#0xfb
   026C F5 81         [12] 1195 	mov	sp,a
                           1196 ;	radio/main.c:280: }
   026E                    1197 00108$:
                           1198 ;	radio/main.c:282: if (param_get(PARAM_NUM_CHANNELS) != 0) {
   026E 75 82 0A      [24] 1199 	mov	dpl,#0x0A
   0271 12r00r00      [24] 1200 	lcall	_param_get
   0274 AA 82         [24] 1201 	mov	r2,dpl
   0276 AB 83         [24] 1202 	mov	r3,dph
   0278 AE F0         [24] 1203 	mov	r6,b
   027A FF            [12] 1204 	mov	r7,a
   027B EA            [12] 1205 	mov	a,r2
   027C 4B            [12] 1206 	orl	a,r3
   027D 4E            [12] 1207 	orl	a,r6
   027E 4F            [12] 1208 	orl	a,r7
   027F 60 11         [24] 1209 	jz	00110$
                           1210 ;	radio/main.c:283: num_fh_channels = param_get(PARAM_NUM_CHANNELS);
   0281 75 82 0A      [24] 1211 	mov	dpl,#0x0A
   0284 12r00r00      [24] 1212 	lcall	_param_get
   0287 AC 82         [24] 1213 	mov	r4,dpl
   0289 AD 83         [24] 1214 	mov	r5,dph
   028B AE F0         [24] 1215 	mov	r6,b
   028D FF            [12] 1216 	mov	r7,a
   028E 78r00         [12] 1217 	mov	r0,#_num_fh_channels
   0290 EC            [12] 1218 	mov	a,r4
   0291 F2            [24] 1219 	movx	@r0,a
   0292                    1220 00110$:
                           1221 ;	radio/main.c:285: if (param_get(PARAM_MIN_FREQ) != 0) {
   0292 75 82 08      [24] 1222 	mov	dpl,#0x08
   0295 12r00r00      [24] 1223 	lcall	_param_get
   0298 AC 82         [24] 1224 	mov	r4,dpl
   029A AD 83         [24] 1225 	mov	r5,dph
   029C AE F0         [24] 1226 	mov	r6,b
   029E FF            [12] 1227 	mov	r7,a
   029F EC            [12] 1228 	mov	a,r4
   02A0 4D            [12] 1229 	orl	a,r5
   02A1 4E            [12] 1230 	orl	a,r6
   02A2 4F            [12] 1231 	orl	a,r7
   02A3 60 37         [24] 1232 	jz	00112$
                           1233 ;	radio/main.c:286: freq_min        = param_get(PARAM_MIN_FREQ) * 1000UL;
   02A5 75 82 08      [24] 1234 	mov	dpl,#0x08
   02A8 12r00r00      [24] 1235 	lcall	_param_get
   02AB AC 82         [24] 1236 	mov	r4,dpl
   02AD AD 83         [24] 1237 	mov	r5,dph
   02AF AE F0         [24] 1238 	mov	r6,b
   02B1 FF            [12] 1239 	mov	r7,a
   02B2 90r00r00      [24] 1240 	mov	dptr,#__mullong_PARM_2
   02B5 EC            [12] 1241 	mov	a,r4
   02B6 F0            [24] 1242 	movx	@dptr,a
   02B7 ED            [12] 1243 	mov	a,r5
   02B8 A3            [24] 1244 	inc	dptr
   02B9 F0            [24] 1245 	movx	@dptr,a
   02BA EE            [12] 1246 	mov	a,r6
   02BB A3            [24] 1247 	inc	dptr
   02BC F0            [24] 1248 	movx	@dptr,a
   02BD EF            [12] 1249 	mov	a,r7
   02BE A3            [24] 1250 	inc	dptr
   02BF F0            [24] 1251 	movx	@dptr,a
   02C0 90 03 E8      [24] 1252 	mov	dptr,#0x03E8
   02C3 E4            [12] 1253 	clr	a
   02C4 F5 F0         [12] 1254 	mov	b,a
   02C6 12r00r00      [24] 1255 	lcall	__mullong
   02C9 78r16         [12] 1256 	mov	r0,#_radio_init_freq_min_1_151
   02CB C0 E0         [24] 1257 	push	acc
   02CD E5 82         [12] 1258 	mov	a,dpl
   02CF F2            [24] 1259 	movx	@r0,a
   02D0 08            [12] 1260 	inc	r0
   02D1 E5 83         [12] 1261 	mov	a,dph
   02D3 F2            [24] 1262 	movx	@r0,a
   02D4 08            [12] 1263 	inc	r0
   02D5 E5 F0         [12] 1264 	mov	a,b
   02D7 F2            [24] 1265 	movx	@r0,a
   02D8 D0 E0         [24] 1266 	pop	acc
   02DA 08            [12] 1267 	inc	r0
   02DB F2            [24] 1268 	movx	@r0,a
   02DC                    1269 00112$:
                           1270 ;	radio/main.c:288: if (param_get(PARAM_MAX_FREQ) != 0) {
   02DC 75 82 09      [24] 1271 	mov	dpl,#0x09
   02DF 12r00r00      [24] 1272 	lcall	_param_get
   02E2 AC 82         [24] 1273 	mov	r4,dpl
   02E4 AD 83         [24] 1274 	mov	r5,dph
   02E6 AE F0         [24] 1275 	mov	r6,b
   02E8 FF            [12] 1276 	mov	r7,a
   02E9 EC            [12] 1277 	mov	a,r4
   02EA 4D            [12] 1278 	orl	a,r5
   02EB 4E            [12] 1279 	orl	a,r6
   02EC 4F            [12] 1280 	orl	a,r7
   02ED 60 37         [24] 1281 	jz	00114$
                           1282 ;	radio/main.c:289: freq_max        = param_get(PARAM_MAX_FREQ) * 1000UL;
   02EF 75 82 09      [24] 1283 	mov	dpl,#0x09
   02F2 12r00r00      [24] 1284 	lcall	_param_get
   02F5 AC 82         [24] 1285 	mov	r4,dpl
   02F7 AD 83         [24] 1286 	mov	r5,dph
   02F9 AE F0         [24] 1287 	mov	r6,b
   02FB FF            [12] 1288 	mov	r7,a
   02FC 90r00r00      [24] 1289 	mov	dptr,#__mullong_PARM_2
   02FF EC            [12] 1290 	mov	a,r4
   0300 F0            [24] 1291 	movx	@dptr,a
   0301 ED            [12] 1292 	mov	a,r5
   0302 A3            [24] 1293 	inc	dptr
   0303 F0            [24] 1294 	movx	@dptr,a
   0304 EE            [12] 1295 	mov	a,r6
   0305 A3            [24] 1296 	inc	dptr
   0306 F0            [24] 1297 	movx	@dptr,a
   0307 EF            [12] 1298 	mov	a,r7
   0308 A3            [24] 1299 	inc	dptr
   0309 F0            [24] 1300 	movx	@dptr,a
   030A 90 03 E8      [24] 1301 	mov	dptr,#0x03E8
   030D E4            [12] 1302 	clr	a
   030E F5 F0         [12] 1303 	mov	b,a
   0310 12r00r00      [24] 1304 	lcall	__mullong
   0313 78r1A         [12] 1305 	mov	r0,#_radio_init_freq_max_1_151
   0315 C0 E0         [24] 1306 	push	acc
   0317 E5 82         [12] 1307 	mov	a,dpl
   0319 F2            [24] 1308 	movx	@r0,a
   031A 08            [12] 1309 	inc	r0
   031B E5 83         [12] 1310 	mov	a,dph
   031D F2            [24] 1311 	movx	@r0,a
   031E 08            [12] 1312 	inc	r0
   031F E5 F0         [12] 1313 	mov	a,b
   0321 F2            [24] 1314 	movx	@r0,a
   0322 D0 E0         [24] 1315 	pop	acc
   0324 08            [12] 1316 	inc	r0
   0325 F2            [24] 1317 	movx	@r0,a
   0326                    1318 00114$:
                           1319 ;	radio/main.c:291: if (param_get(PARAM_TXPOWER) != 0) {
   0326 75 82 04      [24] 1320 	mov	dpl,#0x04
   0329 12r00r00      [24] 1321 	lcall	_param_get
   032C AC 82         [24] 1322 	mov	r4,dpl
   032E AD 83         [24] 1323 	mov	r5,dph
   0330 AE F0         [24] 1324 	mov	r6,b
   0332 FF            [12] 1325 	mov	r7,a
   0333 EC            [12] 1326 	mov	a,r4
   0334 4D            [12] 1327 	orl	a,r5
   0335 4E            [12] 1328 	orl	a,r6
   0336 4F            [12] 1329 	orl	a,r7
   0337 60 11         [24] 1330 	jz	00116$
                           1331 ;	radio/main.c:292: txpower = param_get(PARAM_TXPOWER);
   0339 75 82 04      [24] 1332 	mov	dpl,#0x04
   033C 12r00r00      [24] 1333 	lcall	_param_get
   033F AC 82         [24] 1334 	mov	r4,dpl
   0341 AD 83         [24] 1335 	mov	r5,dph
   0343 AE F0         [24] 1336 	mov	r6,b
   0345 FF            [12] 1337 	mov	r7,a
   0346 78r22         [12] 1338 	mov	r0,#_radio_init_txpower_1_151
   0348 EC            [12] 1339 	mov	a,r4
   0349 F2            [24] 1340 	movx	@r0,a
   034A                    1341 00116$:
                           1342 ;	radio/main.c:296: txpower = constrain(txpower, BOARD_MINTXPOWER, BOARD_MAXTXPOWER);
   034A 78r22         [12] 1343 	mov	r0,#_radio_init_txpower_1_151
   034C E2            [24] 1344 	movx	a,@r0
   034D FB            [12] 1345 	mov	r3,a
   034E 7D 00         [12] 1346 	mov	r5,#0x00
   0350 7E 00         [12] 1347 	mov	r6,#0x00
   0352 7F 00         [12] 1348 	mov	r7,#0x00
   0354 78r00         [12] 1349 	mov	r0,#_constrain_PARM_2
   0356 74 11         [12] 1350 	mov	a,#0x11
   0358 F2            [24] 1351 	movx	@r0,a
   0359 08            [12] 1352 	inc	r0
   035A E4            [12] 1353 	clr	a
   035B F2            [24] 1354 	movx	@r0,a
   035C 08            [12] 1355 	inc	r0
   035D F2            [24] 1356 	movx	@r0,a
   035E 08            [12] 1357 	inc	r0
   035F F2            [24] 1358 	movx	@r0,a
   0360 78r00         [12] 1359 	mov	r0,#_constrain_PARM_3
   0362 74 1E         [12] 1360 	mov	a,#0x1E
   0364 F2            [24] 1361 	movx	@r0,a
   0365 08            [12] 1362 	inc	r0
   0366 E4            [12] 1363 	clr	a
   0367 F2            [24] 1364 	movx	@r0,a
   0368 08            [12] 1365 	inc	r0
   0369 F2            [24] 1366 	movx	@r0,a
   036A 08            [12] 1367 	inc	r0
   036B F2            [24] 1368 	movx	@r0,a
   036C 8B 82         [24] 1369 	mov	dpl,r3
   036E 8D 83         [24] 1370 	mov	dph,r5
   0370 8E F0         [24] 1371 	mov	b,r6
   0372 EF            [12] 1372 	mov	a,r7
   0373 12r00r00      [24] 1373 	lcall	_constrain
   0376 AC 82         [24] 1374 	mov	r4,dpl
   0378 78r22         [12] 1375 	mov	r0,#_radio_init_txpower_1_151
   037A EC            [12] 1376 	mov	a,r4
   037B F2            [24] 1377 	movx	@r0,a
                           1378 ;	radio/main.c:297: num_fh_channels = constrain(num_fh_channels, 1, MAX_FREQ_CHANNELS);
   037C 78r00         [12] 1379 	mov	r0,#_num_fh_channels
   037E E2            [24] 1380 	movx	a,@r0
   037F FC            [12] 1381 	mov	r4,a
   0380 7D 00         [12] 1382 	mov	r5,#0x00
   0382 7E 00         [12] 1383 	mov	r6,#0x00
   0384 7F 00         [12] 1384 	mov	r7,#0x00
   0386 78r00         [12] 1385 	mov	r0,#_constrain_PARM_2
   0388 74 01         [12] 1386 	mov	a,#0x01
   038A F2            [24] 1387 	movx	@r0,a
   038B 08            [12] 1388 	inc	r0
   038C E4            [12] 1389 	clr	a
   038D F2            [24] 1390 	movx	@r0,a
   038E 08            [12] 1391 	inc	r0
   038F F2            [24] 1392 	movx	@r0,a
   0390 08            [12] 1393 	inc	r0
   0391 F2            [24] 1394 	movx	@r0,a
   0392 78r00         [12] 1395 	mov	r0,#_constrain_PARM_3
   0394 74 32         [12] 1396 	mov	a,#0x32
   0396 F2            [24] 1397 	movx	@r0,a
   0397 08            [12] 1398 	inc	r0
   0398 E4            [12] 1399 	clr	a
   0399 F2            [24] 1400 	movx	@r0,a
   039A 08            [12] 1401 	inc	r0
   039B F2            [24] 1402 	movx	@r0,a
   039C 08            [12] 1403 	inc	r0
   039D F2            [24] 1404 	movx	@r0,a
   039E 8C 82         [24] 1405 	mov	dpl,r4
   03A0 8D 83         [24] 1406 	mov	dph,r5
   03A2 8E F0         [24] 1407 	mov	b,r6
   03A4 EF            [12] 1408 	mov	a,r7
   03A5 12r00r00      [24] 1409 	lcall	_constrain
   03A8 AC 82         [24] 1410 	mov	r4,dpl
   03AA AD 83         [24] 1411 	mov	r5,dph
   03AC AE F0         [24] 1412 	mov	r6,b
   03AE FF            [12] 1413 	mov	r7,a
   03AF 78r00         [12] 1414 	mov	r0,#_num_fh_channels
   03B1 EC            [12] 1415 	mov	a,r4
   03B2 F2            [24] 1416 	movx	@r0,a
                           1417 ;	radio/main.c:300: switch (g_board_frequency) {
   03B3 78r00         [12] 1418 	mov	r0,#_g_board_frequency
   03B5 E2            [24] 1419 	movx	a,@r0
   03B6 B4 43 02      [24] 1420 	cjne	a,#0x43,00201$
   03B9 80 1E         [24] 1421 	sjmp	00117$
   03BB                    1422 00201$:
   03BB 78r00         [12] 1423 	mov	r0,#_g_board_frequency
   03BD E2            [24] 1424 	movx	a,@r0
   03BE B4 47 03      [24] 1425 	cjne	a,#0x47,00202$
   03C1 02r04r68      [24] 1426 	ljmp	00118$
   03C4                    1427 00202$:
   03C4 78r00         [12] 1428 	mov	r0,#_g_board_frequency
   03C6 E2            [24] 1429 	movx	a,@r0
   03C7 B4 86 03      [24] 1430 	cjne	a,#0x86,00203$
   03CA 02r04rF9      [24] 1431 	ljmp	00119$
   03CD                    1432 00203$:
   03CD 78r00         [12] 1433 	mov	r0,#_g_board_frequency
   03CF E2            [24] 1434 	movx	a,@r0
   03D0 B4 91 03      [24] 1435 	cjne	a,#0x91,00204$
   03D3 02r05r8A      [24] 1436 	ljmp	00120$
   03D6                    1437 00204$:
   03D6 02r06r18      [24] 1438 	ljmp	00121$
                           1439 ;	radio/main.c:301: case FREQ_433:
   03D9                    1440 00117$:
                           1441 ;	radio/main.c:302: freq_min = constrain(freq_min, 414000000UL, 460000000UL);
   03D9 78r00         [12] 1442 	mov	r0,#_constrain_PARM_2
   03DB 74 80         [12] 1443 	mov	a,#0x80
   03DD F2            [24] 1444 	movx	@r0,a
   03DE 08            [12] 1445 	inc	r0
   03DF 74 23         [12] 1446 	mov	a,#0x23
   03E1 F2            [24] 1447 	movx	@r0,a
   03E2 08            [12] 1448 	inc	r0
   03E3 74 AD         [12] 1449 	mov	a,#0xAD
   03E5 F2            [24] 1450 	movx	@r0,a
   03E6 08            [12] 1451 	inc	r0
   03E7 74 18         [12] 1452 	mov	a,#0x18
   03E9 F2            [24] 1453 	movx	@r0,a
   03EA 78r00         [12] 1454 	mov	r0,#_constrain_PARM_3
   03EC E4            [12] 1455 	clr	a
   03ED F2            [24] 1456 	movx	@r0,a
   03EE 08            [12] 1457 	inc	r0
   03EF 74 0B         [12] 1458 	mov	a,#0x0B
   03F1 F2            [24] 1459 	movx	@r0,a
   03F2 08            [12] 1460 	inc	r0
   03F3 74 6B         [12] 1461 	mov	a,#0x6B
   03F5 F2            [24] 1462 	movx	@r0,a
   03F6 08            [12] 1463 	inc	r0
   03F7 74 1B         [12] 1464 	mov	a,#0x1B
   03F9 F2            [24] 1465 	movx	@r0,a
   03FA 78r16         [12] 1466 	mov	r0,#_radio_init_freq_min_1_151
   03FC E2            [24] 1467 	movx	a,@r0
   03FD F5 82         [12] 1468 	mov	dpl,a
   03FF 08            [12] 1469 	inc	r0
   0400 E2            [24] 1470 	movx	a,@r0
   0401 F5 83         [12] 1471 	mov	dph,a
   0403 08            [12] 1472 	inc	r0
   0404 E2            [24] 1473 	movx	a,@r0
   0405 F5 F0         [12] 1474 	mov	b,a
   0407 08            [12] 1475 	inc	r0
   0408 E2            [24] 1476 	movx	a,@r0
   0409 12r00r00      [24] 1477 	lcall	_constrain
   040C 78r16         [12] 1478 	mov	r0,#_radio_init_freq_min_1_151
   040E C0 E0         [24] 1479 	push	acc
   0410 E5 82         [12] 1480 	mov	a,dpl
   0412 F2            [24] 1481 	movx	@r0,a
   0413 08            [12] 1482 	inc	r0
   0414 E5 83         [12] 1483 	mov	a,dph
   0416 F2            [24] 1484 	movx	@r0,a
   0417 08            [12] 1485 	inc	r0
   0418 E5 F0         [12] 1486 	mov	a,b
   041A F2            [24] 1487 	movx	@r0,a
   041B D0 E0         [24] 1488 	pop	acc
   041D 08            [12] 1489 	inc	r0
   041E F2            [24] 1490 	movx	@r0,a
                           1491 ;	radio/main.c:303: freq_max = constrain(freq_max, 414000000UL, 460000000UL);
   041F 78r00         [12] 1492 	mov	r0,#_constrain_PARM_2
   0421 74 80         [12] 1493 	mov	a,#0x80
   0423 F2            [24] 1494 	movx	@r0,a
   0424 08            [12] 1495 	inc	r0
   0425 74 23         [12] 1496 	mov	a,#0x23
   0427 F2            [24] 1497 	movx	@r0,a
   0428 08            [12] 1498 	inc	r0
   0429 74 AD         [12] 1499 	mov	a,#0xAD
   042B F2            [24] 1500 	movx	@r0,a
   042C 08            [12] 1501 	inc	r0
   042D 74 18         [12] 1502 	mov	a,#0x18
   042F F2            [24] 1503 	movx	@r0,a
   0430 78r00         [12] 1504 	mov	r0,#_constrain_PARM_3
   0432 E4            [12] 1505 	clr	a
   0433 F2            [24] 1506 	movx	@r0,a
   0434 08            [12] 1507 	inc	r0
   0435 74 0B         [12] 1508 	mov	a,#0x0B
   0437 F2            [24] 1509 	movx	@r0,a
   0438 08            [12] 1510 	inc	r0
   0439 74 6B         [12] 1511 	mov	a,#0x6B
   043B F2            [24] 1512 	movx	@r0,a
   043C 08            [12] 1513 	inc	r0
   043D 74 1B         [12] 1514 	mov	a,#0x1B
   043F F2            [24] 1515 	movx	@r0,a
   0440 78r1A         [12] 1516 	mov	r0,#_radio_init_freq_max_1_151
   0442 E2            [24] 1517 	movx	a,@r0
   0443 F5 82         [12] 1518 	mov	dpl,a
   0445 08            [12] 1519 	inc	r0
   0446 E2            [24] 1520 	movx	a,@r0
   0447 F5 83         [12] 1521 	mov	dph,a
   0449 08            [12] 1522 	inc	r0
   044A E2            [24] 1523 	movx	a,@r0
   044B F5 F0         [12] 1524 	mov	b,a
   044D 08            [12] 1525 	inc	r0
   044E E2            [24] 1526 	movx	a,@r0
   044F 12r00r00      [24] 1527 	lcall	_constrain
   0452 78r1A         [12] 1528 	mov	r0,#_radio_init_freq_max_1_151
   0454 C0 E0         [24] 1529 	push	acc
   0456 E5 82         [12] 1530 	mov	a,dpl
   0458 F2            [24] 1531 	movx	@r0,a
   0459 08            [12] 1532 	inc	r0
   045A E5 83         [12] 1533 	mov	a,dph
   045C F2            [24] 1534 	movx	@r0,a
   045D 08            [12] 1535 	inc	r0
   045E E5 F0         [12] 1536 	mov	a,b
   0460 F2            [24] 1537 	movx	@r0,a
   0461 D0 E0         [24] 1538 	pop	acc
   0463 08            [12] 1539 	inc	r0
   0464 F2            [24] 1540 	movx	@r0,a
                           1541 ;	radio/main.c:304: break;
   0465 02r06r37      [24] 1542 	ljmp	00122$
                           1543 ;	radio/main.c:305: case FREQ_470:
   0468                    1544 00118$:
                           1545 ;	radio/main.c:306: freq_min = constrain(freq_min, 450000000UL, 490000000UL);
   0468 78r00         [12] 1546 	mov	r0,#_constrain_PARM_2
   046A 74 80         [12] 1547 	mov	a,#0x80
   046C F2            [24] 1548 	movx	@r0,a
   046D 08            [12] 1549 	inc	r0
   046E 74 74         [12] 1550 	mov	a,#0x74
   0470 F2            [24] 1551 	movx	@r0,a
   0471 08            [12] 1552 	inc	r0
   0472 74 D2         [12] 1553 	mov	a,#0xD2
   0474 F2            [24] 1554 	movx	@r0,a
   0475 08            [12] 1555 	inc	r0
   0476 74 1A         [12] 1556 	mov	a,#0x1A
   0478 F2            [24] 1557 	movx	@r0,a
   0479 78r00         [12] 1558 	mov	r0,#_constrain_PARM_3
   047B 74 80         [12] 1559 	mov	a,#0x80
   047D F2            [24] 1560 	movx	@r0,a
   047E 08            [12] 1561 	inc	r0
   047F 74 CE         [12] 1562 	mov	a,#0xCE
   0481 F2            [24] 1563 	movx	@r0,a
   0482 08            [12] 1564 	inc	r0
   0483 74 34         [12] 1565 	mov	a,#0x34
   0485 F2            [24] 1566 	movx	@r0,a
   0486 08            [12] 1567 	inc	r0
   0487 74 1D         [12] 1568 	mov	a,#0x1D
   0489 F2            [24] 1569 	movx	@r0,a
   048A 78r16         [12] 1570 	mov	r0,#_radio_init_freq_min_1_151
   048C E2            [24] 1571 	movx	a,@r0
   048D F5 82         [12] 1572 	mov	dpl,a
   048F 08            [12] 1573 	inc	r0
   0490 E2            [24] 1574 	movx	a,@r0
   0491 F5 83         [12] 1575 	mov	dph,a
   0493 08            [12] 1576 	inc	r0
   0494 E2            [24] 1577 	movx	a,@r0
   0495 F5 F0         [12] 1578 	mov	b,a
   0497 08            [12] 1579 	inc	r0
   0498 E2            [24] 1580 	movx	a,@r0
   0499 12r00r00      [24] 1581 	lcall	_constrain
   049C 78r16         [12] 1582 	mov	r0,#_radio_init_freq_min_1_151
   049E C0 E0         [24] 1583 	push	acc
   04A0 E5 82         [12] 1584 	mov	a,dpl
   04A2 F2            [24] 1585 	movx	@r0,a
   04A3 08            [12] 1586 	inc	r0
   04A4 E5 83         [12] 1587 	mov	a,dph
   04A6 F2            [24] 1588 	movx	@r0,a
   04A7 08            [12] 1589 	inc	r0
   04A8 E5 F0         [12] 1590 	mov	a,b
   04AA F2            [24] 1591 	movx	@r0,a
   04AB D0 E0         [24] 1592 	pop	acc
   04AD 08            [12] 1593 	inc	r0
   04AE F2            [24] 1594 	movx	@r0,a
                           1595 ;	radio/main.c:307: freq_max = constrain(freq_max, 450000000UL, 490000000UL);
   04AF 78r00         [12] 1596 	mov	r0,#_constrain_PARM_2
   04B1 74 80         [12] 1597 	mov	a,#0x80
   04B3 F2            [24] 1598 	movx	@r0,a
   04B4 08            [12] 1599 	inc	r0
   04B5 74 74         [12] 1600 	mov	a,#0x74
   04B7 F2            [24] 1601 	movx	@r0,a
   04B8 08            [12] 1602 	inc	r0
   04B9 74 D2         [12] 1603 	mov	a,#0xD2
   04BB F2            [24] 1604 	movx	@r0,a
   04BC 08            [12] 1605 	inc	r0
   04BD 74 1A         [12] 1606 	mov	a,#0x1A
   04BF F2            [24] 1607 	movx	@r0,a
   04C0 78r00         [12] 1608 	mov	r0,#_constrain_PARM_3
   04C2 74 80         [12] 1609 	mov	a,#0x80
   04C4 F2            [24] 1610 	movx	@r0,a
   04C5 08            [12] 1611 	inc	r0
   04C6 74 CE         [12] 1612 	mov	a,#0xCE
   04C8 F2            [24] 1613 	movx	@r0,a
   04C9 08            [12] 1614 	inc	r0
   04CA 74 34         [12] 1615 	mov	a,#0x34
   04CC F2            [24] 1616 	movx	@r0,a
   04CD 08            [12] 1617 	inc	r0
   04CE 74 1D         [12] 1618 	mov	a,#0x1D
   04D0 F2            [24] 1619 	movx	@r0,a
   04D1 78r1A         [12] 1620 	mov	r0,#_radio_init_freq_max_1_151
   04D3 E2            [24] 1621 	movx	a,@r0
   04D4 F5 82         [12] 1622 	mov	dpl,a
   04D6 08            [12] 1623 	inc	r0
   04D7 E2            [24] 1624 	movx	a,@r0
   04D8 F5 83         [12] 1625 	mov	dph,a
   04DA 08            [12] 1626 	inc	r0
   04DB E2            [24] 1627 	movx	a,@r0
   04DC F5 F0         [12] 1628 	mov	b,a
   04DE 08            [12] 1629 	inc	r0
   04DF E2            [24] 1630 	movx	a,@r0
   04E0 12r00r00      [24] 1631 	lcall	_constrain
   04E3 78r1A         [12] 1632 	mov	r0,#_radio_init_freq_max_1_151
   04E5 C0 E0         [24] 1633 	push	acc
   04E7 E5 82         [12] 1634 	mov	a,dpl
   04E9 F2            [24] 1635 	movx	@r0,a
   04EA 08            [12] 1636 	inc	r0
   04EB E5 83         [12] 1637 	mov	a,dph
   04ED F2            [24] 1638 	movx	@r0,a
   04EE 08            [12] 1639 	inc	r0
   04EF E5 F0         [12] 1640 	mov	a,b
   04F1 F2            [24] 1641 	movx	@r0,a
   04F2 D0 E0         [24] 1642 	pop	acc
   04F4 08            [12] 1643 	inc	r0
   04F5 F2            [24] 1644 	movx	@r0,a
                           1645 ;	radio/main.c:308: break;
   04F6 02r06r37      [24] 1646 	ljmp	00122$
                           1647 ;	radio/main.c:309: case FREQ_868:
   04F9                    1648 00119$:
                           1649 ;	radio/main.c:310: freq_min = constrain(freq_min, 849000000UL, 889000000UL);
   04F9 78r00         [12] 1650 	mov	r0,#_constrain_PARM_2
   04FB 74 40         [12] 1651 	mov	a,#0x40
   04FD F2            [24] 1652 	movx	@r0,a
   04FE 08            [12] 1653 	inc	r0
   04FF 74 B6         [12] 1654 	mov	a,#0xB6
   0501 F2            [24] 1655 	movx	@r0,a
   0502 08            [12] 1656 	inc	r0
   0503 74 9A         [12] 1657 	mov	a,#0x9A
   0505 F2            [24] 1658 	movx	@r0,a
   0506 08            [12] 1659 	inc	r0
   0507 74 32         [12] 1660 	mov	a,#0x32
   0509 F2            [24] 1661 	movx	@r0,a
   050A 78r00         [12] 1662 	mov	r0,#_constrain_PARM_3
   050C 74 40         [12] 1663 	mov	a,#0x40
   050E F2            [24] 1664 	movx	@r0,a
   050F 08            [12] 1665 	inc	r0
   0510 74 10         [12] 1666 	mov	a,#0x10
   0512 F2            [24] 1667 	movx	@r0,a
   0513 08            [12] 1668 	inc	r0
   0514 74 FD         [12] 1669 	mov	a,#0xFD
   0516 F2            [24] 1670 	movx	@r0,a
   0517 08            [12] 1671 	inc	r0
   0518 74 34         [12] 1672 	mov	a,#0x34
   051A F2            [24] 1673 	movx	@r0,a
   051B 78r16         [12] 1674 	mov	r0,#_radio_init_freq_min_1_151
   051D E2            [24] 1675 	movx	a,@r0
   051E F5 82         [12] 1676 	mov	dpl,a
   0520 08            [12] 1677 	inc	r0
   0521 E2            [24] 1678 	movx	a,@r0
   0522 F5 83         [12] 1679 	mov	dph,a
   0524 08            [12] 1680 	inc	r0
   0525 E2            [24] 1681 	movx	a,@r0
   0526 F5 F0         [12] 1682 	mov	b,a
   0528 08            [12] 1683 	inc	r0
   0529 E2            [24] 1684 	movx	a,@r0
   052A 12r00r00      [24] 1685 	lcall	_constrain
   052D 78r16         [12] 1686 	mov	r0,#_radio_init_freq_min_1_151
   052F C0 E0         [24] 1687 	push	acc
   0531 E5 82         [12] 1688 	mov	a,dpl
   0533 F2            [24] 1689 	movx	@r0,a
   0534 08            [12] 1690 	inc	r0
   0535 E5 83         [12] 1691 	mov	a,dph
   0537 F2            [24] 1692 	movx	@r0,a
   0538 08            [12] 1693 	inc	r0
   0539 E5 F0         [12] 1694 	mov	a,b
   053B F2            [24] 1695 	movx	@r0,a
   053C D0 E0         [24] 1696 	pop	acc
   053E 08            [12] 1697 	inc	r0
   053F F2            [24] 1698 	movx	@r0,a
                           1699 ;	radio/main.c:311: freq_max = constrain(freq_max, 849000000UL, 889000000UL);
   0540 78r00         [12] 1700 	mov	r0,#_constrain_PARM_2
   0542 74 40         [12] 1701 	mov	a,#0x40
   0544 F2            [24] 1702 	movx	@r0,a
   0545 08            [12] 1703 	inc	r0
   0546 74 B6         [12] 1704 	mov	a,#0xB6
   0548 F2            [24] 1705 	movx	@r0,a
   0549 08            [12] 1706 	inc	r0
   054A 74 9A         [12] 1707 	mov	a,#0x9A
   054C F2            [24] 1708 	movx	@r0,a
   054D 08            [12] 1709 	inc	r0
   054E 74 32         [12] 1710 	mov	a,#0x32
   0550 F2            [24] 1711 	movx	@r0,a
   0551 78r00         [12] 1712 	mov	r0,#_constrain_PARM_3
   0553 74 40         [12] 1713 	mov	a,#0x40
   0555 F2            [24] 1714 	movx	@r0,a
   0556 08            [12] 1715 	inc	r0
   0557 74 10         [12] 1716 	mov	a,#0x10
   0559 F2            [24] 1717 	movx	@r0,a
   055A 08            [12] 1718 	inc	r0
   055B 74 FD         [12] 1719 	mov	a,#0xFD
   055D F2            [24] 1720 	movx	@r0,a
   055E 08            [12] 1721 	inc	r0
   055F 74 34         [12] 1722 	mov	a,#0x34
   0561 F2            [24] 1723 	movx	@r0,a
   0562 78r1A         [12] 1724 	mov	r0,#_radio_init_freq_max_1_151
   0564 E2            [24] 1725 	movx	a,@r0
   0565 F5 82         [12] 1726 	mov	dpl,a
   0567 08            [12] 1727 	inc	r0
   0568 E2            [24] 1728 	movx	a,@r0
   0569 F5 83         [12] 1729 	mov	dph,a
   056B 08            [12] 1730 	inc	r0
   056C E2            [24] 1731 	movx	a,@r0
   056D F5 F0         [12] 1732 	mov	b,a
   056F 08            [12] 1733 	inc	r0
   0570 E2            [24] 1734 	movx	a,@r0
   0571 12r00r00      [24] 1735 	lcall	_constrain
   0574 78r1A         [12] 1736 	mov	r0,#_radio_init_freq_max_1_151
   0576 C0 E0         [24] 1737 	push	acc
   0578 E5 82         [12] 1738 	mov	a,dpl
   057A F2            [24] 1739 	movx	@r0,a
   057B 08            [12] 1740 	inc	r0
   057C E5 83         [12] 1741 	mov	a,dph
   057E F2            [24] 1742 	movx	@r0,a
   057F 08            [12] 1743 	inc	r0
   0580 E5 F0         [12] 1744 	mov	a,b
   0582 F2            [24] 1745 	movx	@r0,a
   0583 D0 E0         [24] 1746 	pop	acc
   0585 08            [12] 1747 	inc	r0
   0586 F2            [24] 1748 	movx	@r0,a
                           1749 ;	radio/main.c:312: break;
   0587 02r06r37      [24] 1750 	ljmp	00122$
                           1751 ;	radio/main.c:313: case FREQ_915:
   058A                    1752 00120$:
                           1753 ;	radio/main.c:314: freq_min = constrain(freq_min, 868000000UL, 935000000UL);
   058A 78r00         [12] 1754 	mov	r0,#_constrain_PARM_2
   058C E4            [12] 1755 	clr	a
   058D F2            [24] 1756 	movx	@r0,a
   058E 08            [12] 1757 	inc	r0
   058F 74 A1         [12] 1758 	mov	a,#0xA1
   0591 F2            [24] 1759 	movx	@r0,a
   0592 08            [12] 1760 	inc	r0
   0593 74 BC         [12] 1761 	mov	a,#0xBC
   0595 F2            [24] 1762 	movx	@r0,a
   0596 08            [12] 1763 	inc	r0
   0597 74 33         [12] 1764 	mov	a,#0x33
   0599 F2            [24] 1765 	movx	@r0,a
   059A 78r00         [12] 1766 	mov	r0,#_constrain_PARM_3
   059C 74 C0         [12] 1767 	mov	a,#0xC0
   059E F2            [24] 1768 	movx	@r0,a
   059F 08            [12] 1769 	inc	r0
   05A0 74 F7         [12] 1770 	mov	a,#0xF7
   05A2 F2            [24] 1771 	movx	@r0,a
   05A3 08            [12] 1772 	inc	r0
   05A4 74 BA         [12] 1773 	mov	a,#0xBA
   05A6 F2            [24] 1774 	movx	@r0,a
   05A7 08            [12] 1775 	inc	r0
   05A8 74 37         [12] 1776 	mov	a,#0x37
   05AA F2            [24] 1777 	movx	@r0,a
   05AB 78r16         [12] 1778 	mov	r0,#_radio_init_freq_min_1_151
   05AD E2            [24] 1779 	movx	a,@r0
   05AE F5 82         [12] 1780 	mov	dpl,a
   05B0 08            [12] 1781 	inc	r0
   05B1 E2            [24] 1782 	movx	a,@r0
   05B2 F5 83         [12] 1783 	mov	dph,a
   05B4 08            [12] 1784 	inc	r0
   05B5 E2            [24] 1785 	movx	a,@r0
   05B6 F5 F0         [12] 1786 	mov	b,a
   05B8 08            [12] 1787 	inc	r0
   05B9 E2            [24] 1788 	movx	a,@r0
   05BA 12r00r00      [24] 1789 	lcall	_constrain
   05BD 78r16         [12] 1790 	mov	r0,#_radio_init_freq_min_1_151
   05BF C0 E0         [24] 1791 	push	acc
   05C1 E5 82         [12] 1792 	mov	a,dpl
   05C3 F2            [24] 1793 	movx	@r0,a
   05C4 08            [12] 1794 	inc	r0
   05C5 E5 83         [12] 1795 	mov	a,dph
   05C7 F2            [24] 1796 	movx	@r0,a
   05C8 08            [12] 1797 	inc	r0
   05C9 E5 F0         [12] 1798 	mov	a,b
   05CB F2            [24] 1799 	movx	@r0,a
   05CC D0 E0         [24] 1800 	pop	acc
   05CE 08            [12] 1801 	inc	r0
   05CF F2            [24] 1802 	movx	@r0,a
                           1803 ;	radio/main.c:315: freq_max = constrain(freq_max, 868000000UL, 935000000UL);
   05D0 78r00         [12] 1804 	mov	r0,#_constrain_PARM_2
   05D2 E4            [12] 1805 	clr	a
   05D3 F2            [24] 1806 	movx	@r0,a
   05D4 08            [12] 1807 	inc	r0
   05D5 74 A1         [12] 1808 	mov	a,#0xA1
   05D7 F2            [24] 1809 	movx	@r0,a
   05D8 08            [12] 1810 	inc	r0
   05D9 74 BC         [12] 1811 	mov	a,#0xBC
   05DB F2            [24] 1812 	movx	@r0,a
   05DC 08            [12] 1813 	inc	r0
   05DD 74 33         [12] 1814 	mov	a,#0x33
   05DF F2            [24] 1815 	movx	@r0,a
   05E0 78r00         [12] 1816 	mov	r0,#_constrain_PARM_3
   05E2 74 C0         [12] 1817 	mov	a,#0xC0
   05E4 F2            [24] 1818 	movx	@r0,a
   05E5 08            [12] 1819 	inc	r0
   05E6 74 F7         [12] 1820 	mov	a,#0xF7
   05E8 F2            [24] 1821 	movx	@r0,a
   05E9 08            [12] 1822 	inc	r0
   05EA 74 BA         [12] 1823 	mov	a,#0xBA
   05EC F2            [24] 1824 	movx	@r0,a
   05ED 08            [12] 1825 	inc	r0
   05EE 74 37         [12] 1826 	mov	a,#0x37
   05F0 F2            [24] 1827 	movx	@r0,a
   05F1 78r1A         [12] 1828 	mov	r0,#_radio_init_freq_max_1_151
   05F3 E2            [24] 1829 	movx	a,@r0
   05F4 F5 82         [12] 1830 	mov	dpl,a
   05F6 08            [12] 1831 	inc	r0
   05F7 E2            [24] 1832 	movx	a,@r0
   05F8 F5 83         [12] 1833 	mov	dph,a
   05FA 08            [12] 1834 	inc	r0
   05FB E2            [24] 1835 	movx	a,@r0
   05FC F5 F0         [12] 1836 	mov	b,a
   05FE 08            [12] 1837 	inc	r0
   05FF E2            [24] 1838 	movx	a,@r0
   0600 12r00r00      [24] 1839 	lcall	_constrain
   0603 78r1A         [12] 1840 	mov	r0,#_radio_init_freq_max_1_151
   0605 C0 E0         [24] 1841 	push	acc
   0607 E5 82         [12] 1842 	mov	a,dpl
   0609 F2            [24] 1843 	movx	@r0,a
   060A 08            [12] 1844 	inc	r0
   060B E5 83         [12] 1845 	mov	a,dph
   060D F2            [24] 1846 	movx	@r0,a
   060E 08            [12] 1847 	inc	r0
   060F E5 F0         [12] 1848 	mov	a,b
   0611 F2            [24] 1849 	movx	@r0,a
   0612 D0 E0         [24] 1850 	pop	acc
   0614 08            [12] 1851 	inc	r0
   0615 F2            [24] 1852 	movx	@r0,a
                           1853 ;	radio/main.c:316: break;
                           1854 ;	radio/main.c:317: default:
   0616 80 1F         [24] 1855 	sjmp	00122$
   0618                    1856 00121$:
                           1857 ;	radio/main.c:318: panic("bad board frequency %d", g_board_frequency);
   0618 78r00         [12] 1858 	mov	r0,#_g_board_frequency
   061A E2            [24] 1859 	movx	a,@r0
   061B FE            [12] 1860 	mov	r6,a
   061C 7F 00         [12] 1861 	mov	r7,#0x00
   061E C0 06         [24] 1862 	push	ar6
   0620 C0 07         [24] 1863 	push	ar7
   0622 74r54         [12] 1864 	mov	a,#__str_4
   0624 C0 E0         [24] 1865 	push	acc
   0626 74s00         [12] 1866 	mov	a,#(__str_4 >> 8)
   0628 C0 E0         [24] 1867 	push	acc
   062A 74 80         [12] 1868 	mov	a,#0x80
   062C C0 E0         [24] 1869 	push	acc
   062E 12r00r86      [24] 1870 	lcall	_panic
   0631 E5 81         [12] 1871 	mov	a,sp
   0633 24 FB         [12] 1872 	add	a,#0xfb
   0635 F5 81         [12] 1873 	mov	sp,a
                           1874 ;	radio/main.c:320: }
   0637                    1875 00122$:
                           1876 ;	radio/main.c:322: if (freq_max == freq_min) {
   0637 78r1A         [12] 1877 	mov	r0,#_radio_init_freq_max_1_151
   0639 79r16         [12] 1878 	mov	r1,#_radio_init_freq_min_1_151
   063B E2            [24] 1879 	movx	a,@r0
   063C F5 F0         [12] 1880 	mov	b,a
   063E E3            [24] 1881 	movx	a,@r1
   063F B5 F0 1D      [24] 1882 	cjne	a,b,00205$
   0642 08            [12] 1883 	inc	r0
   0643 E2            [24] 1884 	movx	a,@r0
   0644 F5 F0         [12] 1885 	mov	b,a
   0646 09            [12] 1886 	inc	r1
   0647 E3            [24] 1887 	movx	a,@r1
   0648 B5 F0 14      [24] 1888 	cjne	a,b,00205$
   064B 08            [12] 1889 	inc	r0
   064C E2            [24] 1890 	movx	a,@r0
   064D F5 F0         [12] 1891 	mov	b,a
   064F 09            [12] 1892 	inc	r1
   0650 E3            [24] 1893 	movx	a,@r1
   0651 B5 F0 0B      [24] 1894 	cjne	a,b,00205$
   0654 08            [12] 1895 	inc	r0
   0655 E2            [24] 1896 	movx	a,@r0
   0656 F5 F0         [12] 1897 	mov	b,a
   0658 09            [12] 1898 	inc	r1
   0659 E3            [24] 1899 	movx	a,@r1
   065A B5 F0 02      [24] 1900 	cjne	a,b,00205$
   065D 80 02         [24] 1901 	sjmp	00206$
   065F                    1902 00205$:
   065F 80 1A         [24] 1903 	sjmp	00124$
   0661                    1904 00206$:
                           1905 ;	radio/main.c:323: freq_max = freq_min + 1000000UL;
   0661 78r16         [12] 1906 	mov	r0,#_radio_init_freq_min_1_151
   0663 79r1A         [12] 1907 	mov	r1,#_radio_init_freq_max_1_151
   0665 E2            [24] 1908 	movx	a,@r0
   0666 24 40         [12] 1909 	add	a,#0x40
   0668 F3            [24] 1910 	movx	@r1,a
   0669 08            [12] 1911 	inc	r0
   066A E2            [24] 1912 	movx	a,@r0
   066B 34 42         [12] 1913 	addc	a,#0x42
   066D 09            [12] 1914 	inc	r1
   066E F3            [24] 1915 	movx	@r1,a
   066F 08            [12] 1916 	inc	r0
   0670 E2            [24] 1917 	movx	a,@r0
   0671 34 0F         [12] 1918 	addc	a,#0x0F
   0673 09            [12] 1919 	inc	r1
   0674 F3            [24] 1920 	movx	@r1,a
   0675 08            [12] 1921 	inc	r0
   0676 E2            [24] 1922 	movx	a,@r0
   0677 34 00         [12] 1923 	addc	a,#0x00
   0679 09            [12] 1924 	inc	r1
   067A F3            [24] 1925 	movx	@r1,a
   067B                    1926 00124$:
                           1927 ;	radio/main.c:327: duty_cycle = param_get(PARAM_DUTY_CYCLE);
   067B 75 82 0B      [24] 1928 	mov	dpl,#0x0B
   067E 12r00r00      [24] 1929 	lcall	_param_get
   0681 AC 82         [24] 1930 	mov	r4,dpl
   0683 78r00         [12] 1931 	mov	r0,#_duty_cycle
   0685 EC            [12] 1932 	mov	a,r4
   0686 F2            [24] 1933 	movx	@r0,a
                           1934 ;	radio/main.c:328: duty_cycle = constrain(duty_cycle, 0, 100);
   0687 7F 00         [12] 1935 	mov	r7,#0x00
   0689 7E 00         [12] 1936 	mov	r6,#0x00
   068B 7D 00         [12] 1937 	mov	r5,#0x00
   068D 78r00         [12] 1938 	mov	r0,#_constrain_PARM_2
   068F E4            [12] 1939 	clr	a
   0690 F2            [24] 1940 	movx	@r0,a
   0691 08            [12] 1941 	inc	r0
   0692 F2            [24] 1942 	movx	@r0,a
   0693 08            [12] 1943 	inc	r0
   0694 F2            [24] 1944 	movx	@r0,a
   0695 08            [12] 1945 	inc	r0
   0696 F2            [24] 1946 	movx	@r0,a
   0697 78r00         [12] 1947 	mov	r0,#_constrain_PARM_3
   0699 74 64         [12] 1948 	mov	a,#0x64
   069B F2            [24] 1949 	movx	@r0,a
   069C 08            [12] 1950 	inc	r0
   069D E4            [12] 1951 	clr	a
   069E F2            [24] 1952 	movx	@r0,a
   069F 08            [12] 1953 	inc	r0
   06A0 F2            [24] 1954 	movx	@r0,a
   06A1 08            [12] 1955 	inc	r0
   06A2 F2            [24] 1956 	movx	@r0,a
   06A3 8C 82         [24] 1957 	mov	dpl,r4
   06A5 8F 83         [24] 1958 	mov	dph,r7
   06A7 8E F0         [24] 1959 	mov	b,r6
   06A9 ED            [12] 1960 	mov	a,r5
   06AA 12r00r00      [24] 1961 	lcall	_constrain
   06AD AC 82         [24] 1962 	mov	r4,dpl
   06AF 78r00         [12] 1963 	mov	r0,#_duty_cycle
   06B1 EC            [12] 1964 	mov	a,r4
   06B2 F2            [24] 1965 	movx	@r0,a
                           1966 ;	radio/main.c:329: param_set(PARAM_DUTY_CYCLE, duty_cycle);
   06B3 78r00         [12] 1967 	mov	r0,#_param_set_PARM_2
   06B5 EC            [12] 1968 	mov	a,r4
   06B6 F2            [24] 1969 	movx	@r0,a
   06B7 08            [12] 1970 	inc	r0
   06B8 E4            [12] 1971 	clr	a
   06B9 F2            [24] 1972 	movx	@r0,a
   06BA 08            [12] 1973 	inc	r0
   06BB F2            [24] 1974 	movx	@r0,a
   06BC 08            [12] 1975 	inc	r0
   06BD F2            [24] 1976 	movx	@r0,a
   06BE 75 82 0B      [24] 1977 	mov	dpl,#0x0B
   06C1 12r00r00      [24] 1978 	lcall	_param_set
                           1979 ;	radio/main.c:332: lbt_rssi = param_get(PARAM_LBT_RSSI);
   06C4 75 82 0C      [24] 1980 	mov	dpl,#0x0C
   06C7 12r00r00      [24] 1981 	lcall	_param_get
   06CA AC 82         [24] 1982 	mov	r4,dpl
   06CC AD 83         [24] 1983 	mov	r5,dph
   06CE AE F0         [24] 1984 	mov	r6,b
   06D0 FF            [12] 1985 	mov	r7,a
   06D1 78r00         [12] 1986 	mov	r0,#_lbt_rssi
   06D3 EC            [12] 1987 	mov	a,r4
   06D4 F2            [24] 1988 	movx	@r0,a
                           1989 ;	radio/main.c:333: if (lbt_rssi != 0) {
   06D5 EC            [12] 1990 	mov	a,r4
   06D6 60 33         [24] 1991 	jz	00126$
                           1992 ;	radio/main.c:335: lbt_rssi = constrain(lbt_rssi, 25, 220);
   06D8 7F 00         [12] 1993 	mov	r7,#0x00
   06DA 7E 00         [12] 1994 	mov	r6,#0x00
   06DC 7D 00         [12] 1995 	mov	r5,#0x00
   06DE 78r00         [12] 1996 	mov	r0,#_constrain_PARM_2
   06E0 74 19         [12] 1997 	mov	a,#0x19
   06E2 F2            [24] 1998 	movx	@r0,a
   06E3 08            [12] 1999 	inc	r0
   06E4 E4            [12] 2000 	clr	a
   06E5 F2            [24] 2001 	movx	@r0,a
   06E6 08            [12] 2002 	inc	r0
   06E7 F2            [24] 2003 	movx	@r0,a
   06E8 08            [12] 2004 	inc	r0
   06E9 F2            [24] 2005 	movx	@r0,a
   06EA 78r00         [12] 2006 	mov	r0,#_constrain_PARM_3
   06EC 74 DC         [12] 2007 	mov	a,#0xDC
   06EE F2            [24] 2008 	movx	@r0,a
   06EF 08            [12] 2009 	inc	r0
   06F0 E4            [12] 2010 	clr	a
   06F1 F2            [24] 2011 	movx	@r0,a
   06F2 08            [12] 2012 	inc	r0
   06F3 F2            [24] 2013 	movx	@r0,a
   06F4 08            [12] 2014 	inc	r0
   06F5 F2            [24] 2015 	movx	@r0,a
   06F6 8C 82         [24] 2016 	mov	dpl,r4
   06F8 8F 83         [24] 2017 	mov	dph,r7
   06FA 8E F0         [24] 2018 	mov	b,r6
   06FC ED            [12] 2019 	mov	a,r5
   06FD 12r00r00      [24] 2020 	lcall	_constrain
   0700 AC 82         [24] 2021 	mov	r4,dpl
   0702 AD 83         [24] 2022 	mov	r5,dph
   0704 AE F0         [24] 2023 	mov	r6,b
   0706 FF            [12] 2024 	mov	r7,a
   0707 78r00         [12] 2025 	mov	r0,#_lbt_rssi
   0709 EC            [12] 2026 	mov	a,r4
   070A F2            [24] 2027 	movx	@r0,a
   070B                    2028 00126$:
                           2029 ;	radio/main.c:337: param_set(PARAM_LBT_RSSI, lbt_rssi);
   070B 78r00         [12] 2030 	mov	r0,#_lbt_rssi
   070D 79r00         [12] 2031 	mov	r1,#_param_set_PARM_2
   070F E2            [24] 2032 	movx	a,@r0
   0710 F3            [24] 2033 	movx	@r1,a
   0711 09            [12] 2034 	inc	r1
   0712 E4            [12] 2035 	clr	a
   0713 F3            [24] 2036 	movx	@r1,a
   0714 09            [12] 2037 	inc	r1
   0715 F3            [24] 2038 	movx	@r1,a
   0716 09            [12] 2039 	inc	r1
   0717 F3            [24] 2040 	movx	@r1,a
   0718 75 82 0C      [24] 2041 	mov	dpl,#0x0C
   071B 12r00r00      [24] 2042 	lcall	_param_set
                           2043 ;	radio/main.c:340: param_set(PARAM_MIN_FREQ, freq_min/1000);
   071E 90r00r00      [24] 2044 	mov	dptr,#__divulong_PARM_2
   0721 74 E8         [12] 2045 	mov	a,#0xE8
   0723 F0            [24] 2046 	movx	@dptr,a
   0724 74 03         [12] 2047 	mov	a,#0x03
   0726 A3            [24] 2048 	inc	dptr
   0727 F0            [24] 2049 	movx	@dptr,a
   0728 E4            [12] 2050 	clr	a
   0729 A3            [24] 2051 	inc	dptr
   072A F0            [24] 2052 	movx	@dptr,a
   072B E4            [12] 2053 	clr	a
   072C A3            [24] 2054 	inc	dptr
   072D F0            [24] 2055 	movx	@dptr,a
   072E 78r16         [12] 2056 	mov	r0,#_radio_init_freq_min_1_151
   0730 E2            [24] 2057 	movx	a,@r0
   0731 F5 82         [12] 2058 	mov	dpl,a
   0733 08            [12] 2059 	inc	r0
   0734 E2            [24] 2060 	movx	a,@r0
   0735 F5 83         [12] 2061 	mov	dph,a
   0737 08            [12] 2062 	inc	r0
   0738 E2            [24] 2063 	movx	a,@r0
   0739 F5 F0         [12] 2064 	mov	b,a
   073B 08            [12] 2065 	inc	r0
   073C E2            [24] 2066 	movx	a,@r0
   073D 12r00r00      [24] 2067 	lcall	__divulong
   0740 AC 82         [24] 2068 	mov	r4,dpl
   0742 AD 83         [24] 2069 	mov	r5,dph
   0744 AE F0         [24] 2070 	mov	r6,b
   0746 FF            [12] 2071 	mov	r7,a
   0747 78r00         [12] 2072 	mov	r0,#_param_set_PARM_2
   0749 EC            [12] 2073 	mov	a,r4
   074A F2            [24] 2074 	movx	@r0,a
   074B 08            [12] 2075 	inc	r0
   074C ED            [12] 2076 	mov	a,r5
   074D F2            [24] 2077 	movx	@r0,a
   074E 08            [12] 2078 	inc	r0
   074F EE            [12] 2079 	mov	a,r6
   0750 F2            [24] 2080 	movx	@r0,a
   0751 08            [12] 2081 	inc	r0
   0752 EF            [12] 2082 	mov	a,r7
   0753 F2            [24] 2083 	movx	@r0,a
   0754 75 82 08      [24] 2084 	mov	dpl,#0x08
   0757 12r00r00      [24] 2085 	lcall	_param_set
                           2086 ;	radio/main.c:341: param_set(PARAM_MAX_FREQ, freq_max/1000);
   075A 90r00r00      [24] 2087 	mov	dptr,#__divulong_PARM_2
   075D 74 E8         [12] 2088 	mov	a,#0xE8
   075F F0            [24] 2089 	movx	@dptr,a
   0760 74 03         [12] 2090 	mov	a,#0x03
   0762 A3            [24] 2091 	inc	dptr
   0763 F0            [24] 2092 	movx	@dptr,a
   0764 E4            [12] 2093 	clr	a
   0765 A3            [24] 2094 	inc	dptr
   0766 F0            [24] 2095 	movx	@dptr,a
   0767 E4            [12] 2096 	clr	a
   0768 A3            [24] 2097 	inc	dptr
   0769 F0            [24] 2098 	movx	@dptr,a
   076A 78r1A         [12] 2099 	mov	r0,#_radio_init_freq_max_1_151
   076C E2            [24] 2100 	movx	a,@r0
   076D F5 82         [12] 2101 	mov	dpl,a
   076F 08            [12] 2102 	inc	r0
   0770 E2            [24] 2103 	movx	a,@r0
   0771 F5 83         [12] 2104 	mov	dph,a
   0773 08            [12] 2105 	inc	r0
   0774 E2            [24] 2106 	movx	a,@r0
   0775 F5 F0         [12] 2107 	mov	b,a
   0777 08            [12] 2108 	inc	r0
   0778 E2            [24] 2109 	movx	a,@r0
   0779 12r00r00      [24] 2110 	lcall	__divulong
   077C AC 82         [24] 2111 	mov	r4,dpl
   077E AD 83         [24] 2112 	mov	r5,dph
   0780 AE F0         [24] 2113 	mov	r6,b
   0782 FF            [12] 2114 	mov	r7,a
   0783 78r00         [12] 2115 	mov	r0,#_param_set_PARM_2
   0785 EC            [12] 2116 	mov	a,r4
   0786 F2            [24] 2117 	movx	@r0,a
   0787 08            [12] 2118 	inc	r0
   0788 ED            [12] 2119 	mov	a,r5
   0789 F2            [24] 2120 	movx	@r0,a
   078A 08            [12] 2121 	inc	r0
   078B EE            [12] 2122 	mov	a,r6
   078C F2            [24] 2123 	movx	@r0,a
   078D 08            [12] 2124 	inc	r0
   078E EF            [12] 2125 	mov	a,r7
   078F F2            [24] 2126 	movx	@r0,a
   0790 75 82 09      [24] 2127 	mov	dpl,#0x09
   0793 12r00r00      [24] 2128 	lcall	_param_set
                           2129 ;	radio/main.c:342: param_set(PARAM_NUM_CHANNELS, num_fh_channels);
   0796 78r00         [12] 2130 	mov	r0,#_num_fh_channels
   0798 79r00         [12] 2131 	mov	r1,#_param_set_PARM_2
   079A E2            [24] 2132 	movx	a,@r0
   079B F3            [24] 2133 	movx	@r1,a
   079C 09            [12] 2134 	inc	r1
   079D E4            [12] 2135 	clr	a
   079E F3            [24] 2136 	movx	@r1,a
   079F 09            [12] 2137 	inc	r1
   07A0 F3            [24] 2138 	movx	@r1,a
   07A1 09            [12] 2139 	inc	r1
   07A2 F3            [24] 2140 	movx	@r1,a
   07A3 75 82 0A      [24] 2141 	mov	dpl,#0x0A
   07A6 12r00r00      [24] 2142 	lcall	_param_set
                           2143 ;	radio/main.c:344: channel_spacing = (freq_max - freq_min) / (num_fh_channels+2);
   07A9 78r1A         [12] 2144 	mov	r0,#_radio_init_freq_max_1_151
   07AB 79r16         [12] 2145 	mov	r1,#_radio_init_freq_min_1_151
   07AD E3            [24] 2146 	movx	a,@r1
   07AE F5 F0         [12] 2147 	mov	b,a
   07B0 C3            [12] 2148 	clr	c
   07B1 E2            [24] 2149 	movx	a,@r0
   07B2 95 F0         [12] 2150 	subb	a,b
   07B4 FC            [12] 2151 	mov	r4,a
   07B5 09            [12] 2152 	inc	r1
   07B6 E3            [24] 2153 	movx	a,@r1
   07B7 F5 F0         [12] 2154 	mov	b,a
   07B9 08            [12] 2155 	inc	r0
   07BA E2            [24] 2156 	movx	a,@r0
   07BB 95 F0         [12] 2157 	subb	a,b
   07BD FD            [12] 2158 	mov	r5,a
   07BE 09            [12] 2159 	inc	r1
   07BF E3            [24] 2160 	movx	a,@r1
   07C0 F5 F0         [12] 2161 	mov	b,a
   07C2 08            [12] 2162 	inc	r0
   07C3 E2            [24] 2163 	movx	a,@r0
   07C4 95 F0         [12] 2164 	subb	a,b
   07C6 FE            [12] 2165 	mov	r6,a
   07C7 09            [12] 2166 	inc	r1
   07C8 E3            [24] 2167 	movx	a,@r1
   07C9 F5 F0         [12] 2168 	mov	b,a
   07CB 08            [12] 2169 	inc	r0
   07CC E2            [24] 2170 	movx	a,@r0
   07CD 95 F0         [12] 2171 	subb	a,b
   07CF FF            [12] 2172 	mov	r7,a
   07D0 78r00         [12] 2173 	mov	r0,#_num_fh_channels
   07D2 E2            [24] 2174 	movx	a,@r0
   07D3 FA            [12] 2175 	mov	r2,a
   07D4 7B 00         [12] 2176 	mov	r3,#0x00
   07D6 74 02         [12] 2177 	mov	a,#0x02
   07D8 2A            [12] 2178 	add	a,r2
   07D9 FA            [12] 2179 	mov	r2,a
   07DA E4            [12] 2180 	clr	a
   07DB 3B            [12] 2181 	addc	a,r3
   07DC FB            [12] 2182 	mov	r3,a
   07DD 90r00r00      [24] 2183 	mov	dptr,#__divulong_PARM_2
   07E0 EA            [12] 2184 	mov	a,r2
   07E1 F0            [24] 2185 	movx	@dptr,a
   07E2 EB            [12] 2186 	mov	a,r3
   07E3 A3            [24] 2187 	inc	dptr
   07E4 F0            [24] 2188 	movx	@dptr,a
   07E5 EB            [12] 2189 	mov	a,r3
   07E6 33            [12] 2190 	rlc	a
   07E7 95 E0         [12] 2191 	subb	a,acc
   07E9 A3            [24] 2192 	inc	dptr
   07EA F0            [24] 2193 	movx	@dptr,a
   07EB A3            [24] 2194 	inc	dptr
   07EC F0            [24] 2195 	movx	@dptr,a
   07ED 8C 82         [24] 2196 	mov	dpl,r4
   07EF 8D 83         [24] 2197 	mov	dph,r5
   07F1 8E F0         [24] 2198 	mov	b,r6
   07F3 EF            [12] 2199 	mov	a,r7
   07F4 12r00r00      [24] 2200 	lcall	__divulong
   07F7 78r1E         [12] 2201 	mov	r0,#_radio_init_channel_spacing_1_151
   07F9 C0 E0         [24] 2202 	push	acc
   07FB E5 82         [12] 2203 	mov	a,dpl
   07FD F2            [24] 2204 	movx	@r0,a
   07FE 08            [12] 2205 	inc	r0
   07FF E5 83         [12] 2206 	mov	a,dph
   0801 F2            [24] 2207 	movx	@r0,a
   0802 08            [12] 2208 	inc	r0
   0803 E5 F0         [12] 2209 	mov	a,b
   0805 F2            [24] 2210 	movx	@r0,a
   0806 D0 E0         [24] 2211 	pop	acc
   0808 08            [12] 2212 	inc	r0
   0809 F2            [24] 2213 	movx	@r0,a
                           2214 ;	radio/main.c:348: freq_min += channel_spacing/2;
   080A 78r21         [12] 2215 	mov	r0,#(_radio_init_channel_spacing_1_151 + 3)
   080C E2            [24] 2216 	movx	a,@r0
   080D C3            [12] 2217 	clr	c
   080E 13            [12] 2218 	rrc	a
   080F FF            [12] 2219 	mov	r7,a
   0810 18            [12] 2220 	dec	r0
   0811 E2            [24] 2221 	movx	a,@r0
   0812 13            [12] 2222 	rrc	a
   0813 FE            [12] 2223 	mov	r6,a
   0814 18            [12] 2224 	dec	r0
   0815 E2            [24] 2225 	movx	a,@r0
   0816 13            [12] 2226 	rrc	a
   0817 FB            [12] 2227 	mov	r3,a
   0818 18            [12] 2228 	dec	r0
   0819 E2            [24] 2229 	movx	a,@r0
   081A 13            [12] 2230 	rrc	a
   081B FA            [12] 2231 	mov	r2,a
   081C 78r16         [12] 2232 	mov	r0,#_radio_init_freq_min_1_151
   081E E2            [24] 2233 	movx	a,@r0
   081F 2A            [12] 2234 	add	a,r2
   0820 F2            [24] 2235 	movx	@r0,a
   0821 08            [12] 2236 	inc	r0
   0822 E2            [24] 2237 	movx	a,@r0
   0823 3B            [12] 2238 	addc	a,r3
   0824 F2            [24] 2239 	movx	@r0,a
   0825 08            [12] 2240 	inc	r0
   0826 E2            [24] 2241 	movx	a,@r0
   0827 3E            [12] 2242 	addc	a,r6
   0828 F2            [24] 2243 	movx	@r0,a
   0829 08            [12] 2244 	inc	r0
   082A E2            [24] 2245 	movx	a,@r0
   082B 3F            [12] 2246 	addc	a,r7
   082C F2            [24] 2247 	movx	@r0,a
                           2248 ;	radio/main.c:353: srand(param_get(PARAM_NETID));
   082D 75 82 03      [24] 2249 	mov	dpl,#0x03
   0830 12r00r00      [24] 2250 	lcall	_param_get
   0833 12r00r00      [24] 2251 	lcall	_srand
                           2252 ;	radio/main.c:354: if (num_fh_channels > 5) {
   0836 78r00         [12] 2253 	mov	r0,#_num_fh_channels
   0838 C3            [12] 2254 	clr	c
   0839 E2            [24] 2255 	movx	a,@r0
   083A F5 F0         [12] 2256 	mov	b,a
   083C 74 05         [12] 2257 	mov	a,#0x05
   083E 95 F0         [12] 2258 	subb	a,b
   0840 50 54         [24] 2259 	jnc	00128$
                           2260 ;	radio/main.c:355: freq_min += ((unsigned long)(rand()*625)) % channel_spacing;
   0842 12r00r00      [24] 2261 	lcall	_rand
   0845 AE 82         [24] 2262 	mov	r6,dpl
   0847 AF 83         [24] 2263 	mov	r7,dph
   0849 90r00r00      [24] 2264 	mov	dptr,#__mulint_PARM_2
   084C EE            [12] 2265 	mov	a,r6
   084D F0            [24] 2266 	movx	@dptr,a
   084E EF            [12] 2267 	mov	a,r7
   084F A3            [24] 2268 	inc	dptr
   0850 F0            [24] 2269 	movx	@dptr,a
   0851 90 02 71      [24] 2270 	mov	dptr,#0x0271
   0854 12r00r00      [24] 2271 	lcall	__mulint
   0857 AE 82         [24] 2272 	mov	r6,dpl
   0859 E5 83         [12] 2273 	mov	a,dph
   085B FF            [12] 2274 	mov	r7,a
   085C 33            [12] 2275 	rlc	a
   085D 95 E0         [12] 2276 	subb	a,acc
   085F FD            [12] 2277 	mov	r5,a
   0860 FC            [12] 2278 	mov	r4,a
   0861 78r1E         [12] 2279 	mov	r0,#_radio_init_channel_spacing_1_151
   0863 90r00r00      [24] 2280 	mov	dptr,#__modulong_PARM_2
   0866 E2            [24] 2281 	movx	a,@r0
   0867 F0            [24] 2282 	movx	@dptr,a
   0868 08            [12] 2283 	inc	r0
   0869 E2            [24] 2284 	movx	a,@r0
   086A A3            [24] 2285 	inc	dptr
   086B F0            [24] 2286 	movx	@dptr,a
   086C 08            [12] 2287 	inc	r0
   086D E2            [24] 2288 	movx	a,@r0
   086E A3            [24] 2289 	inc	dptr
   086F F0            [24] 2290 	movx	@dptr,a
   0870 08            [12] 2291 	inc	r0
   0871 E2            [24] 2292 	movx	a,@r0
   0872 A3            [24] 2293 	inc	dptr
   0873 F0            [24] 2294 	movx	@dptr,a
   0874 8E 82         [24] 2295 	mov	dpl,r6
   0876 8F 83         [24] 2296 	mov	dph,r7
   0878 8D F0         [24] 2297 	mov	b,r5
   087A EC            [12] 2298 	mov	a,r4
   087B 12r00r00      [24] 2299 	lcall	__modulong
   087E AC 82         [24] 2300 	mov	r4,dpl
   0880 AD 83         [24] 2301 	mov	r5,dph
   0882 AE F0         [24] 2302 	mov	r6,b
   0884 FF            [12] 2303 	mov	r7,a
   0885 78r16         [12] 2304 	mov	r0,#_radio_init_freq_min_1_151
   0887 E2            [24] 2305 	movx	a,@r0
   0888 2C            [12] 2306 	add	a,r4
   0889 F2            [24] 2307 	movx	@r0,a
   088A 08            [12] 2308 	inc	r0
   088B E2            [24] 2309 	movx	a,@r0
   088C 3D            [12] 2310 	addc	a,r5
   088D F2            [24] 2311 	movx	@r0,a
   088E 08            [12] 2312 	inc	r0
   088F E2            [24] 2313 	movx	a,@r0
   0890 3E            [12] 2314 	addc	a,r6
   0891 F2            [24] 2315 	movx	@r0,a
   0892 08            [12] 2316 	inc	r0
   0893 E2            [24] 2317 	movx	a,@r0
   0894 3F            [12] 2318 	addc	a,r7
   0895 F2            [24] 2319 	movx	@r0,a
   0896                    2320 00128$:
                           2321 ;	radio/main.c:363: radio_set_frequency(freq_min);
   0896 78r16         [12] 2322 	mov	r0,#_radio_init_freq_min_1_151
   0898 E2            [24] 2323 	movx	a,@r0
   0899 F5 82         [12] 2324 	mov	dpl,a
   089B 08            [12] 2325 	inc	r0
   089C E2            [24] 2326 	movx	a,@r0
   089D F5 83         [12] 2327 	mov	dph,a
   089F 08            [12] 2328 	inc	r0
   08A0 E2            [24] 2329 	movx	a,@r0
   08A1 F5 F0         [12] 2330 	mov	b,a
   08A3 08            [12] 2331 	inc	r0
   08A4 E2            [24] 2332 	movx	a,@r0
   08A5 12r00r00      [24] 2333 	lcall	_radio_set_frequency
                           2334 ;	radio/main.c:366: radio_set_channel_spacing(channel_spacing);
   08A8 78r1E         [12] 2335 	mov	r0,#_radio_init_channel_spacing_1_151
   08AA E2            [24] 2336 	movx	a,@r0
   08AB F5 82         [12] 2337 	mov	dpl,a
   08AD 08            [12] 2338 	inc	r0
   08AE E2            [24] 2339 	movx	a,@r0
   08AF F5 83         [12] 2340 	mov	dph,a
   08B1 08            [12] 2341 	inc	r0
   08B2 E2            [24] 2342 	movx	a,@r0
   08B3 F5 F0         [12] 2343 	mov	b,a
   08B5 08            [12] 2344 	inc	r0
   08B6 E2            [24] 2345 	movx	a,@r0
   08B7 12r00r00      [24] 2346 	lcall	_radio_set_channel_spacing
                           2347 ;	radio/main.c:369: radio_set_channel(param_get(PARAM_NETID) % num_fh_channels);
   08BA 75 82 03      [24] 2348 	mov	dpl,#0x03
   08BD 12r00r00      [24] 2349 	lcall	_param_get
   08C0 AC 82         [24] 2350 	mov	r4,dpl
   08C2 AD 83         [24] 2351 	mov	r5,dph
   08C4 AE F0         [24] 2352 	mov	r6,b
   08C6 FF            [12] 2353 	mov	r7,a
   08C7 78r00         [12] 2354 	mov	r0,#_num_fh_channels
   08C9 90r00r00      [24] 2355 	mov	dptr,#__modulong_PARM_2
   08CC E2            [24] 2356 	movx	a,@r0
   08CD F0            [24] 2357 	movx	@dptr,a
   08CE E4            [12] 2358 	clr	a
   08CF A3            [24] 2359 	inc	dptr
   08D0 F0            [24] 2360 	movx	@dptr,a
   08D1 E4            [12] 2361 	clr	a
   08D2 A3            [24] 2362 	inc	dptr
   08D3 F0            [24] 2363 	movx	@dptr,a
   08D4 E4            [12] 2364 	clr	a
   08D5 A3            [24] 2365 	inc	dptr
   08D6 F0            [24] 2366 	movx	@dptr,a
   08D7 8C 82         [24] 2367 	mov	dpl,r4
   08D9 8D 83         [24] 2368 	mov	dph,r5
   08DB 8E F0         [24] 2369 	mov	b,r6
   08DD EF            [12] 2370 	mov	a,r7
   08DE 12r00r00      [24] 2371 	lcall	__modulong
   08E1 AC 82         [24] 2372 	mov	r4,dpl
   08E3 8C 82         [24] 2373 	mov	dpl,r4
   08E5 12r00r00      [24] 2374 	lcall	_radio_set_channel
                           2375 ;	radio/main.c:372: if (!radio_configure(param_get(PARAM_AIR_SPEED)) &&
   08E8 75 82 02      [24] 2376 	mov	dpl,#0x02
   08EB 12r00r00      [24] 2377 	lcall	_param_get
   08EE AC 82         [24] 2378 	mov	r4,dpl
   08F0 8C 82         [24] 2379 	mov	dpl,r4
   08F2 12r00r00      [24] 2380 	lcall	_radio_configure
   08F5 40 33         [24] 2381 	jc	00130$
                           2382 ;	radio/main.c:373: !radio_configure(param_get(PARAM_AIR_SPEED)) &&
   08F7 75 82 02      [24] 2383 	mov	dpl,#0x02
   08FA 12r00r00      [24] 2384 	lcall	_param_get
   08FD AC 82         [24] 2385 	mov	r4,dpl
   08FF 8C 82         [24] 2386 	mov	dpl,r4
   0901 12r00r00      [24] 2387 	lcall	_radio_configure
   0904 40 24         [24] 2388 	jc	00130$
                           2389 ;	radio/main.c:374: !radio_configure(param_get(PARAM_AIR_SPEED))) {
   0906 75 82 02      [24] 2390 	mov	dpl,#0x02
   0909 12r00r00      [24] 2391 	lcall	_param_get
   090C AC 82         [24] 2392 	mov	r4,dpl
   090E 8C 82         [24] 2393 	mov	dpl,r4
   0910 12r00r00      [24] 2394 	lcall	_radio_configure
   0913 40 15         [24] 2395 	jc	00130$
                           2396 ;	radio/main.c:375: panic("radio_configure failed");
   0915 74r6B         [12] 2397 	mov	a,#__str_5
   0917 C0 E0         [24] 2398 	push	acc
   0919 74s00         [12] 2399 	mov	a,#(__str_5 >> 8)
   091B C0 E0         [24] 2400 	push	acc
   091D 74 80         [12] 2401 	mov	a,#0x80
   091F C0 E0         [24] 2402 	push	acc
   0921 12r00r86      [24] 2403 	lcall	_panic
   0924 15 81         [12] 2404 	dec	sp
   0926 15 81         [12] 2405 	dec	sp
   0928 15 81         [12] 2406 	dec	sp
   092A                    2407 00130$:
                           2408 ;	radio/main.c:379: param_set(PARAM_AIR_SPEED, radio_air_rate());
   092A 12r00r00      [24] 2409 	lcall	_radio_air_rate
   092D AF 82         [24] 2410 	mov	r7,dpl
   092F 78r00         [12] 2411 	mov	r0,#_param_set_PARM_2
   0931 EF            [12] 2412 	mov	a,r7
   0932 F2            [24] 2413 	movx	@r0,a
   0933 08            [12] 2414 	inc	r0
   0934 E4            [12] 2415 	clr	a
   0935 F2            [24] 2416 	movx	@r0,a
   0936 08            [12] 2417 	inc	r0
   0937 F2            [24] 2418 	movx	@r0,a
   0938 08            [12] 2419 	inc	r0
   0939 F2            [24] 2420 	movx	@r0,a
   093A 75 82 02      [24] 2421 	mov	dpl,#0x02
   093D 12r00r00      [24] 2422 	lcall	_param_set
                           2423 ;	radio/main.c:382: radio_set_network_id(param_get(PARAM_NETID));
   0940 75 82 03      [24] 2424 	mov	dpl,#0x03
   0943 12r00r00      [24] 2425 	lcall	_param_get
   0946 12r00r00      [24] 2426 	lcall	_radio_set_network_id
                           2427 ;	radio/main.c:385: radio_set_transmit_power(txpower);
   0949 78r22         [12] 2428 	mov	r0,#_radio_init_txpower_1_151
   094B E2            [24] 2429 	movx	a,@r0
   094C F5 82         [12] 2430 	mov	dpl,a
   094E 12r00r00      [24] 2431 	lcall	_radio_set_transmit_power
                           2432 ;	radio/main.c:388: param_set(PARAM_TXPOWER, radio_get_transmit_power());
   0951 12r00r00      [24] 2433 	lcall	_radio_get_transmit_power
   0954 AF 82         [24] 2434 	mov	r7,dpl
   0956 78r00         [12] 2435 	mov	r0,#_param_set_PARM_2
   0958 EF            [12] 2436 	mov	a,r7
   0959 F2            [24] 2437 	movx	@r0,a
   095A 08            [12] 2438 	inc	r0
   095B E4            [12] 2439 	clr	a
   095C F2            [24] 2440 	movx	@r0,a
   095D 08            [12] 2441 	inc	r0
   095E F2            [24] 2442 	movx	@r0,a
   095F 08            [12] 2443 	inc	r0
   0960 F2            [24] 2444 	movx	@r0,a
   0961 75 82 04      [24] 2445 	mov	dpl,#0x04
   0964 12r00r00      [24] 2446 	lcall	_param_set
                           2447 ;	radio/main.c:396: fhop_init(param_get(PARAM_NETID));
   0967 75 82 03      [24] 2448 	mov	dpl,#0x03
   096A 12r00r00      [24] 2449 	lcall	_param_get
   096D 12r00r00      [24] 2450 	lcall	_fhop_init
                           2451 ;	radio/main.c:399: tdm_init();
   0970 02r00r00      [24] 2452 	ljmp	_tdm_init
                           2453 	.area CSEG    (CODE)
                           2454 	.area CONST   (CODE)
   0000                    2455 _g_banner_string:
   0000 53 69 4B 20 31 2E  2456 	.ascii "SiK 1.7 on RFD900"
        37 20 6F 6E 20 52
        46 44 39 30 30
   0011 00                 2457 	.db 0x00
   0012                    2458 _g_version_string:
   0012 31 2E 37           2459 	.ascii "1.7"
   0015 00                 2460 	.db 0x00
   0016                    2461 __str_0:
   0016 66 61 69 6C 65 64  2462 	.ascii "failed to enable receiver"
        20 74 6F 20 65 6E
        61 62 6C 65 20 72
        65 63 65 69 76 65
        72
   002F 00                 2463 	.db 0x00
   0030                    2464 __str_1:
   0030 0A                 2465 	.db 0x0A
   0031 2A 2A 50 41 4E 49  2466 	.ascii "**PANIC**"
        43 2A 2A
   003A 00                 2467 	.db 0x00
   003B                    2468 __str_2:
   003B 00                 2469 	.db 0x00
   003C                    2470 __str_3:
   003C 72 61 64 69 6F 5F  2471 	.ascii "radio_initialise failed"
        69 6E 69 74 69 61
        6C 69 73 65 20 66
        61 69 6C 65 64
   0053 00                 2472 	.db 0x00
   0054                    2473 __str_4:
   0054 62 61 64 20 62 6F  2474 	.ascii "bad board frequency %d"
        61 72 64 20 66 72
        65 71 75 65 6E 63
        79 20 25 64
   006A 00                 2475 	.db 0x00
   006B                    2476 __str_5:
   006B 72 61 64 69 6F 5F  2477 	.ascii "radio_configure failed"
        63 6F 6E 66 69 67
        75 72 65 20 66 61
        69 6C 65 64
   0081 00                 2478 	.db 0x00
                           2479 	.area XINIT   (CODE)
                           2480 	.area CABS    (ABS,CODE)
